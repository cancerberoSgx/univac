// @ts-nocheck
// Generated from Scala.g4 by ANTLR 4.7.2
// jshint ignore: start
var antlr4 = require('antlr4/index');
var ScalaListener = require('./ScalaListener').ScalaListener;
var grammarFileName = "Scala.g4";


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0003P\u0591\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t",
    "\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004",
    "\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004",
    "\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004",
    "\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t",
    "\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004",
    "\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t",
    "\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e\u0004",
    "\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004$\t$\u0004",
    "%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004+\t+\u0004",
    ",\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u00042\t2\u0004",
    "3\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u00049\t9\u0004",
    ":\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004@\t@\u0004",
    "A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004G\tG\u0004",
    "H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004N\tN\u0004",
    "O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004U\tU\u0004",
    "V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004\\\t\\\u0004",
    "]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004c\tc\u0004",
    "d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0003\u0002\u0005\u0002",
    "\u00d2\n\u0002\u0003\u0002\u0003\u0002\u0005\u0002\u00d6\n\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0005",
    "\u0002\u00de\n\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0007\u0003",
    "\u00e3\n\u0003\f\u0003\u000e\u0003\u00e6\u000b\u0003\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0007\u0004\u00eb\n\u0004\f\u0004\u000e\u0004\u00ee",
    "\u000b\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u00f3\n",
    "\u0005\u0003\u0005\u0005\u0005\u00f6\n\u0005\u0003\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0005\u0005\u00fc\n\u0005\u0003\u0005\u0003",
    "\u0005\u0005\u0005\u0100\n\u0005\u0003\u0005\u0003\u0005\u0005\u0005",
    "\u0104\n\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003",
    "\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0005",
    "\u0007\u0110\n\u0007\u0005\u0007\u0112\n\u0007\u0003\b\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0007\b\u0119\n\b\f\b\u000e\b\u011c\u000b\b\u0005",
    "\b\u011e\n\b\u0003\b\u0005\b\u0121\n\b\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0007\t\u0128\n\t\f\t\u000e\t\u012b\u000b\t\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\n\u0003\n\u0005\n\u0133\n\n\u0003\u000b\u0003",
    "\u000b\u0003\u000b\u0007\u000b\u0138\n\u000b\f\u000b\u000e\u000b\u013b",
    "\u000b\u000b\u0003\f\u0003\f\u0003\f\u0007\f\u0140\n\f\f\f\u000e\f\u0143",
    "\u000b\f\u0003\f\u0005\f\u0146\n\f\u0003\f\u0005\f\u0149\n\f\u0003\r",
    "\u0003\r\u0007\r\u014d\n\r\f\r\u000e\r\u0150\u000b\r\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0005\u000e\u0157\n\u000e",
    "\u0003\u000e\u0005\u000e\u015a\n\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0005\u000e\u0162\n\u000e",
    "\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0007\u000e",
    "\u0169\n\u000e\f\u000e\u000e\u000e\u016c\u000b\u000e\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0007",
    "\u0010\u0175\n\u0010\f\u0010\u000e\u0010\u0178\u000b\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0007\u0011\u017e\n\u0011\f\u0011",
    "\u000e\u0011\u0181\u000b\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003",
    "\u0012\u0003\u0012\u0003\u0012\u0005\u0012\u0189\n\u0012\u0003\u0013",
    "\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0006\u0014",
    "\u0191\n\u0014\r\u0014\u000e\u0014\u0192\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0005\u0014\u0198\n\u0014\u0003\u0015\u0003\u0015\u0005\u0015",
    "\u019c\n\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u01a0\n\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u01a5\n\u0015\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016",
    "\u01ad\n\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u01b1\n\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005",
    "\u0016\u01bf\n\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0005\u0016\u01c6\n\u0016\u0003\u0016\u0003\u0016\u0005",
    "\u0016\u01ca\n\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016",
    "\u01cf\n\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u01df\n\u0016",
    "\u0003\u0016\u0005\u0016\u01e2\n\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u01ea\n\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u01ef\n\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u01f4\n\u0016\u0005\u0016",
    "\u01f6\n\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u020d",
    "\n\u0016\u0003\u0017\u0003\u0017\u0005\u0017\u0211\n\u0017\u0003\u0018",
    "\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0007\u0018",
    "\u0219\n\u0018\f\u0018\u000e\u0018\u021c\u000b\u0018\u0003\u0019\u0005",
    "\u0019\u021f\n\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0005\u0019",
    "\u0224\n\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0005\u0019\u0229",
    "\n\u0019\u0005\u0019\u022b\n\u0019\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0005\u001a\u0232\n\u001a\u0003\u001a\u0003",
    "\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u0238\n\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u023e\n\u001a\u0003",
    "\u001a\u0005\u001a\u0241\n\u001a\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u0249\n\u001a\u0003",
    "\u001a\u0005\u001a\u024c\n\u001a\u0003\u001a\u0003\u001a\u0005\u001a",
    "\u0250\n\u001a\u0003\u001a\u0003\u001a\u0007\u001a\u0254\n\u001a\f\u001a",
    "\u000e\u001a\u0257\u000b\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0007",
    "\u001b\u025c\n\u001b\f\u001b\u000e\u001b\u025f\u000b\u001b\u0003\u001c",
    "\u0003\u001c\u0005\u001c\u0263\n\u001c\u0003\u001c\u0003\u001c\u0003",
    "\u001c\u0003\u001c\u0003\u001c\u0005\u001c\u026a\n\u001c\u0003\u001c",
    "\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c",
    "\u0005\u001c\u0273\n\u001c\u0003\u001d\u0003\u001d\u0003\u001d\u0003",
    "\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0005\u001d\u027d",
    "\n\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0007\u001e\u0282\n\u001e",
    "\f\u001e\u000e\u001e\u0285\u000b\u001e\u0003\u001e\u0005\u001e\u0288",
    "\n\u001e\u0003\u001f\u0003\u001f\u0007\u001f\u028c\n\u001f\f\u001f\u000e",
    "\u001f\u028f\u000b\u001f\u0003\u001f\u0005\u001f\u0292\n\u001f\u0003",
    "\u001f\u0003\u001f\u0007\u001f\u0296\n\u001f\f\u001f\u000e\u001f\u0299",
    "\u000b\u001f\u0003\u001f\u0007\u001f\u029c\n\u001f\f\u001f\u000e\u001f",
    "\u029f\u000b\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0005\u001f\u02a4",
    "\n\u001f\u0003 \u0003 \u0003 \u0005 \u02a9\n \u0003 \u0003 \u0005 \u02ad",
    "\n \u0003 \u0003 \u0005 \u02b1\n \u0003 \u0003 \u0003 \u0005 \u02b6",
    "\n \u0003!\u0003!\u0003!\u0007!\u02bb\n!\f!\u000e!\u02be\u000b!\u0003",
    "\"\u0003\"\u0003\"\u0003\"\u0005\"\u02c4\n\"\u0003\"\u0003\"\u0003\"",
    "\u0003\"\u0003\"\u0003\"\u0007\"\u02cc\n\"\f\"\u000e\"\u02cf\u000b\"",
    "\u0003#\u0006#\u02d2\n#\r#\u000e#\u02d3\u0003$\u0003$\u0003$\u0005$",
    "\u02d9\n$\u0003$\u0003$\u0003$\u0003%\u0003%\u0003%\u0003&\u0003&\u0003",
    "&\u0007&\u02e4\n&\f&\u000e&\u02e7\u000b&\u0003\'\u0003\'\u0003\'\u0003",
    "\'\u0003\'\u0003\'\u0003\'\u0005\'\u02f0\n\'\u0003(\u0003(\u0003(\u0005",
    "(\u02f5\n(\u0003(\u0005(\u02f8\n(\u0003)\u0003)\u0003)\u0003)\u0007",
    ")\u02fe\n)\f)\u000e)\u0301\u000b)\u0005)\u0303\n)\u0003*\u0003*\u0003",
    "*\u0003*\u0003*\u0003*\u0005*\u030b\n*\u0003*\u0005*\u030e\n*\u0003",
    "*\u0003*\u0003*\u0005*\u0313\n*\u0003*\u0005*\u0316\n*\u0003*\u0003",
    "*\u0005*\u031a\n*\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0005*\u0322",
    "\n*\u0003*\u0005*\u0325\n*\u0003+\u0003+\u0003+\u0007+\u032a\n+\f+\u000e",
    "+\u032d\u000b+\u0003+\u0006+\u0330\n+\r+\u000e+\u0331\u0005+\u0334\n",
    "+\u0003,\u0003,\u0003,\u0003,\u0007,\u033a\n,\f,\u000e,\u033d\u000b",
    ",\u0003,\u0003,\u0003-\u0003-\u0003-\u0003-\u0007-\u0345\n-\f-\u000e",
    "-\u0348\u000b-\u0003-\u0003-\u0003.\u0005.\u034d\n.\u0003.\u0005.\u0350",
    "\n.\u0003.\u0003.\u0003/\u0003/\u0005/\u0356\n/\u0003/\u0003/\u0005",
    "/\u035a\n/\u0003/\u0003/\u0005/\u035e\n/\u0003/\u0003/\u0007/\u0362",
    "\n/\f/\u000e/\u0365\u000b/\u0003/\u0003/\u0007/\u0369\n/\f/\u000e/\u036c",
    "\u000b/\u00030\u00070\u036f\n0\f0\u000e0\u0372\u000b0\u00030\u00030",
    "\u00030\u00030\u00030\u00050\u0379\n0\u00031\u00031\u00051\u037d\n1",
    "\u00031\u00031\u00032\u00032\u00032\u00072\u0384\n2\f2\u000e2\u0387",
    "\u000b2\u00033\u00073\u038a\n3\f3\u000e3\u038d\u000b3\u00033\u00033",
    "\u00033\u00053\u0392\n3\u00033\u00033\u00053\u0396\n3\u00034\u00034",
    "\u00034\u00034\u00034\u00034\u00054\u039e\n4\u00035\u00075\u03a1\n5",
    "\f5\u000e5\u03a4\u000b5\u00035\u00035\u00035\u00035\u00035\u00055\u03ab",
    "\n5\u00036\u00036\u00056\u03af\n6\u00036\u00036\u00037\u00037\u0003",
    "7\u00077\u03b6\n7\f7\u000e7\u03b9\u000b7\u00038\u00078\u03bc\n8\f8\u000e",
    "8\u03bf\u000b8\u00038\u00078\u03c2\n8\f8\u000e8\u03c5\u000b8\u00038",
    "\u00058\u03c8\n8\u00038\u00038\u00038\u00038\u00038\u00058\u03cf\n8",
    "\u00039\u00039\u00039\u00039\u00079\u03d5\n9\f9\u000e9\u03d8\u000b9",
    "\u00039\u00039\u0003:\u0003:\u0003:\u0005:\u03df\n:\u0003;\u0003;\u0003",
    ";\u0005;\u03e4\n;\u0003<\u0003<\u0003=\u0003=\u0005=\u03ea\n=\u0003",
    ">\u0003>\u0003>\u0003>\u0003?\u0003?\u0003?\u0007?\u03f3\n?\f?\u000e",
    "?\u03f6\u000b?\u0003@\u0003@\u0003@\u0003@\u0003A\u0005A\u03fd\nA\u0003",
    "A\u0003A\u0005A\u0401\nA\u0003A\u0003A\u0003A\u0007A\u0406\nA\fA\u000e",
    "A\u0409\u000bA\u0003A\u0003A\u0003B\u0003B\u0007B\u040f\nB\fB\u000e",
    "B\u0412\u000bB\u0003B\u0007B\u0415\nB\fB\u000eB\u0418\u000bB\u0003B",
    "\u0003B\u0007B\u041c\nB\fB\u000eB\u041f\u000bB\u0003B\u0007B\u0422\n",
    "B\fB\u000eB\u0425\u000bB\u0003B\u0003B\u0003B\u0005B\u042a\nB\u0003",
    "C\u0003C\u0003C\u0005C\u042f\nC\u0003C\u0003C\u0003C\u0003C\u0003C\u0003",
    "C\u0005C\u0437\nC\u0003D\u0003D\u0003D\u0003D\u0007D\u043d\nD\fD\u000e",
    "D\u0440\u000bD\u0003E\u0003E\u0003E\u0003E\u0003E\u0005E\u0447\nE\u0003",
    "F\u0003F\u0003F\u0003F\u0007F\u044d\nF\fF\u000eF\u0450\u000bF\u0003",
    "F\u0003F\u0005F\u0454\nF\u0003F\u0003F\u0003G\u0003G\u0003G\u0003G\u0003",
    "G\u0005G\u045d\nG\u0003H\u0003H\u0003H\u0003H\u0003H\u0003H\u0003H\u0003",
    "H\u0005H\u0467\nH\u0003I\u0003I\u0003I\u0003I\u0003J\u0003J\u0003J\u0003",
    "J\u0003K\u0003K\u0003K\u0005K\u0474\nK\u0003L\u0003L\u0005L\u0478\n",
    "L\u0003L\u0003L\u0003M\u0003M\u0005M\u047e\nM\u0003M\u0003M\u0005M\u0482",
    "\nM\u0003M\u0003M\u0005M\u0486\nM\u0003N\u0003N\u0003N\u0003N\u0005",
    "N\u048c\nN\u0003O\u0003O\u0003O\u0003O\u0003O\u0003O\u0005O\u0494\n",
    "O\u0003P\u0003P\u0003P\u0007P\u0499\nP\fP\u000eP\u049c\u000bP\u0003",
    "P\u0003P\u0007P\u04a0\nP\fP\u000eP\u04a3\u000bP\u0003P\u0003P\u0003",
    "P\u0003Q\u0003Q\u0003Q\u0003Q\u0003Q\u0003Q\u0003Q\u0005Q\u04af\nQ\u0003",
    "R\u0003R\u0003R\u0005R\u04b4\nR\u0003R\u0003R\u0003R\u0003R\u0003R\u0003",
    "R\u0003R\u0003R\u0003R\u0003R\u0003R\u0003R\u0003R\u0003R\u0005R\u04c4",
    "\nR\u0005R\u04c6\nR\u0003S\u0003S\u0005S\u04ca\nS\u0003S\u0003S\u0003",
    "S\u0003T\u0005T\u04d0\nT\u0003T\u0003T\u0003T\u0005T\u04d5\nT\u0003",
    "T\u0003T\u0003T\u0003T\u0005T\u04db\nT\u0003U\u0003U\u0005U\u04df\n",
    "U\u0003U\u0007U\u04e2\nU\fU\u000eU\u04e5\u000bU\u0003U\u0005U\u04e8",
    "\nU\u0003U\u0003U\u0003U\u0003V\u0003V\u0005V\u04ef\nV\u0003V\u0003",
    "V\u0003W\u0003W\u0003W\u0003X\u0003X\u0003X\u0005X\u04f9\nX\u0003X\u0005",
    "X\u04fc\nX\u0005X\u04fe\nX\u0003Y\u0003Y\u0003Y\u0005Y\u0503\nY\u0003",
    "Y\u0005Y\u0506\nY\u0005Y\u0508\nY\u0003Z\u0005Z\u050b\nZ\u0003Z\u0003",
    "Z\u0005Z\u050f\nZ\u0003[\u0005[\u0512\n[\u0003[\u0003[\u0005[\u0516",
    "\n[\u0003\\\u0003\\\u0003\\\u0007\\\u051b\n\\\f\\\u000e\\\u051e\u000b",
    "\\\u0003]\u0003]\u0003]\u0007]\u0523\n]\f]\u000e]\u0526\u000b]\u0003",
    "^\u0003^\u0007^\u052a\n^\f^\u000e^\u052d\u000b^\u0003_\u0003_\u0003",
    "_\u0003_\u0007_\u0533\n_\f_\u000e_\u0536\u000b_\u0005_\u0538\n_\u0003",
    "_\u0003_\u0003_\u0003`\u0007`\u053e\n`\f`\u000e`\u0541\u000b`\u0003",
    "`\u0007`\u0544\n`\f`\u000e`\u0547\u000b`\u0003`\u0003`\u0003a\u0003",
    "a\u0005a\u054d\na\u0003b\u0003b\u0003b\u0003b\u0007b\u0553\nb\fb\u000e",
    "b\u0556\u000bb\u0003b\u0003b\u0003c\u0003c\u0006c\u055c\nc\rc\u000e",
    "c\u055d\u0003d\u0003d\u0003d\u0007d\u0563\nd\fd\u000ed\u0566\u000bd",
    "\u0003e\u0007e\u0569\ne\fe\u000ee\u056c\u000be\u0003e\u0007e\u056f\n",
    "e\fe\u000ee\u0572\u000be\u0003e\u0003e\u0003e\u0003e\u0003e\u0005e\u0579",
    "\ne\u0003f\u0003f\u0003f\u0003f\u0003f\u0003f\u0003g\u0003g\u0003g\u0003",
    "g\u0003h\u0003h\u0003h\u0005h\u0588\nh\u0007h\u058a\nh\fh\u000eh\u058d",
    "\u000bh\u0003h\u0003h\u0003h\u0002\u0005\u001a.2i\u0002\u0004\u0006",
    "\b\n\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001c\u001e \"$&(*",
    ",.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086",
    "\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e",
    "\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6",
    "\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce",
    "\u0002\n\u0004\u0002\u0003\u0003\')\u0004\u0002\u0018\u0018**\u0004",
    "\u0002\u0003\u0003\'\'\u0004\u0002\u0016\u0016@@\u0004\u0002\u0012\u0012",
    "22\u0005\u0002\u0018\u0018**46\u0003\u000278\u0004\u0002\u0007\u0007",
    "@@\u0002\u061c\u0002\u00dd\u0003\u0002\u0002\u0002\u0004\u00df\u0003",
    "\u0002\u0002\u0002\u0006\u00e7\u0003\u0002\u0002\u0002\b\u0103\u0003",
    "\u0002\u0002\u0002\n\u0105\u0003\u0002\u0002\u0002\f\u0111\u0003\u0002",
    "\u0002\u0002\u000e\u0120\u0003\u0002\u0002\u0002\u0010\u0122\u0003\u0002",
    "\u0002\u0002\u0012\u0132\u0003\u0002\u0002\u0002\u0014\u0134\u0003\u0002",
    "\u0002\u0002\u0016\u0148\u0003\u0002\u0002\u0002\u0018\u014a\u0003\u0002",
    "\u0002\u0002\u001a\u0161\u0003\u0002\u0002\u0002\u001c\u016d\u0003\u0002",
    "\u0002\u0002\u001e\u0171\u0003\u0002\u0002\u0002 \u0179\u0003\u0002",
    "\u0002\u0002\"\u0188\u0003\u0002\u0002\u0002$\u018a\u0003\u0002\u0002",
    "\u0002&\u0197\u0003\u0002\u0002\u0002(\u01a4\u0003\u0002\u0002\u0002",
    "*\u020c\u0003\u0002\u0002\u0002,\u020e\u0003\u0002\u0002\u0002.\u0212",
    "\u0003\u0002\u0002\u00020\u021e\u0003\u0002\u0002\u00022\u024f\u0003",
    "\u0002\u0002\u00024\u0258\u0003\u0002\u0002\u00026\u0272\u0003\u0002",
    "\u0002\u00028\u027c\u0003\u0002\u0002\u0002:\u027e\u0003\u0002\u0002",
    "\u0002<\u02a3\u0003\u0002\u0002\u0002>\u02b5\u0003\u0002\u0002\u0002",
    "@\u02b7\u0003\u0002\u0002\u0002B\u02bf\u0003\u0002\u0002\u0002D\u02d1",
    "\u0003\u0002\u0002\u0002F\u02d5\u0003\u0002\u0002\u0002H\u02dd\u0003",
    "\u0002\u0002\u0002J\u02e0\u0003\u0002\u0002\u0002L\u02ef\u0003\u0002",
    "\u0002\u0002N\u02f7\u0003\u0002\u0002\u0002P\u0302\u0003\u0002\u0002",
    "\u0002R\u0324\u0003\u0002\u0002\u0002T\u0333\u0003\u0002\u0002\u0002",
    "V\u0335\u0003\u0002\u0002\u0002X\u0340\u0003\u0002\u0002\u0002Z\u034c",
    "\u0003\u0002\u0002\u0002\\\u0353\u0003\u0002\u0002\u0002^\u0370\u0003",
    "\u0002\u0002\u0002`\u037a\u0003\u0002\u0002\u0002b\u0380\u0003\u0002",
    "\u0002\u0002d\u038b\u0003\u0002\u0002\u0002f\u039d\u0003\u0002\u0002",
    "\u0002h\u03a2\u0003\u0002\u0002\u0002j\u03ac\u0003\u0002\u0002\u0002",
    "l\u03b2\u0003\u0002\u0002\u0002n\u03bd\u0003\u0002\u0002\u0002p\u03d0",
    "\u0003\u0002\u0002\u0002r\u03db\u0003\u0002\u0002\u0002t\u03e3\u0003",
    "\u0002\u0002\u0002v\u03e5\u0003\u0002\u0002\u0002x\u03e7\u0003\u0002",
    "\u0002\u0002z\u03eb\u0003\u0002\u0002\u0002|\u03ef\u0003\u0002\u0002",
    "\u0002~\u03f7\u0003\u0002\u0002\u0002\u0080\u03fc\u0003\u0002\u0002",
    "\u0002\u0082\u0429\u0003\u0002\u0002\u0002\u0084\u0436\u0003\u0002\u0002",
    "\u0002\u0086\u0438\u0003\u0002\u0002\u0002\u0088\u0441\u0003\u0002\u0002",
    "\u0002\u008a\u0448\u0003\u0002\u0002\u0002\u008c\u0457\u0003\u0002\u0002",
    "\u0002\u008e\u0466\u0003\u0002\u0002\u0002\u0090\u0468\u0003\u0002\u0002",
    "\u0002\u0092\u046c\u0003\u0002\u0002\u0002\u0094\u0470\u0003\u0002\u0002",
    "\u0002\u0096\u0475\u0003\u0002\u0002\u0002\u0098\u047b\u0003\u0002\u0002",
    "\u0002\u009a\u048b\u0003\u0002\u0002\u0002\u009c\u0493\u0003\u0002\u0002",
    "\u0002\u009e\u0495\u0003\u0002\u0002\u0002\u00a0\u04ae\u0003\u0002\u0002",
    "\u0002\u00a2\u04c5\u0003\u0002\u0002\u0002\u00a4\u04c7\u0003\u0002\u0002",
    "\u0002\u00a6\u04da\u0003\u0002\u0002\u0002\u00a8\u04dc\u0003\u0002\u0002",
    "\u0002\u00aa\u04ec\u0003\u0002\u0002\u0002\u00ac\u04f2\u0003\u0002\u0002",
    "\u0002\u00ae\u04fd\u0003\u0002\u0002\u0002\u00b0\u0507\u0003\u0002\u0002",
    "\u0002\u00b2\u050a\u0003\u0002\u0002\u0002\u00b4\u0511\u0003\u0002\u0002",
    "\u0002\u00b6\u0517\u0003\u0002\u0002\u0002\u00b8\u051f\u0003\u0002\u0002",
    "\u0002\u00ba\u0527\u0003\u0002\u0002\u0002\u00bc\u052e\u0003\u0002\u0002",
    "\u0002\u00be\u053f\u0003\u0002\u0002\u0002\u00c0\u054c\u0003\u0002\u0002",
    "\u0002\u00c2\u054e\u0003\u0002\u0002\u0002\u00c4\u0559\u0003\u0002\u0002",
    "\u0002\u00c6\u055f\u0003\u0002\u0002\u0002\u00c8\u0578\u0003\u0002\u0002",
    "\u0002\u00ca\u057a\u0003\u0002\u0002\u0002\u00cc\u0580\u0003\u0002\u0002",
    "\u0002\u00ce\u058b\u0003\u0002\u0002\u0002\u00d0\u00d2\u0007\u0003\u0002",
    "\u0002\u00d1\u00d0\u0003\u0002\u0002\u0002\u00d1\u00d2\u0003\u0002\u0002",
    "\u0002\u00d2\u00d3\u0003\u0002\u0002\u0002\u00d3\u00de\u0007D\u0002",
    "\u0002\u00d4\u00d6\u0007\u0003\u0002\u0002\u00d5\u00d4\u0003\u0002\u0002",
    "\u0002\u00d5\u00d6\u0003\u0002\u0002\u0002\u00d6\u00d7\u0003\u0002\u0002",
    "\u0002\u00d7\u00de\u0007F\u0002\u0002\u00d8\u00de\u0007A\u0002\u0002",
    "\u00d9\u00de\u0007B\u0002\u0002\u00da\u00de\u0007E\u0002\u0002\u00db",
    "\u00de\u0007C\u0002\u0002\u00dc\u00de\u0007\u0004\u0002\u0002\u00dd",
    "\u00d1\u0003\u0002\u0002\u0002\u00dd\u00d5\u0003\u0002\u0002\u0002\u00dd",
    "\u00d8\u0003\u0002\u0002\u0002\u00dd\u00d9\u0003\u0002\u0002\u0002\u00dd",
    "\u00da\u0003\u0002\u0002\u0002\u00dd\u00db\u0003\u0002\u0002\u0002\u00dd",
    "\u00dc\u0003\u0002\u0002\u0002\u00de\u0003\u0003\u0002\u0002\u0002\u00df",
    "\u00e4\u0007@\u0002\u0002\u00e0\u00e1\u0007\u0005\u0002\u0002\u00e1",
    "\u00e3\u0007@\u0002\u0002\u00e2\u00e0\u0003\u0002\u0002\u0002\u00e3",
    "\u00e6\u0003\u0002\u0002\u0002\u00e4\u00e2\u0003\u0002\u0002\u0002\u00e4",
    "\u00e5\u0003\u0002\u0002\u0002\u00e5\u0005\u0003\u0002\u0002\u0002\u00e6",
    "\u00e4\u0003\u0002\u0002\u0002\u00e7\u00ec\u0007@\u0002\u0002\u00e8",
    "\u00e9\u0007\u0006\u0002\u0002\u00e9\u00eb\u0007@\u0002\u0002\u00ea",
    "\u00e8\u0003\u0002\u0002\u0002\u00eb\u00ee\u0003\u0002\u0002\u0002\u00ec",
    "\u00ea\u0003\u0002\u0002\u0002\u00ec\u00ed\u0003\u0002\u0002\u0002\u00ed",
    "\u0007\u0003\u0002\u0002\u0002\u00ee\u00ec\u0003\u0002\u0002\u0002\u00ef",
    "\u00f6\u0007@\u0002\u0002\u00f0\u00f1\u0007@\u0002\u0002\u00f1\u00f3",
    "\u0007\u0005\u0002\u0002\u00f2\u00f0\u0003\u0002\u0002\u0002\u00f2\u00f3",
    "\u0003\u0002\u0002\u0002\u00f3\u00f4\u0003\u0002\u0002\u0002\u00f4\u00f6",
    "\u0007\u0007\u0002\u0002\u00f5\u00ef\u0003\u0002\u0002\u0002\u00f5\u00f2",
    "\u0003\u0002\u0002\u0002\u00f6\u00f7\u0003\u0002\u0002\u0002\u00f7\u00f8",
    "\u0007\u0005\u0002\u0002\u00f8\u0104\u0007@\u0002\u0002\u00f9\u00fa",
    "\u0007@\u0002\u0002\u00fa\u00fc\u0007\u0005\u0002\u0002\u00fb\u00f9",
    "\u0003\u0002\u0002\u0002\u00fb\u00fc\u0003\u0002\u0002\u0002\u00fc\u00fd",
    "\u0003\u0002\u0002\u0002\u00fd\u00ff\u0007\b\u0002\u0002\u00fe\u0100",
    "\u0005\n\u0006\u0002\u00ff\u00fe\u0003\u0002\u0002\u0002\u00ff\u0100",
    "\u0003\u0002\u0002\u0002\u0100\u0101\u0003\u0002\u0002\u0002\u0101\u0102",
    "\u0007\u0005\u0002\u0002\u0102\u0104\u0007@\u0002\u0002\u0103\u00f5",
    "\u0003\u0002\u0002\u0002\u0103\u00fb\u0003\u0002\u0002\u0002\u0104\t",
    "\u0003\u0002\u0002\u0002\u0105\u0106\u0007\t\u0002\u0002\u0106\u0107",
    "\u0007@\u0002\u0002\u0107\u0108\u0007\n\u0002\u0002\u0108\u000b\u0003",
    "\u0002\u0002\u0002\u0109\u010a\u0005\u000e\b\u0002\u010a\u010b\u0007",
    "\u000b\u0002\u0002\u010b\u010c\u0005\f\u0007\u0002\u010c\u0112\u0003",
    "\u0002\u0002\u0002\u010d\u010f\u0005\u0014\u000b\u0002\u010e\u0110\u0005",
    "\u0010\t\u0002\u010f\u010e\u0003\u0002\u0002\u0002\u010f\u0110\u0003",
    "\u0002\u0002\u0002\u0110\u0112\u0003\u0002\u0002\u0002\u0111\u0109\u0003",
    "\u0002\u0002\u0002\u0111\u010d\u0003\u0002\u0002\u0002\u0112\r\u0003",
    "\u0002\u0002\u0002\u0113\u0121\u0005\u0014\u000b\u0002\u0114\u011d\u0007",
    "\f\u0002\u0002\u0115\u011a\u0005f4\u0002\u0116\u0117\u0007\u0006\u0002",
    "\u0002\u0117\u0119\u0005f4\u0002\u0118\u0116\u0003\u0002\u0002\u0002",
    "\u0119\u011c\u0003\u0002\u0002\u0002\u011a\u0118\u0003\u0002\u0002\u0002",
    "\u011a\u011b\u0003\u0002\u0002\u0002\u011b\u011e\u0003\u0002\u0002\u0002",
    "\u011c\u011a\u0003\u0002\u0002\u0002\u011d\u0115\u0003\u0002\u0002\u0002",
    "\u011d\u011e\u0003\u0002\u0002\u0002\u011e\u011f\u0003\u0002\u0002\u0002",
    "\u011f\u0121\u0007\r\u0002\u0002\u0120\u0113\u0003\u0002\u0002\u0002",
    "\u0120\u0114\u0003\u0002\u0002\u0002\u0121\u000f\u0003\u0002\u0002\u0002",
    "\u0122\u0123\u0007\u000e\u0002\u0002\u0123\u0124\u0007\u000f\u0002\u0002",
    "\u0124\u0129\u0005\u0012\n\u0002\u0125\u0126\u0007K\u0002\u0002\u0126",
    "\u0128\u0005\u0012\n\u0002\u0127\u0125\u0003\u0002\u0002\u0002\u0128",
    "\u012b\u0003\u0002\u0002\u0002\u0129\u0127\u0003\u0002\u0002\u0002\u0129",
    "\u012a\u0003\u0002\u0002\u0002\u012a\u012c\u0003\u0002\u0002\u0002\u012b",
    "\u0129\u0003\u0002\u0002\u0002\u012c\u012d\u0007\u0010\u0002\u0002\u012d",
    "\u0011\u0003\u0002\u0002\u0002\u012e\u012f\u0007\u0011\u0002\u0002\u012f",
    "\u0133\u0005\u0098M\u0002\u0130\u0131\u0007\u0012\u0002\u0002\u0131",
    "\u0133\u0005\u0090I\u0002\u0132\u012e\u0003\u0002\u0002\u0002\u0132",
    "\u0130\u0003\u0002\u0002\u0002\u0133\u0013\u0003\u0002\u0002\u0002\u0134",
    "\u0139\u0005\u0016\f\u0002\u0135\u0136\u0007@\u0002\u0002\u0136\u0138",
    "\u0005\u0016\f\u0002\u0137\u0135\u0003\u0002\u0002\u0002\u0138\u013b",
    "\u0003\u0002\u0002\u0002\u0139\u0137\u0003\u0002\u0002\u0002\u0139\u013a",
    "\u0003\u0002\u0002\u0002\u013a\u0015\u0003\u0002\u0002\u0002\u013b\u0139",
    "\u0003\u0002\u0002\u0002\u013c\u0141\u0005\u0018\r\u0002\u013d\u013e",
    "\u0007\u0013\u0002\u0002\u013e\u0140\u0005\u0018\r\u0002\u013f\u013d",
    "\u0003\u0002\u0002\u0002\u0140\u0143\u0003\u0002\u0002\u0002\u0141\u013f",
    "\u0003\u0002\u0002\u0002\u0141\u0142\u0003\u0002\u0002\u0002\u0142\u0145",
    "\u0003\u0002\u0002\u0002\u0143\u0141\u0003\u0002\u0002\u0002\u0144\u0146",
    "\u0005 \u0011\u0002\u0145\u0144\u0003\u0002\u0002\u0002\u0145\u0146",
    "\u0003\u0002\u0002\u0002\u0146\u0149\u0003\u0002\u0002\u0002\u0147\u0149",
    "\u0005 \u0011\u0002\u0148\u013c\u0003\u0002\u0002\u0002\u0148\u0147",
    "\u0003\u0002\u0002\u0002\u0149\u0017\u0003\u0002\u0002\u0002\u014a\u014e",
    "\u0005\u001a\u000e\u0002\u014b\u014d\u0005|?\u0002\u014c\u014b\u0003",
    "\u0002\u0002\u0002\u014d\u0150\u0003\u0002\u0002\u0002\u014e\u014c\u0003",
    "\u0002\u0002\u0002\u014e\u014f\u0003\u0002\u0002\u0002\u014f\u0019\u0003",
    "\u0002\u0002\u0002\u0150\u014e\u0003\u0002\u0002\u0002\u0151\u0152\b",
    "\u000e\u0001\u0002\u0152\u0162\u0005\b\u0005\u0002\u0153\u015a\u0005",
    "\b\u0005\u0002\u0154\u0155\u0007@\u0002\u0002\u0155\u0157\u0007\u0005",
    "\u0002\u0002\u0156\u0154\u0003\u0002\u0002\u0002\u0156\u0157\u0003\u0002",
    "\u0002\u0002\u0157\u0158\u0003\u0002\u0002\u0002\u0158\u015a\u0007\u0007",
    "\u0002\u0002\u0159\u0153\u0003\u0002\u0002\u0002\u0159\u0156\u0003\u0002",
    "\u0002\u0002\u015a\u015b\u0003\u0002\u0002\u0002\u015b\u015c\u0007\u0005",
    "\u0002\u0002\u015c\u0162\u0007\u0011\u0002\u0002\u015d\u015e\u0007\f",
    "\u0002\u0002\u015e\u015f\u0005\u001e\u0010\u0002\u015f\u0160\u0007\r",
    "\u0002\u0002\u0160\u0162\u0003\u0002\u0002\u0002\u0161\u0151\u0003\u0002",
    "\u0002\u0002\u0161\u0159\u0003\u0002\u0002\u0002\u0161\u015d\u0003\u0002",
    "\u0002\u0002\u0162\u016a\u0003\u0002\u0002\u0002\u0163\u0164\f\u0007",
    "\u0002\u0002\u0164\u0169\u0005\u001c\u000f\u0002\u0165\u0166\f\u0006",
    "\u0002\u0002\u0166\u0167\u0007\u0014\u0002\u0002\u0167\u0169\u0007@",
    "\u0002\u0002\u0168\u0163\u0003\u0002\u0002\u0002\u0168\u0165\u0003\u0002",
    "\u0002\u0002\u0169\u016c\u0003\u0002\u0002\u0002\u016a\u0168\u0003\u0002",
    "\u0002\u0002\u016a\u016b\u0003\u0002\u0002\u0002\u016b\u001b\u0003\u0002",
    "\u0002\u0002\u016c\u016a\u0003\u0002\u0002\u0002\u016d\u016e\u0007\t",
    "\u0002\u0002\u016e\u016f\u0005\u001e\u0010\u0002\u016f\u0170\u0007\n",
    "\u0002\u0002\u0170\u001d\u0003\u0002\u0002\u0002\u0171\u0176\u0005\f",
    "\u0007\u0002\u0172\u0173\u0007\u0006\u0002\u0002\u0173\u0175\u0005\f",
    "\u0007\u0002\u0174\u0172\u0003\u0002\u0002\u0002\u0175\u0178\u0003\u0002",
    "\u0002\u0002\u0176\u0174\u0003\u0002\u0002\u0002\u0176\u0177\u0003\u0002",
    "\u0002\u0002\u0177\u001f\u0003\u0002\u0002\u0002\u0178\u0176\u0003\u0002",
    "\u0002\u0002\u0179\u017a\u0007\u000f\u0002\u0002\u017a\u017f\u0005\"",
    "\u0012\u0002\u017b\u017c\u0007K\u0002\u0002\u017c\u017e\u0005\"\u0012",
    "\u0002\u017d\u017b\u0003\u0002\u0002\u0002\u017e\u0181\u0003\u0002\u0002",
    "\u0002\u017f\u017d\u0003\u0002\u0002\u0002\u017f\u0180\u0003\u0002\u0002",
    "\u0002\u0180\u0182\u0003\u0002\u0002\u0002\u0181\u017f\u0003\u0002\u0002",
    "\u0002\u0182\u0183\u0007\u0010\u0002\u0002\u0183!\u0003\u0002\u0002",
    "\u0002\u0184\u0189\u0005\u008eH\u0002\u0185\u0186\u0007\u0011\u0002",
    "\u0002\u0186\u0189\u0005\u00a4S\u0002\u0187\u0189\u0003\u0002\u0002",
    "\u0002\u0188\u0184\u0003\u0002\u0002\u0002\u0188\u0185\u0003\u0002\u0002",
    "\u0002\u0188\u0187\u0003\u0002\u0002\u0002\u0189#\u0003\u0002\u0002",
    "\u0002\u018a\u018b\u0005\f\u0007\u0002\u018b%\u0003\u0002\u0002\u0002",
    "\u018c\u018d\u0007\u0015\u0002\u0002\u018d\u0198\u0005\u0014\u000b\u0002",
    "\u018e\u0190\u0007\u0015\u0002\u0002\u018f\u0191\u0005|?\u0002\u0190",
    "\u018f\u0003\u0002\u0002\u0002\u0191\u0192\u0003\u0002\u0002\u0002\u0192",
    "\u0190\u0003\u0002\u0002\u0002\u0192\u0193\u0003\u0002\u0002\u0002\u0193",
    "\u0198\u0003\u0002\u0002\u0002\u0194\u0195\u0007\u0015\u0002\u0002\u0195",
    "\u0196\u0007\u0016\u0002\u0002\u0196\u0198\u0007\u0017\u0002\u0002\u0197",
    "\u018c\u0003\u0002\u0002\u0002\u0197\u018e\u0003\u0002\u0002\u0002\u0197",
    "\u0194\u0003\u0002\u0002\u0002\u0198\'\u0003\u0002\u0002\u0002\u0199",
    "\u01a0\u0005p9\u0002\u019a\u019c\u0007\u0018\u0002\u0002\u019b\u019a",
    "\u0003\u0002\u0002\u0002\u019b\u019c\u0003\u0002\u0002\u0002\u019c\u019d",
    "\u0003\u0002\u0002\u0002\u019d\u01a0\u0007@\u0002\u0002\u019e\u01a0",
    "\u0007\u0016\u0002\u0002\u019f\u0199\u0003\u0002\u0002\u0002\u019f\u019b",
    "\u0003\u0002\u0002\u0002\u019f\u019e\u0003\u0002\u0002\u0002\u01a0\u01a1",
    "\u0003\u0002\u0002\u0002\u01a1\u01a2\u0007\u000b\u0002\u0002\u01a2\u01a5",
    "\u0005(\u0015\u0002\u01a3\u01a5\u0005*\u0016\u0002\u01a4\u019f\u0003",
    "\u0002\u0002\u0002\u01a4\u01a3\u0003\u0002\u0002\u0002\u01a5)\u0003",
    "\u0002\u0002\u0002\u01a6\u01a7\u0007\u0019\u0002\u0002\u01a7\u01a8\u0007",
    "\f\u0002\u0002\u01a8\u01a9\u0005(\u0015\u0002\u01a9\u01aa\u0007\r\u0002",
    "\u0002\u01aa\u01b0\u0005(\u0015\u0002\u01ab\u01ad\u0007L\u0002\u0002",
    "\u01ac\u01ab\u0003\u0002\u0002\u0002\u01ac\u01ad\u0003\u0002\u0002\u0002",
    "\u01ad\u01ae\u0003\u0002\u0002\u0002\u01ae\u01af\u0007\u001a\u0002\u0002",
    "\u01af\u01b1\u0005(\u0015\u0002\u01b0\u01ac\u0003\u0002\u0002\u0002",
    "\u01b0\u01b1\u0003\u0002\u0002\u0002\u01b1\u020d\u0003\u0002\u0002\u0002",
    "\u01b2\u01b3\u0007\u001b\u0002\u0002\u01b3\u01b4\u0007\f\u0002\u0002",
    "\u01b4\u01b5\u0005(\u0015\u0002\u01b5\u01b6\u0007\r\u0002\u0002\u01b6",
    "\u01b7\u0005(\u0015\u0002\u01b7\u020d\u0003\u0002\u0002\u0002\u01b8",
    "\u01be\u0007\u001c\u0002\u0002\u01b9\u01ba\u0007\u000f\u0002\u0002\u01ba",
    "\u01bb\u0005:\u001e\u0002\u01bb\u01bc\u0007\u0010\u0002\u0002\u01bc",
    "\u01bf\u0003\u0002\u0002\u0002\u01bd\u01bf\u0005(\u0015\u0002\u01be",
    "\u01b9\u0003\u0002\u0002\u0002\u01be\u01bd\u0003\u0002\u0002\u0002\u01bf",
    "\u01c5\u0003\u0002\u0002\u0002\u01c0\u01c1\u0007\u001d\u0002\u0002\u01c1",
    "\u01c2\u0007\u000f\u0002\u0002\u01c2\u01c3\u0005D#\u0002\u01c3\u01c4",
    "\u0007\u0010\u0002\u0002\u01c4\u01c6\u0003\u0002\u0002\u0002\u01c5\u01c0",
    "\u0003\u0002\u0002\u0002\u01c5\u01c6\u0003\u0002\u0002\u0002\u01c6\u01c9",
    "\u0003\u0002\u0002\u0002\u01c7\u01c8\u0007\u001e\u0002\u0002\u01c8\u01ca",
    "\u0005(\u0015\u0002\u01c9\u01c7\u0003\u0002\u0002\u0002\u01c9\u01ca",
    "\u0003\u0002\u0002\u0002\u01ca\u020d\u0003\u0002\u0002\u0002\u01cb\u01cc",
    "\u0007\u001f\u0002\u0002\u01cc\u01ce\u0005(\u0015\u0002\u01cd\u01cf",
    "\u0007L\u0002\u0002\u01ce\u01cd\u0003\u0002\u0002\u0002\u01ce\u01cf",
    "\u0003\u0002\u0002\u0002\u01cf\u01d0\u0003\u0002\u0002\u0002\u01d0\u01d1",
    "\u0007\u001b\u0002\u0002\u01d1\u01d2\u0007\f\u0002\u0002\u01d2\u01d3",
    "\u0005(\u0015\u0002\u01d3\u01d4\u0007\r\u0002\u0002\u01d4\u020d\u0003",
    "\u0002\u0002\u0002\u01d5\u01de\u0007 \u0002\u0002\u01d6\u01d7\u0007",
    "\f\u0002\u0002\u01d7\u01d8\u0005@!\u0002\u01d8\u01d9\u0007\r\u0002\u0002",
    "\u01d9\u01df\u0003\u0002\u0002\u0002\u01da\u01db\u0007\u000f\u0002\u0002",
    "\u01db\u01dc\u0005@!\u0002\u01dc\u01dd\u0007\u0010\u0002\u0002\u01dd",
    "\u01df\u0003\u0002\u0002\u0002\u01de\u01d6\u0003\u0002\u0002\u0002\u01de",
    "\u01da\u0003\u0002\u0002\u0002\u01df\u01e1\u0003\u0002\u0002\u0002\u01e0",
    "\u01e2\u0007!\u0002\u0002\u01e1\u01e0\u0003\u0002\u0002\u0002\u01e1",
    "\u01e2\u0003\u0002\u0002\u0002\u01e2\u01e3\u0003\u0002\u0002\u0002\u01e3",
    "\u01e4\u0005(\u0015\u0002\u01e4\u020d\u0003\u0002\u0002\u0002\u01e5",
    "\u01e6\u0007\"\u0002\u0002\u01e6\u020d\u0005(\u0015\u0002\u01e7\u01e9",
    "\u0007#\u0002\u0002\u01e8\u01ea\u0005(\u0015\u0002\u01e9\u01e8\u0003",
    "\u0002\u0002\u0002\u01e9\u01ea\u0003\u0002\u0002\u0002\u01ea\u020d\u0003",
    "\u0002\u0002\u0002\u01eb\u01ee\u0007$\u0002\u0002\u01ec\u01ef\u0005",
    "\u00b2Z\u0002\u01ed\u01ef\u0005\u0080A\u0002\u01ee\u01ec\u0003\u0002",
    "\u0002\u0002\u01ee\u01ed\u0003\u0002\u0002\u0002\u01ef\u01f6\u0003\u0002",
    "\u0002\u0002\u01f0\u01f6\u00058\u001d\u0002\u01f1\u01f3\u00052\u001a",
    "\u0002\u01f2\u01f4\u0007\u0016\u0002\u0002\u01f3\u01f2\u0003\u0002\u0002",
    "\u0002\u01f3\u01f4\u0003\u0002\u0002\u0002\u01f4\u01f6\u0003\u0002\u0002",
    "\u0002\u01f5\u01eb\u0003\u0002\u0002\u0002\u01f5\u01f0\u0003\u0002\u0002",
    "\u0002\u01f5\u01f1\u0003\u0002\u0002\u0002\u01f6\u01f7\u0003\u0002\u0002",
    "\u0002\u01f7\u01f8\u0007\u0005\u0002\u0002\u01f8\u01f9\u0003\u0002\u0002",
    "\u0002\u01f9\u01fa\u0007@\u0002\u0002\u01fa\u01fb\u0007%\u0002\u0002",
    "\u01fb\u01fc\u0005(\u0015\u0002\u01fc\u020d\u0003\u0002\u0002\u0002",
    "\u01fd\u01fe\u00052\u001a\u0002\u01fe\u01ff\u00056\u001c\u0002\u01ff",
    "\u0200\u0007%\u0002\u0002\u0200\u0201\u0005(\u0015\u0002\u0201\u020d",
    "\u0003\u0002\u0002\u0002\u0202\u020d\u0005,\u0017\u0002\u0203\u0204",
    "\u0005,\u0017\u0002\u0204\u0205\u0005&\u0014\u0002\u0205\u020d\u0003",
    "\u0002\u0002\u0002\u0206\u0207\u0005,\u0017\u0002\u0207\u0208\u0007",
    "&\u0002\u0002\u0208\u0209\u0007\u000f\u0002\u0002\u0209\u020a\u0005",
    "D#\u0002\u020a\u020b\u0007\u0010\u0002\u0002\u020b\u020d\u0003\u0002",
    "\u0002\u0002\u020c\u01a6\u0003\u0002\u0002\u0002\u020c\u01b2\u0003\u0002",
    "\u0002\u0002\u020c\u01b8\u0003\u0002\u0002\u0002\u020c\u01cb\u0003\u0002",
    "\u0002\u0002\u020c\u01d5\u0003\u0002\u0002\u0002\u020c\u01e5\u0003\u0002",
    "\u0002\u0002\u020c\u01e7\u0003\u0002\u0002\u0002\u020c\u01f5\u0003\u0002",
    "\u0002\u0002\u020c\u01fd\u0003\u0002\u0002\u0002\u020c\u0202\u0003\u0002",
    "\u0002\u0002\u020c\u0203\u0003\u0002\u0002\u0002\u020c\u0206\u0003\u0002",
    "\u0002\u0002\u020d+\u0003\u0002\u0002\u0002\u020e\u0210\u0005.\u0018",
    "\u0002\u020f\u0211\u0007@\u0002\u0002\u0210\u020f\u0003\u0002\u0002",
    "\u0002\u0210\u0211\u0003\u0002\u0002\u0002\u0211-\u0003\u0002\u0002",
    "\u0002\u0212\u0213\b\u0018\u0001\u0002\u0213\u0214\u00050\u0019\u0002",
    "\u0214\u021a\u0003\u0002\u0002\u0002\u0215\u0216\f\u0003\u0002\u0002",
    "\u0216\u0217\u0007@\u0002\u0002\u0217\u0219\u0005.\u0018\u0004\u0218",
    "\u0215\u0003\u0002\u0002\u0002\u0219\u021c\u0003\u0002\u0002\u0002\u021a",
    "\u0218\u0003\u0002\u0002\u0002\u021a\u021b\u0003\u0002\u0002\u0002\u021b",
    "/\u0003\u0002\u0002\u0002\u021c\u021a\u0003\u0002\u0002\u0002\u021d",
    "\u021f\t\u0002\u0002\u0002\u021e\u021d\u0003\u0002\u0002\u0002\u021e",
    "\u021f\u0003\u0002\u0002\u0002\u021f\u022a\u0003\u0002\u0002\u0002\u0220",
    "\u0223\u0007$\u0002\u0002\u0221\u0224\u0005\u00b2Z\u0002\u0222\u0224",
    "\u0005\u0080A\u0002\u0223\u0221\u0003\u0002\u0002\u0002\u0223\u0222",
    "\u0003\u0002\u0002\u0002\u0224\u022b\u0003\u0002\u0002\u0002\u0225\u022b",
    "\u00058\u001d\u0002\u0226\u0228\u00052\u001a\u0002\u0227\u0229\u0007",
    "\u0016\u0002\u0002\u0228\u0227\u0003\u0002\u0002\u0002\u0228\u0229\u0003",
    "\u0002\u0002\u0002\u0229\u022b\u0003\u0002\u0002\u0002\u022a\u0220\u0003",
    "\u0002\u0002\u0002\u022a\u0225\u0003\u0002\u0002\u0002\u022a\u0226\u0003",
    "\u0002\u0002\u0002\u022b1\u0003\u0002\u0002\u0002\u022c\u022d\b\u001a",
    "\u0001\u0002\u022d\u0250\u0005\u0002\u0002\u0002\u022e\u0250\u0005\b",
    "\u0005\u0002\u022f\u0230\u0007@\u0002\u0002\u0230\u0232\u0007\u0005",
    "\u0002\u0002\u0231\u022f\u0003\u0002\u0002\u0002\u0231\u0232\u0003\u0002",
    "\u0002\u0002\u0232\u0233\u0003\u0002\u0002\u0002\u0233\u0250\u0007\u0007",
    "\u0002\u0002\u0234\u0250\u0007\u0016\u0002\u0002\u0235\u0237\u0007\f",
    "\u0002\u0002\u0236\u0238\u00054\u001b\u0002\u0237\u0236\u0003\u0002",
    "\u0002\u0002\u0237\u0238\u0003\u0002\u0002\u0002\u0238\u0239\u0003\u0002",
    "\u0002\u0002\u0239\u0250\u0007\r\u0002\u0002\u023a\u023d\u0007$\u0002",
    "\u0002\u023b\u023e\u0005\u00b2Z\u0002\u023c\u023e\u0005\u0080A\u0002",
    "\u023d\u023b\u0003\u0002\u0002\u0002\u023d\u023c\u0003\u0002\u0002\u0002",
    "\u023e\u0241\u0003\u0002\u0002\u0002\u023f\u0241\u00058\u001d\u0002",
    "\u0240\u023a\u0003\u0002\u0002\u0002\u0240\u023f\u0003\u0002\u0002\u0002",
    "\u0241\u0242\u0003\u0002\u0002\u0002\u0242\u0243\u0007\u0005\u0002\u0002",
    "\u0243\u0244\u0007@\u0002\u0002\u0244\u0250\u0003\u0002\u0002\u0002",
    "\u0245\u0248\u0007$\u0002\u0002\u0246\u0249\u0005\u00b2Z\u0002\u0247",
    "\u0249\u0005\u0080A\u0002\u0248\u0246\u0003\u0002\u0002\u0002\u0248",
    "\u0247\u0003\u0002\u0002\u0002\u0249\u024c\u0003\u0002\u0002\u0002\u024a",
    "\u024c\u00058\u001d\u0002\u024b\u0245\u0003\u0002\u0002\u0002\u024b",
    "\u024a\u0003\u0002\u0002\u0002\u024c\u024d\u0003\u0002\u0002\u0002\u024d",
    "\u024e\u0005\u001c\u000f\u0002\u024e\u0250\u0003\u0002\u0002\u0002\u024f",
    "\u022c\u0003\u0002\u0002\u0002\u024f\u022e\u0003\u0002\u0002\u0002\u024f",
    "\u0231\u0003\u0002\u0002\u0002\u024f\u0234\u0003\u0002\u0002\u0002\u024f",
    "\u0235\u0003\u0002\u0002\u0002\u024f\u0240\u0003\u0002\u0002\u0002\u024f",
    "\u024b\u0003\u0002\u0002\u0002\u0250\u0255\u0003\u0002\u0002\u0002\u0251",
    "\u0252\f\u0003\u0002\u0002\u0252\u0254\u00056\u001c\u0002\u0253\u0251",
    "\u0003\u0002\u0002\u0002\u0254\u0257\u0003\u0002\u0002\u0002\u0255\u0253",
    "\u0003\u0002\u0002\u0002\u0255\u0256\u0003\u0002\u0002\u0002\u02563",
    "\u0003\u0002\u0002\u0002\u0257\u0255\u0003\u0002\u0002\u0002\u0258\u025d",
    "\u0005(\u0015\u0002\u0259\u025a\u0007\u0006\u0002\u0002\u025a\u025c",
    "\u0005(\u0015\u0002\u025b\u0259\u0003\u0002\u0002\u0002\u025c\u025f",
    "\u0003\u0002\u0002\u0002\u025d\u025b\u0003\u0002\u0002\u0002\u025d\u025e",
    "\u0003\u0002\u0002\u0002\u025e5\u0003\u0002\u0002\u0002\u025f\u025d",
    "\u0003\u0002\u0002\u0002\u0260\u0262\u0007\f\u0002\u0002\u0261\u0263",
    "\u00054\u001b\u0002\u0262\u0261\u0003\u0002\u0002\u0002\u0262\u0263",
    "\u0003\u0002\u0002\u0002\u0263\u0264\u0003\u0002\u0002\u0002\u0264\u0273",
    "\u0007\r\u0002\u0002\u0265\u0269\u0007\f\u0002\u0002\u0266\u0267\u0005",
    "4\u001b\u0002\u0267\u0268\u0007\u0006\u0002\u0002\u0268\u026a\u0003",
    "\u0002\u0002\u0002\u0269\u0266\u0003\u0002\u0002\u0002\u0269\u026a\u0003",
    "\u0002\u0002\u0002\u026a\u026b\u0003\u0002\u0002\u0002\u026b\u026c\u0005",
    ",\u0017\u0002\u026c\u026d\u0007\u0015\u0002\u0002\u026d\u026e\u0007",
    "\u0016\u0002\u0002\u026e\u026f\u0007\u0017\u0002\u0002\u026f\u0270\u0007",
    "\r\u0002\u0002\u0270\u0273\u0003\u0002\u0002\u0002\u0271\u0273\u0005",
    "8\u001d\u0002\u0272\u0260\u0003\u0002\u0002\u0002\u0272\u0265\u0003",
    "\u0002\u0002\u0002\u0272\u0271\u0003\u0002\u0002\u0002\u02737\u0003",
    "\u0002\u0002\u0002\u0274\u0275\u0007\u000f\u0002\u0002\u0275\u0276\u0005",
    "D#\u0002\u0276\u0277\u0007\u0010\u0002\u0002\u0277\u027d\u0003\u0002",
    "\u0002\u0002\u0278\u0279\u0007\u000f\u0002\u0002\u0279\u027a\u0005:",
    "\u001e\u0002\u027a\u027b\u0007\u0010\u0002\u0002\u027b\u027d\u0003\u0002",
    "\u0002\u0002\u027c\u0274\u0003\u0002\u0002\u0002\u027c\u0278\u0003\u0002",
    "\u0002\u0002\u027d9\u0003\u0002\u0002\u0002\u027e\u0283\u0005<\u001f",
    "\u0002\u027f\u0280\u0007K\u0002\u0002\u0280\u0282\u0005<\u001f\u0002",
    "\u0281\u027f\u0003\u0002\u0002\u0002\u0282\u0285\u0003\u0002\u0002\u0002",
    "\u0283\u0281\u0003\u0002\u0002\u0002\u0283\u0284\u0003\u0002\u0002\u0002",
    "\u0284\u0287\u0003\u0002\u0002\u0002\u0285\u0283\u0003\u0002\u0002\u0002",
    "\u0286\u0288\u0005> \u0002\u0287\u0286\u0003\u0002\u0002\u0002\u0287",
    "\u0288\u0003\u0002\u0002\u0002\u0288;\u0003\u0002\u0002\u0002\u0289",
    "\u02a4\u0005\u0086D\u0002\u028a\u028c\u0005|?\u0002\u028b\u028a\u0003",
    "\u0002\u0002\u0002\u028c\u028f\u0003\u0002\u0002\u0002\u028d\u028b\u0003",
    "\u0002\u0002\u0002\u028d\u028e\u0003\u0002\u0002\u0002\u028e\u0291\u0003",
    "\u0002\u0002\u0002\u028f\u028d\u0003\u0002\u0002\u0002\u0290\u0292\t",
    "\u0003\u0002\u0002\u0291\u0290\u0003\u0002\u0002\u0002\u0291\u0292\u0003",
    "\u0002\u0002\u0002\u0292\u0293\u0003\u0002\u0002\u0002\u0293\u02a4\u0005",
    "\u009cO\u0002\u0294\u0296\u0005|?\u0002\u0295\u0294\u0003\u0002\u0002",
    "\u0002\u0296\u0299\u0003\u0002\u0002\u0002\u0297\u0295\u0003\u0002\u0002",
    "\u0002\u0297\u0298\u0003\u0002\u0002\u0002\u0298\u029d\u0003\u0002\u0002",
    "\u0002\u0299\u0297\u0003\u0002\u0002\u0002\u029a\u029c\u0005v<\u0002",
    "\u029b\u029a\u0003\u0002\u0002\u0002\u029c\u029f\u0003\u0002\u0002\u0002",
    "\u029d\u029b\u0003\u0002\u0002\u0002\u029d\u029e\u0003\u0002\u0002\u0002",
    "\u029e\u02a0\u0003\u0002\u0002\u0002\u029f\u029d\u0003\u0002\u0002\u0002",
    "\u02a0\u02a4\u0005\u00a6T\u0002\u02a1\u02a4\u0005*\u0016\u0002\u02a2",
    "\u02a4\u0003\u0002\u0002\u0002\u02a3\u0289\u0003\u0002\u0002\u0002\u02a3",
    "\u028d\u0003\u0002\u0002\u0002\u02a3\u0297\u0003\u0002\u0002\u0002\u02a3",
    "\u02a1\u0003\u0002\u0002\u0002\u02a3\u02a2\u0003\u0002\u0002\u0002\u02a4",
    "=\u0003\u0002\u0002\u0002\u02a5\u02b6\u0005*\u0016\u0002\u02a6\u02b1",
    "\u0005p9\u0002\u02a7\u02a9\u0007\u0018\u0002\u0002\u02a8\u02a7\u0003",
    "\u0002\u0002\u0002\u02a8\u02a9\u0003\u0002\u0002\u0002\u02a9\u02aa\u0003",
    "\u0002\u0002\u0002\u02aa\u02ad\u0007@\u0002\u0002\u02ab\u02ad\u0007",
    "\u0016\u0002\u0002\u02ac\u02a8\u0003\u0002\u0002\u0002\u02ac\u02ab\u0003",
    "\u0002\u0002\u0002\u02ad\u02ae\u0003\u0002\u0002\u0002\u02ae\u02af\u0007",
    "\u0015\u0002\u0002\u02af\u02b1\u0005\u0016\f\u0002\u02b0\u02a6\u0003",
    "\u0002\u0002\u0002\u02b0\u02ac\u0003\u0002\u0002\u0002\u02b1\u02b2\u0003",
    "\u0002\u0002\u0002\u02b2\u02b3\u0007\u000b\u0002\u0002\u02b3\u02b4\u0005",
    ":\u001e\u0002\u02b4\u02b6\u0003\u0002\u0002\u0002\u02b5\u02a5\u0003",
    "\u0002\u0002\u0002\u02b5\u02b0\u0003\u0002\u0002\u0002\u02b6?\u0003",
    "\u0002\u0002\u0002\u02b7\u02bc\u0005B\"\u0002\u02b8\u02b9\u0007K\u0002",
    "\u0002\u02b9\u02bb\u0005B\"\u0002\u02ba\u02b8\u0003\u0002\u0002\u0002",
    "\u02bb\u02be\u0003\u0002\u0002\u0002\u02bc\u02ba\u0003\u0002\u0002\u0002",
    "\u02bc\u02bd\u0003\u0002\u0002\u0002\u02bdA\u0003\u0002\u0002\u0002",
    "\u02be\u02bc\u0003\u0002\u0002\u0002\u02bf\u02c0\u0005L\'\u0002\u02c0",
    "\u02c1\u0007+\u0002\u0002\u02c1\u02cd\u0005(\u0015\u0002\u02c2\u02c4",
    "\u0007L\u0002\u0002\u02c3\u02c2\u0003\u0002\u0002\u0002\u02c3\u02c4",
    "\u0003\u0002\u0002\u0002\u02c4\u02c5\u0003\u0002\u0002\u0002\u02c5\u02cc",
    "\u0005H%\u0002\u02c6\u02c7\u0007L\u0002\u0002\u02c7\u02c8\u0005L\'\u0002",
    "\u02c8\u02c9\u0007%\u0002\u0002\u02c9\u02ca\u0005(\u0015\u0002\u02ca",
    "\u02cc\u0003\u0002\u0002\u0002\u02cb\u02c3\u0003\u0002\u0002\u0002\u02cb",
    "\u02c6\u0003\u0002\u0002\u0002\u02cc\u02cf\u0003\u0002\u0002\u0002\u02cd",
    "\u02cb\u0003\u0002\u0002\u0002\u02cd\u02ce\u0003\u0002\u0002\u0002\u02ce",
    "C\u0003\u0002\u0002\u0002\u02cf\u02cd\u0003\u0002\u0002\u0002\u02d0",
    "\u02d2\u0005F$\u0002\u02d1\u02d0\u0003\u0002\u0002\u0002\u02d2\u02d3",
    "\u0003\u0002\u0002\u0002\u02d3\u02d1\u0003\u0002\u0002\u0002\u02d3\u02d4",
    "\u0003\u0002\u0002\u0002\u02d4E\u0003\u0002\u0002\u0002\u02d5\u02d6",
    "\u0007,\u0002\u0002\u02d6\u02d8\u0005J&\u0002\u02d7\u02d9\u0005H%\u0002",
    "\u02d8\u02d7\u0003\u0002\u0002\u0002\u02d8\u02d9\u0003\u0002\u0002\u0002",
    "\u02d9\u02da\u0003\u0002\u0002\u0002\u02da\u02db\u0007\u000b\u0002\u0002",
    "\u02db\u02dc\u0005:\u001e\u0002\u02dcG\u0003\u0002\u0002\u0002\u02dd",
    "\u02de\u0007\u0019\u0002\u0002\u02de\u02df\u0005,\u0017\u0002\u02df",
    "I\u0003\u0002\u0002\u0002\u02e0\u02e5\u0005L\'\u0002\u02e1\u02e2\u0007",
    "-\u0002\u0002\u02e2\u02e4\u0005L\'\u0002\u02e3\u02e1\u0003\u0002\u0002",
    "\u0002\u02e4\u02e7\u0003\u0002\u0002\u0002\u02e5\u02e3\u0003\u0002\u0002",
    "\u0002\u02e5\u02e6\u0003\u0002\u0002\u0002\u02e6K\u0003\u0002\u0002",
    "\u0002\u02e7\u02e5\u0003\u0002\u0002\u0002\u02e8\u02e9\u0007G\u0002",
    "\u0002\u02e9\u02ea\u0007\u0015\u0002\u0002\u02ea\u02f0\u0005$\u0013",
    "\u0002\u02eb\u02ec\u0007\u0016\u0002\u0002\u02ec\u02ed\u0007\u0015\u0002",
    "\u0002\u02ed\u02f0\u0005$\u0013\u0002\u02ee\u02f0\u0005N(\u0002\u02ef",
    "\u02e8\u0003\u0002\u0002\u0002\u02ef\u02eb\u0003\u0002\u0002\u0002\u02ef",
    "\u02ee\u0003\u0002\u0002\u0002\u02f0M\u0003\u0002\u0002\u0002\u02f1",
    "\u02f4\u0007G\u0002\u0002\u02f2\u02f3\u0007.\u0002\u0002\u02f3\u02f5",
    "\u0005P)\u0002\u02f4\u02f2\u0003\u0002\u0002\u0002\u02f4\u02f5\u0003",
    "\u0002\u0002\u0002\u02f5\u02f8\u0003\u0002\u0002\u0002\u02f6\u02f8\u0005",
    "P)\u0002\u02f7\u02f1\u0003\u0002\u0002\u0002\u02f7\u02f6\u0003\u0002",
    "\u0002\u0002\u02f8O\u0003\u0002\u0002\u0002\u02f9\u0303\u0005R*\u0002",
    "\u02fa\u02ff\u0005R*\u0002\u02fb\u02fc\u0007@\u0002\u0002\u02fc\u02fe",
    "\u0005R*\u0002\u02fd\u02fb\u0003\u0002\u0002\u0002\u02fe\u0301\u0003",
    "\u0002\u0002\u0002\u02ff\u02fd\u0003\u0002\u0002\u0002\u02ff\u0300\u0003",
    "\u0002\u0002\u0002\u0300\u0303\u0003\u0002\u0002\u0002\u0301\u02ff\u0003",
    "\u0002\u0002\u0002\u0302\u02f9\u0003\u0002\u0002\u0002\u0302\u02fa\u0003",
    "\u0002\u0002\u0002\u0303Q\u0003\u0002\u0002\u0002\u0304\u0325\u0007",
    "\u0016\u0002\u0002\u0305\u0325\u0007G\u0002\u0002\u0306\u0325\u0005",
    "\u0002\u0002\u0002\u0307\u030d\u0005\b\u0005\u0002\u0308\u030a\u0007",
    "\f\u0002\u0002\u0309\u030b\u0005T+\u0002\u030a\u0309\u0003\u0002\u0002",
    "\u0002\u030a\u030b\u0003\u0002\u0002\u0002\u030b\u030c\u0003\u0002\u0002",
    "\u0002\u030c\u030e\u0007\r\u0002\u0002\u030d\u0308\u0003\u0002\u0002",
    "\u0002\u030d\u030e\u0003\u0002\u0002\u0002\u030e\u0325\u0003\u0002\u0002",
    "\u0002\u030f\u0310\u0005\b\u0005\u0002\u0310\u0315\u0007\f\u0002\u0002",
    "\u0311\u0313\u0005T+\u0002\u0312\u0311\u0003\u0002\u0002\u0002\u0312",
    "\u0313\u0003\u0002\u0002\u0002\u0313\u0314\u0003\u0002\u0002\u0002\u0314",
    "\u0316\u0007\u0006\u0002\u0002\u0315\u0312\u0003\u0002\u0002\u0002\u0315",
    "\u0316\u0003\u0002\u0002\u0002\u0316\u0319\u0003\u0002\u0002\u0002\u0317",
    "\u0318\u0007G\u0002\u0002\u0318\u031a\u0007.\u0002\u0002\u0319\u0317",
    "\u0003\u0002\u0002\u0002\u0319\u031a\u0003\u0002\u0002\u0002\u031a\u031b",
    "\u0003\u0002\u0002\u0002\u031b\u031c\u0007\u0016\u0002\u0002\u031c\u031d",
    "\u0007\u0017\u0002\u0002\u031d\u031e\u0007\r\u0002\u0002\u031e\u0325",
    "\u0003\u0002\u0002\u0002\u031f\u0321\u0007\f\u0002\u0002\u0320\u0322",
    "\u0005T+\u0002\u0321\u0320\u0003\u0002\u0002\u0002\u0321\u0322\u0003",
    "\u0002\u0002\u0002\u0322\u0323\u0003\u0002\u0002\u0002\u0323\u0325\u0007",
    "\r\u0002\u0002\u0324\u0304\u0003\u0002\u0002\u0002\u0324\u0305\u0003",
    "\u0002\u0002\u0002\u0324\u0306\u0003\u0002\u0002\u0002\u0324\u0307\u0003",
    "\u0002\u0002\u0002\u0324\u030f\u0003\u0002\u0002\u0002\u0324\u031f\u0003",
    "\u0002\u0002\u0002\u0325S\u0003\u0002\u0002\u0002\u0326\u032b\u0005",
    "J&\u0002\u0327\u0328\u0007\u0006\u0002\u0002\u0328\u032a\u0005J&\u0002",
    "\u0329\u0327\u0003\u0002\u0002\u0002\u032a\u032d\u0003\u0002\u0002\u0002",
    "\u032b\u0329\u0003\u0002\u0002\u0002\u032b\u032c\u0003\u0002\u0002\u0002",
    "\u032c\u0334\u0003\u0002\u0002\u0002\u032d\u032b\u0003\u0002\u0002\u0002",
    "\u032e\u0330\u0007\u0016\u0002\u0002\u032f\u032e\u0003\u0002\u0002\u0002",
    "\u0330\u0331\u0003\u0002\u0002\u0002\u0331\u032f\u0003\u0002\u0002\u0002",
    "\u0331\u0332\u0003\u0002\u0002\u0002\u0332\u0334\u0003\u0002\u0002\u0002",
    "\u0333\u0326\u0003\u0002\u0002\u0002\u0333\u032f\u0003\u0002\u0002\u0002",
    "\u0334U\u0003\u0002\u0002\u0002\u0335\u0336\u0007\t\u0002\u0002\u0336",
    "\u033b\u0005Z.\u0002\u0337\u0338\u0007\u0006\u0002\u0002\u0338\u033a",
    "\u0005Z.\u0002\u0339\u0337\u0003\u0002\u0002\u0002\u033a\u033d\u0003",
    "\u0002\u0002\u0002\u033b\u0339\u0003\u0002\u0002\u0002\u033b\u033c\u0003",
    "\u0002\u0002\u0002\u033c\u033e\u0003\u0002\u0002\u0002\u033d\u033b\u0003",
    "\u0002\u0002\u0002\u033e\u033f\u0007\n\u0002\u0002\u033fW\u0003\u0002",
    "\u0002\u0002\u0340\u0341\u0007\t\u0002\u0002\u0341\u0346\u0005\\/\u0002",
    "\u0342\u0343\u0007\u0006\u0002\u0002\u0343\u0345\u0005\\/\u0002\u0344",
    "\u0342\u0003\u0002\u0002\u0002\u0345\u0348\u0003\u0002\u0002\u0002\u0346",
    "\u0344\u0003\u0002\u0002\u0002\u0346\u0347\u0003\u0002\u0002\u0002\u0347",
    "\u0349\u0003\u0002\u0002\u0002\u0348\u0346\u0003\u0002\u0002\u0002\u0349",
    "\u034a\u0007\n\u0002\u0002\u034aY\u0003\u0002\u0002\u0002\u034b\u034d",
    "\u0005|?\u0002\u034c\u034b\u0003\u0002\u0002\u0002\u034c\u034d\u0003",
    "\u0002\u0002\u0002\u034d\u034f\u0003\u0002\u0002\u0002\u034e\u0350\t",
    "\u0004\u0002\u0002\u034f\u034e\u0003\u0002\u0002\u0002\u034f\u0350\u0003",
    "\u0002\u0002\u0002\u0350\u0351\u0003\u0002\u0002\u0002\u0351\u0352\u0005",
    "\\/\u0002\u0352[\u0003\u0002\u0002\u0002\u0353\u0355\t\u0005\u0002\u0002",
    "\u0354\u0356\u0005V,\u0002\u0355\u0354\u0003\u0002\u0002\u0002\u0355",
    "\u0356\u0003\u0002\u0002\u0002\u0356\u0359\u0003\u0002\u0002\u0002\u0357",
    "\u0358\u0007/\u0002\u0002\u0358\u035a\u0005\f\u0007\u0002\u0359\u0357",
    "\u0003\u0002\u0002\u0002\u0359\u035a\u0003\u0002\u0002\u0002\u035a\u035d",
    "\u0003\u0002\u0002\u0002\u035b\u035c\u00070\u0002\u0002\u035c\u035e",
    "\u0005\f\u0007\u0002\u035d\u035b\u0003\u0002\u0002\u0002\u035d\u035e",
    "\u0003\u0002\u0002\u0002\u035e\u0363\u0003\u0002\u0002\u0002\u035f\u0360",
    "\u00071\u0002\u0002\u0360\u0362\u0005\f\u0007\u0002\u0361\u035f\u0003",
    "\u0002\u0002\u0002\u0362\u0365\u0003\u0002\u0002\u0002\u0363\u0361\u0003",
    "\u0002\u0002\u0002\u0363\u0364\u0003\u0002\u0002\u0002\u0364\u036a\u0003",
    "\u0002\u0002\u0002\u0365\u0363\u0003\u0002\u0002\u0002\u0366\u0367\u0007",
    "\u0015\u0002\u0002\u0367\u0369\u0005\f\u0007\u0002\u0368\u0366\u0003",
    "\u0002\u0002\u0002\u0369\u036c\u0003\u0002\u0002\u0002\u036a\u0368\u0003",
    "\u0002\u0002\u0002\u036a\u036b\u0003\u0002\u0002\u0002\u036b]\u0003",
    "\u0002\u0002\u0002\u036c\u036a\u0003\u0002\u0002\u0002\u036d\u036f\u0005",
    "`1\u0002\u036e\u036d\u0003\u0002\u0002\u0002\u036f\u0372\u0003\u0002",
    "\u0002\u0002\u0370\u036e\u0003\u0002\u0002\u0002\u0370\u0371\u0003\u0002",
    "\u0002\u0002\u0371\u0378\u0003\u0002\u0002\u0002\u0372\u0370\u0003\u0002",
    "\u0002\u0002\u0373\u0374\u0007\f\u0002\u0002\u0374\u0375\u0007\u0018",
    "\u0002\u0002\u0375\u0376\u0005b2\u0002\u0376\u0377\u0007\r\u0002\u0002",
    "\u0377\u0379\u0003\u0002\u0002\u0002\u0378\u0373\u0003\u0002\u0002\u0002",
    "\u0378\u0379\u0003\u0002\u0002\u0002\u0379_\u0003\u0002\u0002\u0002",
    "\u037a\u037c\u0007\f\u0002\u0002\u037b\u037d\u0005b2\u0002\u037c\u037b",
    "\u0003\u0002\u0002\u0002\u037c\u037d\u0003\u0002\u0002\u0002\u037d\u037e",
    "\u0003\u0002\u0002\u0002\u037e\u037f\u0007\r\u0002\u0002\u037fa\u0003",
    "\u0002\u0002\u0002\u0380\u0385\u0005d3\u0002\u0381\u0382\u0007\u0006",
    "\u0002\u0002\u0382\u0384\u0005d3\u0002\u0383\u0381\u0003\u0002\u0002",
    "\u0002\u0384\u0387\u0003\u0002\u0002\u0002\u0385\u0383\u0003\u0002\u0002",
    "\u0002\u0385\u0386\u0003\u0002\u0002\u0002\u0386c\u0003\u0002\u0002",
    "\u0002\u0387\u0385\u0003\u0002\u0002\u0002\u0388\u038a\u0005|?\u0002",
    "\u0389\u0388\u0003\u0002\u0002\u0002\u038a\u038d\u0003\u0002\u0002\u0002",
    "\u038b\u0389\u0003\u0002\u0002\u0002\u038b\u038c\u0003\u0002\u0002\u0002",
    "\u038c\u038e\u0003\u0002\u0002\u0002\u038d\u038b\u0003\u0002\u0002\u0002",
    "\u038e\u0391\u0007@\u0002\u0002\u038f\u0390\u0007\u0015\u0002\u0002",
    "\u0390\u0392\u0005f4\u0002\u0391\u038f\u0003\u0002\u0002\u0002\u0391",
    "\u0392\u0003\u0002\u0002\u0002\u0392\u0395\u0003\u0002\u0002\u0002\u0393",
    "\u0394\u0007%\u0002\u0002\u0394\u0396\u0005(\u0015\u0002\u0395\u0393",
    "\u0003\u0002\u0002\u0002\u0395\u0396\u0003\u0002\u0002\u0002\u0396e",
    "\u0003\u0002\u0002\u0002\u0397\u039e\u0005\f\u0007\u0002\u0398\u0399",
    "\u0007\u000b\u0002\u0002\u0399\u039e\u0005\f\u0007\u0002\u039a\u039b",
    "\u0005\f\u0007\u0002\u039b\u039c\u0007\u0017\u0002\u0002\u039c\u039e",
    "\u0003\u0002\u0002\u0002\u039d\u0397\u0003\u0002\u0002\u0002\u039d\u0398",
    "\u0003\u0002\u0002\u0002\u039d\u039a\u0003\u0002\u0002\u0002\u039eg",
    "\u0003\u0002\u0002\u0002\u039f\u03a1\u0005j6\u0002\u03a0\u039f\u0003",
    "\u0002\u0002\u0002\u03a1\u03a4\u0003\u0002\u0002\u0002\u03a2\u03a0\u0003",
    "\u0002\u0002\u0002\u03a2\u03a3\u0003\u0002\u0002\u0002\u03a3\u03aa\u0003",
    "\u0002\u0002\u0002\u03a4\u03a2\u0003\u0002\u0002\u0002\u03a5\u03a6\u0007",
    "\f\u0002\u0002\u03a6\u03a7\u0007\u0018\u0002\u0002\u03a7\u03a8\u0005",
    "l7\u0002\u03a8\u03a9\u0007\r\u0002\u0002\u03a9\u03ab\u0003\u0002\u0002",
    "\u0002\u03aa\u03a5\u0003\u0002\u0002\u0002\u03aa\u03ab\u0003\u0002\u0002",
    "\u0002\u03abi\u0003\u0002\u0002\u0002\u03ac\u03ae\u0007\f\u0002\u0002",
    "\u03ad\u03af\u0005l7\u0002\u03ae\u03ad\u0003\u0002\u0002\u0002\u03ae",
    "\u03af\u0003\u0002\u0002\u0002\u03af\u03b0\u0003\u0002\u0002\u0002\u03b0",
    "\u03b1\u0007\r\u0002\u0002\u03b1k\u0003\u0002\u0002\u0002\u03b2\u03b7",
    "\u0005n8\u0002\u03b3\u03b4\u0007\u0006\u0002\u0002\u03b4\u03b6\u0005",
    "n8\u0002\u03b5\u03b3\u0003\u0002\u0002\u0002\u03b6\u03b9\u0003\u0002",
    "\u0002\u0002\u03b7\u03b5\u0003\u0002\u0002\u0002\u03b7\u03b8\u0003\u0002",
    "\u0002\u0002\u03b8m\u0003\u0002\u0002\u0002\u03b9\u03b7\u0003\u0002",
    "\u0002\u0002\u03ba\u03bc\u0005|?\u0002\u03bb\u03ba\u0003\u0002\u0002",
    "\u0002\u03bc\u03bf\u0003\u0002\u0002\u0002\u03bd\u03bb\u0003\u0002\u0002",
    "\u0002\u03bd\u03be\u0003\u0002\u0002\u0002\u03be\u03c3\u0003\u0002\u0002",
    "\u0002\u03bf\u03bd\u0003\u0002\u0002\u0002\u03c0\u03c2\u0005t;\u0002",
    "\u03c1\u03c0\u0003\u0002\u0002\u0002\u03c2\u03c5\u0003\u0002\u0002\u0002",
    "\u03c3\u03c1\u0003\u0002\u0002\u0002\u03c3\u03c4\u0003\u0002\u0002\u0002",
    "\u03c4\u03c7\u0003\u0002\u0002\u0002\u03c5\u03c3\u0003\u0002\u0002\u0002",
    "\u03c6\u03c8\t\u0006\u0002\u0002\u03c7\u03c6\u0003\u0002\u0002\u0002",
    "\u03c7\u03c8\u0003\u0002\u0002\u0002\u03c8\u03c9\u0003\u0002\u0002\u0002",
    "\u03c9\u03ca\u0007@\u0002\u0002\u03ca\u03cb\u0007\u0015\u0002\u0002",
    "\u03cb\u03ce\u0005f4\u0002\u03cc\u03cd\u0007%\u0002\u0002\u03cd\u03cf",
    "\u0005(\u0015\u0002\u03ce\u03cc\u0003\u0002\u0002\u0002\u03ce\u03cf",
    "\u0003\u0002\u0002\u0002\u03cfo\u0003\u0002\u0002\u0002\u03d0\u03d1",
    "\u0007\f\u0002\u0002\u03d1\u03d6\u0005r:\u0002\u03d2\u03d3\u0007\u0006",
    "\u0002\u0002\u03d3\u03d5\u0005r:\u0002\u03d4\u03d2\u0003\u0002\u0002",
    "\u0002\u03d5\u03d8\u0003\u0002\u0002\u0002\u03d6\u03d4\u0003\u0002\u0002",
    "\u0002\u03d6\u03d7\u0003\u0002\u0002\u0002\u03d7\u03d9\u0003\u0002\u0002",
    "\u0002\u03d8\u03d6\u0003\u0002\u0002\u0002\u03d9\u03da\u0007\r\u0002",
    "\u0002\u03daq\u0003\u0002\u0002\u0002\u03db\u03de\t\u0005\u0002\u0002",
    "\u03dc\u03dd\u0007\u0015\u0002\u0002\u03dd\u03df\u0005\f\u0007\u0002",
    "\u03de\u03dc\u0003\u0002\u0002\u0002\u03de\u03df\u0003\u0002\u0002\u0002",
    "\u03dfs\u0003\u0002\u0002\u0002\u03e0\u03e4\u0005v<\u0002\u03e1\u03e4",
    "\u0005x=\u0002\u03e2\u03e4\u00073\u0002\u0002\u03e3\u03e0\u0003\u0002",
    "\u0002\u0002\u03e3\u03e1\u0003\u0002\u0002\u0002\u03e3\u03e2\u0003\u0002",
    "\u0002\u0002\u03e4u\u0003\u0002\u0002\u0002\u03e5\u03e6\t\u0007\u0002",
    "\u0002\u03e6w\u0003\u0002\u0002\u0002\u03e7\u03e9\t\b\u0002\u0002\u03e8",
    "\u03ea\u0005z>\u0002\u03e9\u03e8\u0003\u0002\u0002\u0002\u03e9\u03ea",
    "\u0003\u0002\u0002\u0002\u03eay\u0003\u0002\u0002\u0002\u03eb\u03ec",
    "\u0007\t\u0002\u0002\u03ec\u03ed\t\t\u0002\u0002\u03ed\u03ee\u0007\n",
    "\u0002\u0002\u03ee{\u0003\u0002\u0002\u0002\u03ef\u03f0\u0007.\u0002",
    "\u0002\u03f0\u03f4\u0005\u001a\u000e\u0002\u03f1\u03f3\u00056\u001c",
    "\u0002\u03f2\u03f1\u0003\u0002\u0002\u0002\u03f3\u03f6\u0003\u0002\u0002",
    "\u0002\u03f4\u03f2\u0003\u0002\u0002\u0002\u03f4\u03f5\u0003\u0002\u0002",
    "\u0002\u03f5}\u0003\u0002\u0002\u0002\u03f6\u03f4\u0003\u0002\u0002",
    "\u0002\u03f7\u03f8\u0007.\u0002\u0002\u03f8\u03f9\u0005\u001a\u000e",
    "\u0002\u03f9\u03fa\u00056\u001c\u0002\u03fa\u007f\u0003\u0002\u0002",
    "\u0002\u03fb\u03fd\u0007N\u0002\u0002\u03fc\u03fb\u0003\u0002\u0002",
    "\u0002\u03fc\u03fd\u0003\u0002\u0002\u0002\u03fd\u03fe\u0003\u0002\u0002",
    "\u0002\u03fe\u0400\u0007\u000f\u0002\u0002\u03ff\u0401\u0005\u0084C",
    "\u0002\u0400\u03ff\u0003\u0002\u0002\u0002\u0400\u0401\u0003\u0002\u0002",
    "\u0002\u0401\u0402\u0003\u0002\u0002\u0002\u0402\u0407\u0005\u0082B",
    "\u0002\u0403\u0404\u0007K\u0002\u0002\u0404\u0406\u0005\u0082B\u0002",
    "\u0405\u0403\u0003\u0002\u0002\u0002\u0406\u0409\u0003\u0002\u0002\u0002",
    "\u0407\u0405\u0003\u0002\u0002\u0002\u0407\u0408\u0003\u0002\u0002\u0002",
    "\u0408\u040a\u0003\u0002\u0002\u0002\u0409\u0407\u0003\u0002\u0002\u0002",
    "\u040a\u040b\u0007\u0010\u0002\u0002\u040b\u0081\u0003\u0002\u0002\u0002",
    "\u040c\u042a\u0005\u0086D\u0002\u040d\u040f\u0005|?\u0002\u040e\u040d",
    "\u0003\u0002\u0002\u0002\u040f\u0412\u0003\u0002\u0002\u0002\u0410\u040e",
    "\u0003\u0002\u0002\u0002\u0410\u0411\u0003\u0002\u0002\u0002\u0411\u0416",
    "\u0003\u0002\u0002\u0002\u0412\u0410\u0003\u0002\u0002\u0002\u0413\u0415",
    "\u0005t;\u0002\u0414\u0413\u0003\u0002\u0002\u0002\u0415\u0418\u0003",
    "\u0002\u0002\u0002\u0416\u0414\u0003\u0002\u0002\u0002\u0416\u0417\u0003",
    "\u0002\u0002\u0002\u0417\u0419\u0003\u0002\u0002\u0002\u0418\u0416\u0003",
    "\u0002\u0002\u0002\u0419\u042a\u0005\u009cO\u0002\u041a\u041c\u0005",
    "|?\u0002\u041b\u041a\u0003\u0002\u0002\u0002\u041c\u041f\u0003\u0002",
    "\u0002\u0002\u041d\u041b\u0003\u0002\u0002\u0002\u041d\u041e\u0003\u0002",
    "\u0002\u0002\u041e\u0423\u0003\u0002\u0002\u0002\u041f\u041d\u0003\u0002",
    "\u0002\u0002\u0420\u0422\u0005t;\u0002\u0421\u0420\u0003\u0002\u0002",
    "\u0002\u0422\u0425\u0003\u0002\u0002\u0002\u0423\u0421\u0003\u0002\u0002",
    "\u0002\u0423\u0424\u0003\u0002\u0002\u0002\u0424\u0426\u0003\u0002\u0002",
    "\u0002\u0425\u0423\u0003\u0002\u0002\u0002\u0426\u042a\u0005\u008eH",
    "\u0002\u0427\u042a\u0005(\u0015\u0002\u0428\u042a\u0003\u0002\u0002",
    "\u0002\u0429\u040c\u0003\u0002\u0002\u0002\u0429\u0410\u0003\u0002\u0002",
    "\u0002\u0429\u041d\u0003\u0002\u0002\u0002\u0429\u0427\u0003\u0002\u0002",
    "\u0002\u0429\u0428\u0003\u0002\u0002\u0002\u042a\u0083\u0003\u0002\u0002",
    "\u0002\u042b\u042e\u0007@\u0002\u0002\u042c\u042d\u0007\u0015\u0002",
    "\u0002\u042d\u042f\u0005\f\u0007\u0002\u042e\u042c\u0003\u0002\u0002",
    "\u0002\u042e\u042f\u0003\u0002\u0002\u0002\u042f\u0430\u0003\u0002\u0002",
    "\u0002\u0430\u0437\u0007\u000b\u0002\u0002\u0431\u0432\u0007\u0007\u0002",
    "\u0002\u0432\u0433\u0007\u0015\u0002\u0002\u0433\u0434\u0005\f\u0007",
    "\u0002\u0434\u0435\u0007\u000b\u0002\u0002\u0435\u0437\u0003\u0002\u0002",
    "\u0002\u0436\u042b\u0003\u0002\u0002\u0002\u0436\u0431\u0003\u0002\u0002",
    "\u0002\u0437\u0085\u0003\u0002\u0002\u0002\u0438\u0439\u00079\u0002",
    "\u0002\u0439\u043e\u0005\u0088E\u0002\u043a\u043b\u0007\u0006\u0002",
    "\u0002\u043b\u043d\u0005\u0088E\u0002\u043c\u043a\u0003\u0002\u0002",
    "\u0002\u043d\u0440\u0003\u0002\u0002\u0002\u043e\u043c\u0003\u0002\u0002",
    "\u0002\u043e\u043f\u0003\u0002\u0002\u0002\u043f\u0087\u0003\u0002\u0002",
    "\u0002\u0440\u043e\u0003\u0002\u0002\u0002\u0441\u0442\u0005\b\u0005",
    "\u0002\u0442\u0446\u0007\u0005\u0002\u0002\u0443\u0447\u0007@\u0002",
    "\u0002\u0444\u0447\u0007\u0016\u0002\u0002\u0445\u0447\u0005\u008aF",
    "\u0002\u0446\u0443\u0003\u0002\u0002\u0002\u0446\u0444\u0003\u0002\u0002",
    "\u0002\u0446\u0445\u0003\u0002\u0002\u0002\u0447\u0089\u0003\u0002\u0002",
    "\u0002\u0448\u044e\u0007\u000f\u0002\u0002\u0449\u044a\u0005\u008cG",
    "\u0002\u044a\u044b\u0007\u0006\u0002\u0002\u044b\u044d\u0003\u0002\u0002",
    "\u0002\u044c\u0449\u0003\u0002\u0002\u0002\u044d\u0450\u0003\u0002\u0002",
    "\u0002\u044e\u044c\u0003\u0002\u0002\u0002\u044e\u044f\u0003\u0002\u0002",
    "\u0002\u044f\u0453\u0003\u0002\u0002\u0002\u0450\u044e\u0003\u0002\u0002",
    "\u0002\u0451\u0454\u0005\u008cG\u0002\u0452\u0454\u0007\u0016\u0002",
    "\u0002\u0453\u0451\u0003\u0002\u0002\u0002\u0453\u0452\u0003\u0002\u0002",
    "\u0002\u0454\u0455\u0003\u0002\u0002\u0002\u0455\u0456\u0007\u0010\u0002",
    "\u0002\u0456\u008b\u0003\u0002\u0002\u0002\u0457\u045c\u0007@\u0002",
    "\u0002\u0458\u0459\u0007\u000b\u0002\u0002\u0459\u045d\u0007@\u0002",
    "\u0002\u045a\u045b\u0007\u000b\u0002\u0002\u045b\u045d\u0007\u0016\u0002",
    "\u0002\u045c\u0458\u0003\u0002\u0002\u0002\u045c\u045a\u0003\u0002\u0002",
    "\u0002\u045d\u008d\u0003\u0002\u0002\u0002\u045e\u045f\u0007\u0012\u0002",
    "\u0002\u045f\u0467\u0005\u0090I\u0002\u0460\u0461\u00072\u0002\u0002",
    "\u0461\u0467\u0005\u0092J\u0002\u0462\u0463\u0007:\u0002\u0002\u0463",
    "\u0467\u0005\u0094K\u0002\u0464\u0465\u0007\u0011\u0002\u0002\u0465",
    "\u0467\u0005\u0098M\u0002\u0466\u045e\u0003\u0002\u0002\u0002\u0466",
    "\u0460\u0003\u0002\u0002\u0002\u0466\u0462\u0003\u0002\u0002\u0002\u0466",
    "\u0464\u0003\u0002\u0002\u0002\u0467\u008f\u0003\u0002\u0002\u0002\u0468",
    "\u0469\u0005\u0006\u0004\u0002\u0469\u046a\u0007\u0015\u0002\u0002\u046a",
    "\u046b\u0005\f\u0007\u0002\u046b\u0091\u0003\u0002\u0002\u0002\u046c",
    "\u046d\u0005\u0006\u0004\u0002\u046d\u046e\u0007\u0015\u0002\u0002\u046e",
    "\u046f\u0005\f\u0007\u0002\u046f\u0093\u0003\u0002\u0002\u0002\u0470",
    "\u0473\u0005\u0096L\u0002\u0471\u0472\u0007\u0015\u0002\u0002\u0472",
    "\u0474\u0005\f\u0007\u0002\u0473\u0471\u0003\u0002\u0002\u0002\u0473",
    "\u0474\u0003\u0002\u0002\u0002\u0474\u0095\u0003\u0002\u0002\u0002\u0475",
    "\u0477\u0007@\u0002\u0002\u0476\u0478\u0005X-\u0002\u0477\u0476\u0003",
    "\u0002\u0002\u0002\u0477\u0478\u0003\u0002\u0002\u0002\u0478\u0479\u0003",
    "\u0002\u0002\u0002\u0479\u047a\u0005^0\u0002\u047a\u0097\u0003\u0002",
    "\u0002\u0002\u047b\u047d\u0007@\u0002\u0002\u047c\u047e\u0005V,\u0002",
    "\u047d\u047c\u0003\u0002\u0002\u0002\u047d\u047e\u0003\u0002\u0002\u0002",
    "\u047e\u0481\u0003\u0002\u0002\u0002\u047f\u0480\u0007/\u0002\u0002",
    "\u0480\u0482\u0005\f\u0007\u0002\u0481\u047f\u0003\u0002\u0002\u0002",
    "\u0481\u0482\u0003\u0002\u0002\u0002\u0482\u0485\u0003\u0002\u0002\u0002",
    "\u0483\u0484\u00070\u0002\u0002\u0484\u0486\u0005\f\u0007\u0002\u0485",
    "\u0483\u0003\u0002\u0002\u0002\u0485\u0486\u0003\u0002\u0002\u0002\u0486",
    "\u0099\u0003\u0002\u0002\u0002\u0487\u0488\u0007\u0012\u0002\u0002\u0488",
    "\u048c\u0005\u009eP\u0002\u0489\u048a\u00072\u0002\u0002\u048a\u048c",
    "\u0005\u00a0Q\u0002\u048b\u0487\u0003\u0002\u0002\u0002\u048b\u0489",
    "\u0003\u0002\u0002\u0002\u048c\u009b\u0003\u0002\u0002\u0002\u048d\u0494",
    "\u0005\u009aN\u0002\u048e\u048f\u0007:\u0002\u0002\u048f\u0494\u0005",
    "\u00a2R\u0002\u0490\u0491\u0007\u0011\u0002\u0002\u0491\u0494\u0005",
    "\u00a4S\u0002\u0492\u0494\u0005\u00a6T\u0002\u0493\u048d\u0003\u0002",
    "\u0002\u0002\u0493\u048e\u0003\u0002\u0002\u0002\u0493\u0490\u0003\u0002",
    "\u0002\u0002\u0493\u0492\u0003\u0002\u0002\u0002\u0494\u009d\u0003\u0002",
    "\u0002\u0002\u0495\u049a\u0005N(\u0002\u0496\u0497\u0007\u0006\u0002",
    "\u0002\u0497\u0499\u0005N(\u0002\u0498\u0496\u0003\u0002\u0002\u0002",
    "\u0499\u049c\u0003\u0002\u0002\u0002\u049a\u0498\u0003\u0002\u0002\u0002",
    "\u049a\u049b\u0003\u0002\u0002\u0002\u049b\u04a1\u0003\u0002\u0002\u0002",
    "\u049c\u049a\u0003\u0002\u0002\u0002\u049d\u049e\u0007\u0015\u0002\u0002",
    "\u049e\u04a0\u0005\f\u0007\u0002\u049f\u049d\u0003\u0002\u0002\u0002",
    "\u04a0\u04a3\u0003\u0002\u0002\u0002\u04a1\u049f\u0003\u0002\u0002\u0002",
    "\u04a1\u04a2\u0003\u0002\u0002\u0002\u04a2\u04a4\u0003\u0002\u0002\u0002",
    "\u04a3\u04a1\u0003\u0002\u0002\u0002\u04a4\u04a5\u0007%\u0002\u0002",
    "\u04a5\u04a6\u0005(\u0015\u0002\u04a6\u009f\u0003\u0002\u0002\u0002",
    "\u04a7\u04af\u0005\u009eP\u0002\u04a8\u04a9\u0005\u0006\u0004\u0002",
    "\u04a9\u04aa\u0007\u0015\u0002\u0002\u04aa\u04ab\u0005\f\u0007\u0002",
    "\u04ab\u04ac\u0007%\u0002\u0002\u04ac\u04ad\u0007\u0016\u0002\u0002",
    "\u04ad\u04af\u0003\u0002\u0002\u0002\u04ae\u04a7\u0003\u0002\u0002\u0002",
    "\u04ae\u04a8\u0003\u0002\u0002\u0002\u04af\u00a1\u0003\u0002\u0002\u0002",
    "\u04b0\u04b3\u0005\u0096L\u0002\u04b1\u04b2\u0007\u0015\u0002\u0002",
    "\u04b2\u04b4\u0005\f\u0007\u0002\u04b3\u04b1\u0003\u0002\u0002\u0002",
    "\u04b3\u04b4\u0003\u0002\u0002\u0002\u04b4\u04b5\u0003\u0002\u0002\u0002",
    "\u04b5\u04b6\u0007%\u0002\u0002\u04b6\u04b7\u0005(\u0015\u0002\u04b7",
    "\u04c6\u0003\u0002\u0002\u0002\u04b8\u04b9\u0005\u0096L\u0002\u04b9",
    "\u04ba\u0007\u000f\u0002\u0002\u04ba\u04bb\u0005:\u001e\u0002\u04bb",
    "\u04bc\u0007\u0010\u0002\u0002\u04bc\u04c6\u0003\u0002\u0002\u0002\u04bd",
    "\u04be\u0007\u0007\u0002\u0002\u04be\u04bf\u0005`1\u0002\u04bf\u04c3",
    "\u0005^0\u0002\u04c0\u04c1\u0007%\u0002\u0002\u04c1\u04c4\u0005\u00c0",
    "a\u0002\u04c2\u04c4\u0005\u00c2b\u0002\u04c3\u04c0\u0003\u0002\u0002",
    "\u0002\u04c3\u04c2\u0003\u0002\u0002\u0002\u04c4\u04c6\u0003\u0002\u0002",
    "\u0002\u04c5\u04b0\u0003\u0002\u0002\u0002\u04c5\u04b8\u0003\u0002\u0002",
    "\u0002\u04c5\u04bd\u0003\u0002\u0002\u0002\u04c6\u00a3\u0003\u0002\u0002",
    "\u0002\u04c7\u04c9\u0007@\u0002\u0002\u04c8\u04ca\u0005V,\u0002\u04c9",
    "\u04c8\u0003\u0002\u0002\u0002\u04c9\u04ca\u0003\u0002\u0002\u0002\u04ca",
    "\u04cb\u0003\u0002\u0002\u0002\u04cb\u04cc\u0007%\u0002\u0002\u04cc",
    "\u04cd\u0005\f\u0007\u0002\u04cd\u00a5\u0003\u0002\u0002\u0002\u04ce",
    "\u04d0\u0007,\u0002\u0002\u04cf\u04ce\u0003\u0002\u0002\u0002\u04cf",
    "\u04d0\u0003\u0002\u0002\u0002\u04d0\u04d1\u0003\u0002\u0002\u0002\u04d1",
    "\u04d2\u0007;\u0002\u0002\u04d2\u04db\u0005\u00a8U\u0002\u04d3\u04d5",
    "\u0007,\u0002\u0002\u04d4\u04d3\u0003\u0002\u0002\u0002\u04d4\u04d5",
    "\u0003\u0002\u0002\u0002\u04d5\u04d6\u0003\u0002\u0002\u0002\u04d6\u04d7",
    "\u0007<\u0002\u0002\u04d7\u04db\u0005\u00acW\u0002\u04d8\u04d9\u0007",
    "=\u0002\u0002\u04d9\u04db\u0005\u00aaV\u0002\u04da\u04cf\u0003\u0002",
    "\u0002\u0002\u04da\u04d4\u0003\u0002\u0002\u0002\u04da\u04d8\u0003\u0002",
    "\u0002\u0002\u04db\u00a7\u0003\u0002\u0002\u0002\u04dc\u04de\u0007@",
    "\u0002\u0002\u04dd\u04df\u0005V,\u0002\u04de\u04dd\u0003\u0002\u0002",
    "\u0002\u04de\u04df\u0003\u0002\u0002\u0002\u04df\u04e3\u0003\u0002\u0002",
    "\u0002\u04e0\u04e2\u0005~@\u0002\u04e1\u04e0\u0003\u0002\u0002\u0002",
    "\u04e2\u04e5\u0003\u0002\u0002\u0002\u04e3\u04e1\u0003\u0002\u0002\u0002",
    "\u04e3\u04e4\u0003\u0002\u0002\u0002\u04e4\u04e7\u0003\u0002\u0002\u0002",
    "\u04e5\u04e3\u0003\u0002\u0002\u0002\u04e6\u04e8\u0005x=\u0002\u04e7",
    "\u04e6\u0003\u0002\u0002\u0002\u04e7\u04e8\u0003\u0002\u0002\u0002\u04e8",
    "\u04e9\u0003\u0002\u0002\u0002\u04e9\u04ea\u0005h5\u0002\u04ea\u04eb",
    "\u0005\u00aeX\u0002\u04eb\u00a9\u0003\u0002\u0002\u0002\u04ec\u04ee",
    "\u0007@\u0002\u0002\u04ed\u04ef\u0005V,\u0002\u04ee\u04ed\u0003\u0002",
    "\u0002\u0002\u04ee\u04ef\u0003\u0002\u0002\u0002\u04ef\u04f0\u0003\u0002",
    "\u0002\u0002\u04f0\u04f1\u0005\u00b0Y\u0002\u04f1\u00ab\u0003\u0002",
    "\u0002\u0002\u04f2\u04f3\u0007@\u0002\u0002\u04f3\u04f4\u0005\u00ae",
    "X\u0002\u04f4\u00ad\u0003\u0002\u0002\u0002\u04f5\u04f6\u0007>\u0002",
    "\u0002\u04f6\u04fe\u0005\u00b2Z\u0002\u04f7\u04f9\u0007>\u0002\u0002",
    "\u04f8\u04f7\u0003\u0002\u0002\u0002\u04f8\u04f9\u0003\u0002\u0002\u0002",
    "\u04f9\u04fa\u0003\u0002\u0002\u0002\u04fa\u04fc\u0005\u0080A\u0002",
    "\u04fb\u04f8\u0003\u0002\u0002\u0002\u04fb\u04fc\u0003\u0002\u0002\u0002",
    "\u04fc\u04fe\u0003\u0002\u0002\u0002\u04fd\u04f5\u0003\u0002\u0002\u0002",
    "\u04fd\u04fb\u0003\u0002\u0002\u0002\u04fe\u00af\u0003\u0002\u0002\u0002",
    "\u04ff\u0500\u0007>\u0002\u0002\u0500\u0508\u0005\u00b4[\u0002\u0501",
    "\u0503\u0007>\u0002\u0002\u0502\u0501\u0003\u0002\u0002\u0002\u0502",
    "\u0503\u0003\u0002\u0002\u0002\u0503\u0504\u0003\u0002\u0002\u0002\u0504",
    "\u0506\u0005\u0080A\u0002\u0505\u0502\u0003\u0002\u0002\u0002\u0505",
    "\u0506\u0003\u0002\u0002\u0002\u0506\u0508\u0003\u0002\u0002\u0002\u0507",
    "\u04ff\u0003\u0002\u0002\u0002\u0507\u0505\u0003\u0002\u0002\u0002\u0508",
    "\u00b1\u0003\u0002\u0002\u0002\u0509\u050b\u0005\u00bc_\u0002\u050a",
    "\u0509\u0003\u0002\u0002\u0002\u050a\u050b\u0003\u0002\u0002\u0002\u050b",
    "\u050c\u0003\u0002\u0002\u0002\u050c\u050e\u0005\u00b6\\\u0002\u050d",
    "\u050f\u0005\u0080A\u0002\u050e\u050d\u0003\u0002\u0002\u0002\u050e",
    "\u050f\u0003\u0002\u0002\u0002\u050f\u00b3\u0003\u0002\u0002\u0002\u0510",
    "\u0512\u0005\u00bc_\u0002\u0511\u0510\u0003\u0002\u0002\u0002\u0511",
    "\u0512\u0003\u0002\u0002\u0002\u0512\u0513\u0003\u0002\u0002\u0002\u0513",
    "\u0515\u0005\u00b8]\u0002\u0514\u0516\u0005\u0080A\u0002\u0515\u0514",
    "\u0003\u0002\u0002\u0002\u0515\u0516\u0003\u0002\u0002\u0002\u0516\u00b5",
    "\u0003\u0002\u0002\u0002\u0517\u051c\u0005\u00ba^\u0002\u0518\u0519",
    "\u0007\u0013\u0002\u0002\u0519\u051b\u0005\u0018\r\u0002\u051a\u0518",
    "\u0003\u0002\u0002\u0002\u051b\u051e\u0003\u0002\u0002\u0002\u051c\u051a",
    "\u0003\u0002\u0002\u0002\u051c\u051d\u0003\u0002\u0002\u0002\u051d\u00b7",
    "\u0003\u0002\u0002\u0002\u051e\u051c\u0003\u0002\u0002\u0002\u051f\u0524",
    "\u0005\u0018\r\u0002\u0520\u0521\u0007\u0013\u0002\u0002\u0521\u0523",
    "\u0005\u0018\r\u0002\u0522\u0520\u0003\u0002\u0002\u0002\u0523\u0526",
    "\u0003\u0002\u0002\u0002\u0524\u0522\u0003\u0002\u0002\u0002\u0524\u0525",
    "\u0003\u0002\u0002\u0002\u0525\u00b9\u0003\u0002\u0002\u0002\u0526\u0524",
    "\u0003\u0002\u0002\u0002\u0527\u052b\u0005\u0018\r\u0002\u0528\u052a",
    "\u00056\u001c\u0002\u0529\u0528\u0003\u0002\u0002\u0002\u052a\u052d",
    "\u0003\u0002\u0002\u0002\u052b\u0529\u0003\u0002\u0002\u0002\u052b\u052c",
    "\u0003\u0002\u0002\u0002\u052c\u00bb\u0003\u0002\u0002\u0002\u052d\u052b",
    "\u0003\u0002\u0002\u0002\u052e\u0537\u0007\u000f\u0002\u0002\u052f\u0534",
    "\u0005\u00be`\u0002\u0530\u0531\u0007K\u0002\u0002\u0531\u0533\u0005",
    "\u00be`\u0002\u0532\u0530\u0003\u0002\u0002\u0002\u0533\u0536\u0003",
    "\u0002\u0002\u0002\u0534\u0532\u0003\u0002\u0002\u0002\u0534\u0535\u0003",
    "\u0002\u0002\u0002\u0535\u0538\u0003\u0002\u0002\u0002\u0536\u0534\u0003",
    "\u0002\u0002\u0002\u0537\u052f\u0003\u0002\u0002\u0002\u0537\u0538\u0003",
    "\u0002\u0002\u0002\u0538\u0539\u0003\u0002\u0002\u0002\u0539\u053a\u0007",
    "\u0010\u0002\u0002\u053a\u053b\u0007\u0013\u0002\u0002\u053b\u00bd\u0003",
    "\u0002\u0002\u0002\u053c\u053e\u0005|?\u0002\u053d\u053c\u0003\u0002",
    "\u0002\u0002\u053e\u0541\u0003\u0002\u0002\u0002\u053f\u053d\u0003\u0002",
    "\u0002\u0002\u053f\u0540\u0003\u0002\u0002\u0002\u0540\u0545\u0003\u0002",
    "\u0002\u0002\u0541\u053f\u0003\u0002\u0002\u0002\u0542\u0544\u0005t",
    ";\u0002\u0543\u0542\u0003\u0002\u0002\u0002\u0544\u0547\u0003\u0002",
    "\u0002\u0002\u0545\u0543\u0003\u0002\u0002\u0002\u0545\u0546\u0003\u0002",
    "\u0002\u0002\u0546\u0548\u0003\u0002\u0002\u0002\u0547\u0545\u0003\u0002",
    "\u0002\u0002\u0548\u0549\u0005\u009aN\u0002\u0549\u00bf\u0003\u0002",
    "\u0002\u0002\u054a\u054d\u0005\u00c4c\u0002\u054b\u054d\u0005\u00c2",
    "b\u0002\u054c\u054a\u0003\u0002\u0002\u0002\u054c\u054b\u0003\u0002",
    "\u0002\u0002\u054d\u00c1\u0003\u0002\u0002\u0002\u054e\u054f\u0007\u000f",
    "\u0002\u0002\u054f\u0554\u0005\u00c4c\u0002\u0550\u0551\u0007L\u0002",
    "\u0002\u0551\u0553\u0005<\u001f\u0002\u0552\u0550\u0003\u0002\u0002",
    "\u0002\u0553\u0556\u0003\u0002\u0002\u0002\u0554\u0552\u0003\u0002\u0002",
    "\u0002\u0554\u0555\u0003\u0002\u0002\u0002\u0555\u0557\u0003\u0002\u0002",
    "\u0002\u0556\u0554\u0003\u0002\u0002\u0002\u0557\u0558\u0007\u0010\u0002",
    "\u0002\u0558\u00c3\u0003\u0002\u0002\u0002\u0559\u055b\u0007\u0007\u0002",
    "\u0002\u055a\u055c\u00056\u001c\u0002\u055b\u055a\u0003\u0002\u0002",
    "\u0002\u055c\u055d\u0003\u0002\u0002\u0002\u055d\u055b\u0003\u0002\u0002",
    "\u0002\u055d\u055e\u0003\u0002\u0002\u0002\u055e\u00c5\u0003\u0002\u0002",
    "\u0002\u055f\u0564\u0005\u00c8e\u0002\u0560\u0561\u0007K\u0002\u0002",
    "\u0561\u0563\u0005\u00c8e\u0002\u0562\u0560\u0003\u0002\u0002\u0002",
    "\u0563\u0566\u0003\u0002\u0002\u0002\u0564\u0562\u0003\u0002\u0002\u0002",
    "\u0564\u0565\u0003\u0002\u0002\u0002\u0565\u00c7\u0003\u0002\u0002\u0002",
    "\u0566\u0564\u0003\u0002\u0002\u0002\u0567\u0569\u0005|?\u0002\u0568",
    "\u0567\u0003\u0002\u0002\u0002\u0569\u056c\u0003\u0002\u0002\u0002\u056a",
    "\u0568\u0003\u0002\u0002\u0002\u056a\u056b\u0003\u0002\u0002\u0002\u056b",
    "\u0570\u0003\u0002\u0002\u0002\u056c\u056a\u0003\u0002\u0002\u0002\u056d",
    "\u056f\u0005t;\u0002\u056e\u056d\u0003\u0002\u0002\u0002\u056f\u0572",
    "\u0003\u0002\u0002\u0002\u0570\u056e\u0003\u0002\u0002\u0002\u0570\u0571",
    "\u0003\u0002\u0002\u0002\u0571\u0573\u0003\u0002\u0002\u0002\u0572\u0570",
    "\u0003\u0002\u0002\u0002\u0573\u0579\u0005\u00a6T\u0002\u0574\u0579",
    "\u0005\u0086D\u0002\u0575\u0579\u0005\u00caf\u0002\u0576\u0579\u0005",
    "\u00ccg\u0002\u0577\u0579\u0003\u0002\u0002\u0002\u0578\u056a\u0003",
    "\u0002\u0002\u0002\u0578\u0574\u0003\u0002\u0002\u0002\u0578\u0575\u0003",
    "\u0002\u0002\u0002\u0578\u0576\u0003\u0002\u0002\u0002\u0578\u0577\u0003",
    "\u0002\u0002\u0002\u0579\u00c9\u0003\u0002\u0002\u0002\u057a\u057b\u0007",
    "?\u0002\u0002\u057b\u057c\u0005\u0004\u0003\u0002\u057c\u057d\u0007",
    "\u000f\u0002\u0002\u057d\u057e\u0005\u00c6d\u0002\u057e\u057f\u0007",
    "\u0010\u0002\u0002\u057f\u00cb\u0003\u0002\u0002\u0002\u0580\u0581\u0007",
    "?\u0002\u0002\u0581\u0582\u0007<\u0002\u0002\u0582\u0583\u0005\u00ac",
    "W\u0002\u0583\u00cd\u0003\u0002\u0002\u0002\u0584\u0585\u0007?\u0002",
    "\u0002\u0585\u0587\u0005\u0004\u0003\u0002\u0586\u0588\u0007K\u0002",
    "\u0002\u0587\u0586\u0003\u0002\u0002\u0002\u0587\u0588\u0003\u0002\u0002",
    "\u0002\u0588\u058a\u0003\u0002\u0002\u0002\u0589\u0584\u0003\u0002\u0002",
    "\u0002\u058a\u058d\u0003\u0002\u0002\u0002\u058b\u0589\u0003\u0002\u0002",
    "\u0002\u058b\u058c\u0003\u0002\u0002\u0002\u058c\u058e\u0003\u0002\u0002",
    "\u0002\u058d\u058b\u0003\u0002\u0002\u0002\u058e\u058f\u0005\u00c6d",
    "\u0002\u058f\u00cf\u0003\u0002\u0002\u0002\u00c3\u00d1\u00d5\u00dd\u00e4",
    "\u00ec\u00f2\u00f5\u00fb\u00ff\u0103\u010f\u0111\u011a\u011d\u0120\u0129",
    "\u0132\u0139\u0141\u0145\u0148\u014e\u0156\u0159\u0161\u0168\u016a\u0176",
    "\u017f\u0188\u0192\u0197\u019b\u019f\u01a4\u01ac\u01b0\u01be\u01c5\u01c9",
    "\u01ce\u01de\u01e1\u01e9\u01ee\u01f3\u01f5\u020c\u0210\u021a\u021e\u0223",
    "\u0228\u022a\u0231\u0237\u023d\u0240\u0248\u024b\u024f\u0255\u025d\u0262",
    "\u0269\u0272\u027c\u0283\u0287\u028d\u0291\u0297\u029d\u02a3\u02a8\u02ac",
    "\u02b0\u02b5\u02bc\u02c3\u02cb\u02cd\u02d3\u02d8\u02e5\u02ef\u02f4\u02f7",
    "\u02ff\u0302\u030a\u030d\u0312\u0315\u0319\u0321\u0324\u032b\u0331\u0333",
    "\u033b\u0346\u034c\u034f\u0355\u0359\u035d\u0363\u036a\u0370\u0378\u037c",
    "\u0385\u038b\u0391\u0395\u039d\u03a2\u03aa\u03ae\u03b7\u03bd\u03c3\u03c7",
    "\u03ce\u03d6\u03de\u03e3\u03e9\u03f4\u03fc\u0400\u0407\u0410\u0416\u041d",
    "\u0423\u0429\u042e\u0436\u043e\u0446\u044e\u0453\u045c\u0466\u0473\u0477",
    "\u047d\u0481\u0485\u048b\u0493\u049a\u04a1\u04ae\u04b3\u04c3\u04c5\u04c9",
    "\u04cf\u04d4\u04da\u04de\u04e3\u04e7\u04ee\u04f8\u04fb\u04fd\u0502\u0505",
    "\u0507\u050a\u050e\u0511\u0515\u051c\u0524\u052b\u0534\u0537\u053f\u0545",
    "\u054c\u0554\u055d\u0564\u056a\u0570\u0578\u0587\u058b"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, "'-'", "'null'", "'.'", "','", "'this'", "'super'", 
                     "'['", "']'", "'=>'", "'('", "')'", "'forSome'", "'{'", 
                     "'}'", "'type'", "'val'", "'with'", "'#'", "':'", "'_'", 
                     "'*'", "'implicit'", "'if'", "'else'", "'while'", "'try'", 
                     "'catch'", "'finally'", "'do'", "'for'", "'yield'", 
                     "'throw'", "'return'", "'new'", "'='", "'match'", "'+'", 
                     "'~'", "'!'", "'lazy'", "'<-'", "'case'", "'|'", "'@'", 
                     "'>:'", "'<:'", "'<%'", "'var'", "'override'", "'abstract'", 
                     "'final'", "'sealed'", "'private'", "'protected'", 
                     "'import'", "'def'", "'class'", "'object'", "'trait'", 
                     "'extends'", "'package'", null, null, null, null, null, 
                     null, null, null, null, null, null, null, "';'", null, 
                     "'\n'" ];

var symbolicNames = [ null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, "Id", 
                      "BooleanLiteral", "CharacterLiteral", "SymbolLiteral", 
                      "IntegerLiteral", "StringLiteral", "FloatingPointLiteral", 
                      "Varid", "Paren", "Delim", "NEWLINE", "Sep", "Semi", 
                      "WS", "NL", "COMMENT", "LINE_COMMENT" ];

var ruleNames =  [ "literal", "qualId", "ids", "stableId", "classQualifier", 
                   "type", "functionArgTypes", "existentialClause", "existentialDcl", 
                   "infixType", "compoundType", "annotType", "simpleType", 
                   "typeArgs", "types", "refinement", "refineStat", "typePat", 
                   "ascription", "expr", "expr1", "postfixExpr", "infixExpr", 
                   "prefixExpr", "simpleExpr1", "exprs", "argumentExprs", 
                   "blockExpr", "block", "blockStat", "resultExpr", "enumerators", 
                   "generator", "caseClauses", "caseClause", "guard", "pattern", 
                   "pattern1", "pattern2", "pattern3", "simplePattern", 
                   "patterns", "typeParamClause", "funTypeParamClause", 
                   "variantTypeParam", "typeParam", "paramClauses", "paramClause", 
                   "params", "param", "paramType", "classParamClauses", 
                   "classParamClause", "classParams", "classParam", "bindings", 
                   "binding", "modifier", "localModifier", "accessModifier", 
                   "accessQualifier", "annotation", "constrAnnotation", 
                   "templateBody", "templateStat", "selfType", "import_", 
                   "importExpr", "importSelectors", "importSelector", "dcl", 
                   "valDcl", "varDcl", "funDcl", "funSig", "typeDcl", "patVarDef", 
                   "def", "patDef", "varDef", "funDef", "typeDef", "tmplDef", 
                   "classDef", "traitDef", "objectDef", "classTemplateOpt", 
                   "traitTemplateOpt", "classTemplate", "traitTemplate", 
                   "classParents", "traitParents", "constr", "earlyDefs", 
                   "earlyDef", "constrExpr", "constrBlock", "selfInvocation", 
                   "topStatSeq", "topStat", "packaging", "packageObject", 
                   "compilationUnit" ];

function ScalaParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

ScalaParser.prototype = Object.create(antlr4.Parser.prototype);
ScalaParser.prototype.constructor = ScalaParser;

Object.defineProperty(ScalaParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

ScalaParser.EOF = antlr4.Token.EOF;
ScalaParser.T__0 = 1;
ScalaParser.T__1 = 2;
ScalaParser.T__2 = 3;
ScalaParser.T__3 = 4;
ScalaParser.T__4 = 5;
ScalaParser.T__5 = 6;
ScalaParser.T__6 = 7;
ScalaParser.T__7 = 8;
ScalaParser.T__8 = 9;
ScalaParser.T__9 = 10;
ScalaParser.T__10 = 11;
ScalaParser.T__11 = 12;
ScalaParser.T__12 = 13;
ScalaParser.T__13 = 14;
ScalaParser.T__14 = 15;
ScalaParser.T__15 = 16;
ScalaParser.T__16 = 17;
ScalaParser.T__17 = 18;
ScalaParser.T__18 = 19;
ScalaParser.T__19 = 20;
ScalaParser.T__20 = 21;
ScalaParser.T__21 = 22;
ScalaParser.T__22 = 23;
ScalaParser.T__23 = 24;
ScalaParser.T__24 = 25;
ScalaParser.T__25 = 26;
ScalaParser.T__26 = 27;
ScalaParser.T__27 = 28;
ScalaParser.T__28 = 29;
ScalaParser.T__29 = 30;
ScalaParser.T__30 = 31;
ScalaParser.T__31 = 32;
ScalaParser.T__32 = 33;
ScalaParser.T__33 = 34;
ScalaParser.T__34 = 35;
ScalaParser.T__35 = 36;
ScalaParser.T__36 = 37;
ScalaParser.T__37 = 38;
ScalaParser.T__38 = 39;
ScalaParser.T__39 = 40;
ScalaParser.T__40 = 41;
ScalaParser.T__41 = 42;
ScalaParser.T__42 = 43;
ScalaParser.T__43 = 44;
ScalaParser.T__44 = 45;
ScalaParser.T__45 = 46;
ScalaParser.T__46 = 47;
ScalaParser.T__47 = 48;
ScalaParser.T__48 = 49;
ScalaParser.T__49 = 50;
ScalaParser.T__50 = 51;
ScalaParser.T__51 = 52;
ScalaParser.T__52 = 53;
ScalaParser.T__53 = 54;
ScalaParser.T__54 = 55;
ScalaParser.T__55 = 56;
ScalaParser.T__56 = 57;
ScalaParser.T__57 = 58;
ScalaParser.T__58 = 59;
ScalaParser.T__59 = 60;
ScalaParser.T__60 = 61;
ScalaParser.Id = 62;
ScalaParser.BooleanLiteral = 63;
ScalaParser.CharacterLiteral = 64;
ScalaParser.SymbolLiteral = 65;
ScalaParser.IntegerLiteral = 66;
ScalaParser.StringLiteral = 67;
ScalaParser.FloatingPointLiteral = 68;
ScalaParser.Varid = 69;
ScalaParser.Paren = 70;
ScalaParser.Delim = 71;
ScalaParser.NEWLINE = 72;
ScalaParser.Sep = 73;
ScalaParser.Semi = 74;
ScalaParser.WS = 75;
ScalaParser.NL = 76;
ScalaParser.COMMENT = 77;
ScalaParser.LINE_COMMENT = 78;

ScalaParser.RULE_literal = 0;
ScalaParser.RULE_qualId = 1;
ScalaParser.RULE_ids = 2;
ScalaParser.RULE_stableId = 3;
ScalaParser.RULE_classQualifier = 4;
ScalaParser.RULE_type = 5;
ScalaParser.RULE_functionArgTypes = 6;
ScalaParser.RULE_existentialClause = 7;
ScalaParser.RULE_existentialDcl = 8;
ScalaParser.RULE_infixType = 9;
ScalaParser.RULE_compoundType = 10;
ScalaParser.RULE_annotType = 11;
ScalaParser.RULE_simpleType = 12;
ScalaParser.RULE_typeArgs = 13;
ScalaParser.RULE_types = 14;
ScalaParser.RULE_refinement = 15;
ScalaParser.RULE_refineStat = 16;
ScalaParser.RULE_typePat = 17;
ScalaParser.RULE_ascription = 18;
ScalaParser.RULE_expr = 19;
ScalaParser.RULE_expr1 = 20;
ScalaParser.RULE_postfixExpr = 21;
ScalaParser.RULE_infixExpr = 22;
ScalaParser.RULE_prefixExpr = 23;
ScalaParser.RULE_simpleExpr1 = 24;
ScalaParser.RULE_exprs = 25;
ScalaParser.RULE_argumentExprs = 26;
ScalaParser.RULE_blockExpr = 27;
ScalaParser.RULE_block = 28;
ScalaParser.RULE_blockStat = 29;
ScalaParser.RULE_resultExpr = 30;
ScalaParser.RULE_enumerators = 31;
ScalaParser.RULE_generator = 32;
ScalaParser.RULE_caseClauses = 33;
ScalaParser.RULE_caseClause = 34;
ScalaParser.RULE_guard = 35;
ScalaParser.RULE_pattern = 36;
ScalaParser.RULE_pattern1 = 37;
ScalaParser.RULE_pattern2 = 38;
ScalaParser.RULE_pattern3 = 39;
ScalaParser.RULE_simplePattern = 40;
ScalaParser.RULE_patterns = 41;
ScalaParser.RULE_typeParamClause = 42;
ScalaParser.RULE_funTypeParamClause = 43;
ScalaParser.RULE_variantTypeParam = 44;
ScalaParser.RULE_typeParam = 45;
ScalaParser.RULE_paramClauses = 46;
ScalaParser.RULE_paramClause = 47;
ScalaParser.RULE_params = 48;
ScalaParser.RULE_param = 49;
ScalaParser.RULE_paramType = 50;
ScalaParser.RULE_classParamClauses = 51;
ScalaParser.RULE_classParamClause = 52;
ScalaParser.RULE_classParams = 53;
ScalaParser.RULE_classParam = 54;
ScalaParser.RULE_bindings = 55;
ScalaParser.RULE_binding = 56;
ScalaParser.RULE_modifier = 57;
ScalaParser.RULE_localModifier = 58;
ScalaParser.RULE_accessModifier = 59;
ScalaParser.RULE_accessQualifier = 60;
ScalaParser.RULE_annotation = 61;
ScalaParser.RULE_constrAnnotation = 62;
ScalaParser.RULE_templateBody = 63;
ScalaParser.RULE_templateStat = 64;
ScalaParser.RULE_selfType = 65;
ScalaParser.RULE_import_ = 66;
ScalaParser.RULE_importExpr = 67;
ScalaParser.RULE_importSelectors = 68;
ScalaParser.RULE_importSelector = 69;
ScalaParser.RULE_dcl = 70;
ScalaParser.RULE_valDcl = 71;
ScalaParser.RULE_varDcl = 72;
ScalaParser.RULE_funDcl = 73;
ScalaParser.RULE_funSig = 74;
ScalaParser.RULE_typeDcl = 75;
ScalaParser.RULE_patVarDef = 76;
ScalaParser.RULE_def = 77;
ScalaParser.RULE_patDef = 78;
ScalaParser.RULE_varDef = 79;
ScalaParser.RULE_funDef = 80;
ScalaParser.RULE_typeDef = 81;
ScalaParser.RULE_tmplDef = 82;
ScalaParser.RULE_classDef = 83;
ScalaParser.RULE_traitDef = 84;
ScalaParser.RULE_objectDef = 85;
ScalaParser.RULE_classTemplateOpt = 86;
ScalaParser.RULE_traitTemplateOpt = 87;
ScalaParser.RULE_classTemplate = 88;
ScalaParser.RULE_traitTemplate = 89;
ScalaParser.RULE_classParents = 90;
ScalaParser.RULE_traitParents = 91;
ScalaParser.RULE_constr = 92;
ScalaParser.RULE_earlyDefs = 93;
ScalaParser.RULE_earlyDef = 94;
ScalaParser.RULE_constrExpr = 95;
ScalaParser.RULE_constrBlock = 96;
ScalaParser.RULE_selfInvocation = 97;
ScalaParser.RULE_topStatSeq = 98;
ScalaParser.RULE_topStat = 99;
ScalaParser.RULE_packaging = 100;
ScalaParser.RULE_packageObject = 101;
ScalaParser.RULE_compilationUnit = 102;


function LiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_literal;
    return this;
}

LiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LiteralContext.prototype.constructor = LiteralContext;

LiteralContext.prototype.IntegerLiteral = function() {
    return this.getToken(ScalaParser.IntegerLiteral, 0);
};

LiteralContext.prototype.FloatingPointLiteral = function() {
    return this.getToken(ScalaParser.FloatingPointLiteral, 0);
};

LiteralContext.prototype.BooleanLiteral = function() {
    return this.getToken(ScalaParser.BooleanLiteral, 0);
};

LiteralContext.prototype.CharacterLiteral = function() {
    return this.getToken(ScalaParser.CharacterLiteral, 0);
};

LiteralContext.prototype.StringLiteral = function() {
    return this.getToken(ScalaParser.StringLiteral, 0);
};

LiteralContext.prototype.SymbolLiteral = function() {
    return this.getToken(ScalaParser.SymbolLiteral, 0);
};

LiteralContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterLiteral(this);
	}
};

LiteralContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitLiteral(this);
	}
};




ScalaParser.LiteralContext = LiteralContext;

ScalaParser.prototype.literal = function() {

    var localctx = new LiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, ScalaParser.RULE_literal);
    var _la = 0; // Token type
    try {
        this.state = 219;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 207;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__0) {
                this.state = 206;
                this.match(ScalaParser.T__0);
            }

            this.state = 209;
            this.match(ScalaParser.IntegerLiteral);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 211;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__0) {
                this.state = 210;
                this.match(ScalaParser.T__0);
            }

            this.state = 213;
            this.match(ScalaParser.FloatingPointLiteral);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 214;
            this.match(ScalaParser.BooleanLiteral);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 215;
            this.match(ScalaParser.CharacterLiteral);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 216;
            this.match(ScalaParser.StringLiteral);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 217;
            this.match(ScalaParser.SymbolLiteral);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 218;
            this.match(ScalaParser.T__1);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function QualIdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_qualId;
    return this;
}

QualIdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QualIdContext.prototype.constructor = QualIdContext;

QualIdContext.prototype.Id = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Id);
    } else {
        return this.getToken(ScalaParser.Id, i);
    }
};


QualIdContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterQualId(this);
	}
};

QualIdContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitQualId(this);
	}
};




ScalaParser.QualIdContext = QualIdContext;

ScalaParser.prototype.qualId = function() {

    var localctx = new QualIdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, ScalaParser.RULE_qualId);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 221;
        this.match(ScalaParser.Id);
        this.state = 226;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__2) {
            this.state = 222;
            this.match(ScalaParser.T__2);
            this.state = 223;
            this.match(ScalaParser.Id);
            this.state = 228;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function IdsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_ids;
    return this;
}

IdsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdsContext.prototype.constructor = IdsContext;

IdsContext.prototype.Id = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Id);
    } else {
        return this.getToken(ScalaParser.Id, i);
    }
};


IdsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterIds(this);
	}
};

IdsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitIds(this);
	}
};




ScalaParser.IdsContext = IdsContext;

ScalaParser.prototype.ids = function() {

    var localctx = new IdsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, ScalaParser.RULE_ids);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 229;
        this.match(ScalaParser.Id);
        this.state = 234;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 230;
            this.match(ScalaParser.T__3);
            this.state = 231;
            this.match(ScalaParser.Id);
            this.state = 236;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function StableIdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_stableId;
    return this;
}

StableIdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StableIdContext.prototype.constructor = StableIdContext;

StableIdContext.prototype.Id = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Id);
    } else {
        return this.getToken(ScalaParser.Id, i);
    }
};


StableIdContext.prototype.classQualifier = function() {
    return this.getTypedRuleContext(ClassQualifierContext,0);
};

StableIdContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterStableId(this);
	}
};

StableIdContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitStableId(this);
	}
};




ScalaParser.StableIdContext = StableIdContext;

ScalaParser.prototype.stableId = function() {

    var localctx = new StableIdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, ScalaParser.RULE_stableId);
    var _la = 0; // Token type
    try {
        this.state = 257;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,9,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 243;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,6,this._ctx);
            switch(la_) {
            case 1:
                this.state = 237;
                this.match(ScalaParser.Id);
                break;

            case 2:
                this.state = 240;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.Id) {
                    this.state = 238;
                    this.match(ScalaParser.Id);
                    this.state = 239;
                    this.match(ScalaParser.T__2);
                }

                this.state = 242;
                this.match(ScalaParser.T__4);
                break;

            }
            this.state = 245;
            this.match(ScalaParser.T__2);
            this.state = 246;
            this.match(ScalaParser.Id);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 249;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.Id) {
                this.state = 247;
                this.match(ScalaParser.Id);
                this.state = 248;
                this.match(ScalaParser.T__2);
            }

            this.state = 251;
            this.match(ScalaParser.T__5);
            this.state = 253;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__6) {
                this.state = 252;
                this.classQualifier();
            }

            this.state = 255;
            this.match(ScalaParser.T__2);
            this.state = 256;
            this.match(ScalaParser.Id);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassQualifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classQualifier;
    return this;
}

ClassQualifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassQualifierContext.prototype.constructor = ClassQualifierContext;

ClassQualifierContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ClassQualifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassQualifier(this);
	}
};

ClassQualifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassQualifier(this);
	}
};




ScalaParser.ClassQualifierContext = ClassQualifierContext;

ScalaParser.prototype.classQualifier = function() {

    var localctx = new ClassQualifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, ScalaParser.RULE_classQualifier);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 259;
        this.match(ScalaParser.T__6);
        this.state = 260;
        this.match(ScalaParser.Id);
        this.state = 261;
        this.match(ScalaParser.T__7);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_type;
    return this;
}

TypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeContext.prototype.constructor = TypeContext;

TypeContext.prototype.functionArgTypes = function() {
    return this.getTypedRuleContext(FunctionArgTypesContext,0);
};

TypeContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

TypeContext.prototype.infixType = function() {
    return this.getTypedRuleContext(InfixTypeContext,0);
};

TypeContext.prototype.existentialClause = function() {
    return this.getTypedRuleContext(ExistentialClauseContext,0);
};

TypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterType(this);
	}
};

TypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitType(this);
	}
};




ScalaParser.TypeContext = TypeContext;

ScalaParser.prototype.type = function() {

    var localctx = new TypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, ScalaParser.RULE_type);
    var _la = 0; // Token type
    try {
        this.state = 271;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,11,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 263;
            this.functionArgTypes();
            this.state = 264;
            this.match(ScalaParser.T__8);
            this.state = 265;
            this.type();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 267;
            this.infixType();
            this.state = 269;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__11) {
                this.state = 268;
                this.existentialClause();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function FunctionArgTypesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_functionArgTypes;
    return this;
}

FunctionArgTypesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunctionArgTypesContext.prototype.constructor = FunctionArgTypesContext;

FunctionArgTypesContext.prototype.infixType = function() {
    return this.getTypedRuleContext(InfixTypeContext,0);
};

FunctionArgTypesContext.prototype.paramType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ParamTypeContext);
    } else {
        return this.getTypedRuleContext(ParamTypeContext,i);
    }
};

FunctionArgTypesContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterFunctionArgTypes(this);
	}
};

FunctionArgTypesContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitFunctionArgTypes(this);
	}
};




ScalaParser.FunctionArgTypesContext = FunctionArgTypesContext;

ScalaParser.prototype.functionArgTypes = function() {

    var localctx = new FunctionArgTypesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, ScalaParser.RULE_functionArgTypes);
    var _la = 0; // Token type
    try {
        this.state = 286;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,14,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 273;
            this.infixType();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 274;
            this.match(ScalaParser.T__9);
            this.state = 283;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__8) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__12))) !== 0) || _la===ScalaParser.Id) {
                this.state = 275;
                this.paramType();
                this.state = 280;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while(_la===ScalaParser.T__3) {
                    this.state = 276;
                    this.match(ScalaParser.T__3);
                    this.state = 277;
                    this.paramType();
                    this.state = 282;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
            }

            this.state = 285;
            this.match(ScalaParser.T__10);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ExistentialClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_existentialClause;
    return this;
}

ExistentialClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExistentialClauseContext.prototype.constructor = ExistentialClauseContext;

ExistentialClauseContext.prototype.existentialDcl = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExistentialDclContext);
    } else {
        return this.getTypedRuleContext(ExistentialDclContext,i);
    }
};

ExistentialClauseContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


ExistentialClauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterExistentialClause(this);
	}
};

ExistentialClauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitExistentialClause(this);
	}
};




ScalaParser.ExistentialClauseContext = ExistentialClauseContext;

ScalaParser.prototype.existentialClause = function() {

    var localctx = new ExistentialClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, ScalaParser.RULE_existentialClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 288;
        this.match(ScalaParser.T__11);
        this.state = 289;
        this.match(ScalaParser.T__12);
        this.state = 290;
        this.existentialDcl();
        this.state = 295;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Sep) {
            this.state = 291;
            this.match(ScalaParser.Sep);
            this.state = 292;
            this.existentialDcl();
            this.state = 297;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 298;
        this.match(ScalaParser.T__13);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ExistentialDclContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_existentialDcl;
    return this;
}

ExistentialDclContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExistentialDclContext.prototype.constructor = ExistentialDclContext;

ExistentialDclContext.prototype.typeDcl = function() {
    return this.getTypedRuleContext(TypeDclContext,0);
};

ExistentialDclContext.prototype.valDcl = function() {
    return this.getTypedRuleContext(ValDclContext,0);
};

ExistentialDclContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterExistentialDcl(this);
	}
};

ExistentialDclContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitExistentialDcl(this);
	}
};




ScalaParser.ExistentialDclContext = ExistentialDclContext;

ScalaParser.prototype.existentialDcl = function() {

    var localctx = new ExistentialDclContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, ScalaParser.RULE_existentialDcl);
    try {
        this.state = 304;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__14:
            this.enterOuterAlt(localctx, 1);
            this.state = 300;
            this.match(ScalaParser.T__14);
            this.state = 301;
            this.typeDcl();
            break;
        case ScalaParser.T__15:
            this.enterOuterAlt(localctx, 2);
            this.state = 302;
            this.match(ScalaParser.T__15);
            this.state = 303;
            this.valDcl();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function InfixTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_infixType;
    return this;
}

InfixTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InfixTypeContext.prototype.constructor = InfixTypeContext;

InfixTypeContext.prototype.compoundType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(CompoundTypeContext);
    } else {
        return this.getTypedRuleContext(CompoundTypeContext,i);
    }
};

InfixTypeContext.prototype.Id = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Id);
    } else {
        return this.getToken(ScalaParser.Id, i);
    }
};


InfixTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterInfixType(this);
	}
};

InfixTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitInfixType(this);
	}
};




ScalaParser.InfixTypeContext = InfixTypeContext;

ScalaParser.prototype.infixType = function() {

    var localctx = new InfixTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, ScalaParser.RULE_infixType);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 306;
        this.compoundType();
        this.state = 311;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,17,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 307;
                this.match(ScalaParser.Id);
                this.state = 308;
                this.compoundType(); 
            }
            this.state = 313;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,17,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CompoundTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_compoundType;
    return this;
}

CompoundTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CompoundTypeContext.prototype.constructor = CompoundTypeContext;

CompoundTypeContext.prototype.annotType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotTypeContext);
    } else {
        return this.getTypedRuleContext(AnnotTypeContext,i);
    }
};

CompoundTypeContext.prototype.refinement = function() {
    return this.getTypedRuleContext(RefinementContext,0);
};

CompoundTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterCompoundType(this);
	}
};

CompoundTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitCompoundType(this);
	}
};




ScalaParser.CompoundTypeContext = CompoundTypeContext;

ScalaParser.prototype.compoundType = function() {

    var localctx = new CompoundTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, ScalaParser.RULE_compoundType);
    var _la = 0; // Token type
    try {
        this.state = 326;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__4:
        case ScalaParser.T__5:
        case ScalaParser.T__9:
        case ScalaParser.Id:
            this.enterOuterAlt(localctx, 1);
            this.state = 314;
            this.annotType();
            this.state = 319;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__16) {
                this.state = 315;
                this.match(ScalaParser.T__16);
                this.state = 316;
                this.annotType();
                this.state = 321;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 323;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,19,this._ctx);
            if(la_===1) {
                this.state = 322;
                this.refinement();

            }
            break;
        case ScalaParser.T__12:
            this.enterOuterAlt(localctx, 2);
            this.state = 325;
            this.refinement();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function AnnotTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_annotType;
    return this;
}

AnnotTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotTypeContext.prototype.constructor = AnnotTypeContext;

AnnotTypeContext.prototype.simpleType = function() {
    return this.getTypedRuleContext(SimpleTypeContext,0);
};

AnnotTypeContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

AnnotTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterAnnotType(this);
	}
};

AnnotTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitAnnotType(this);
	}
};




ScalaParser.AnnotTypeContext = AnnotTypeContext;

ScalaParser.prototype.annotType = function() {

    var localctx = new AnnotTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, ScalaParser.RULE_annotType);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 328;
        this.simpleType(0);
        this.state = 332;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,21,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 329;
                this.annotation(); 
            }
            this.state = 334;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,21,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function SimpleTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_simpleType;
    return this;
}

SimpleTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimpleTypeContext.prototype.constructor = SimpleTypeContext;

SimpleTypeContext.prototype.stableId = function() {
    return this.getTypedRuleContext(StableIdContext,0);
};

SimpleTypeContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

SimpleTypeContext.prototype.types = function() {
    return this.getTypedRuleContext(TypesContext,0);
};

SimpleTypeContext.prototype.simpleType = function() {
    return this.getTypedRuleContext(SimpleTypeContext,0);
};

SimpleTypeContext.prototype.typeArgs = function() {
    return this.getTypedRuleContext(TypeArgsContext,0);
};

SimpleTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterSimpleType(this);
	}
};

SimpleTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitSimpleType(this);
	}
};



ScalaParser.prototype.simpleType = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new SimpleTypeContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 24;
    this.enterRecursionRule(localctx, 24, ScalaParser.RULE_simpleType, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 351;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,24,this._ctx);
        switch(la_) {
        case 1:
            this.state = 336;
            this.stableId();
            break;

        case 2:
            this.state = 343;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,23,this._ctx);
            switch(la_) {
            case 1:
                this.state = 337;
                this.stableId();
                break;

            case 2:
                this.state = 340;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.Id) {
                    this.state = 338;
                    this.match(ScalaParser.Id);
                    this.state = 339;
                    this.match(ScalaParser.T__2);
                }

                this.state = 342;
                this.match(ScalaParser.T__4);
                break;

            }
            this.state = 345;
            this.match(ScalaParser.T__2);
            this.state = 346;
            this.match(ScalaParser.T__14);
            break;

        case 3:
            this.state = 347;
            this.match(ScalaParser.T__9);
            this.state = 348;
            this.types();
            this.state = 349;
            this.match(ScalaParser.T__10);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 360;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,26,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 358;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,25,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new SimpleTypeContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, ScalaParser.RULE_simpleType);
                    this.state = 353;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 354;
                    this.typeArgs();
                    break;

                case 2:
                    localctx = new SimpleTypeContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, ScalaParser.RULE_simpleType);
                    this.state = 355;
                    if (!( this.precpred(this._ctx, 4))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                    }
                    this.state = 356;
                    this.match(ScalaParser.T__17);
                    this.state = 357;
                    this.match(ScalaParser.Id);
                    break;

                } 
            }
            this.state = 362;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,26,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};


function TypeArgsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_typeArgs;
    return this;
}

TypeArgsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeArgsContext.prototype.constructor = TypeArgsContext;

TypeArgsContext.prototype.types = function() {
    return this.getTypedRuleContext(TypesContext,0);
};

TypeArgsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypeArgs(this);
	}
};

TypeArgsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypeArgs(this);
	}
};




ScalaParser.TypeArgsContext = TypeArgsContext;

ScalaParser.prototype.typeArgs = function() {

    var localctx = new TypeArgsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, ScalaParser.RULE_typeArgs);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 363;
        this.match(ScalaParser.T__6);
        this.state = 364;
        this.types();
        this.state = 365;
        this.match(ScalaParser.T__7);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_types;
    return this;
}

TypesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypesContext.prototype.constructor = TypesContext;

TypesContext.prototype.type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeContext);
    } else {
        return this.getTypedRuleContext(TypeContext,i);
    }
};

TypesContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypes(this);
	}
};

TypesContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypes(this);
	}
};




ScalaParser.TypesContext = TypesContext;

ScalaParser.prototype.types = function() {

    var localctx = new TypesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, ScalaParser.RULE_types);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 367;
        this.type();
        this.state = 372;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 368;
            this.match(ScalaParser.T__3);
            this.state = 369;
            this.type();
            this.state = 374;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function RefinementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_refinement;
    return this;
}

RefinementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RefinementContext.prototype.constructor = RefinementContext;

RefinementContext.prototype.refineStat = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(RefineStatContext);
    } else {
        return this.getTypedRuleContext(RefineStatContext,i);
    }
};

RefinementContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


RefinementContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterRefinement(this);
	}
};

RefinementContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitRefinement(this);
	}
};




ScalaParser.RefinementContext = RefinementContext;

ScalaParser.prototype.refinement = function() {

    var localctx = new RefinementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, ScalaParser.RULE_refinement);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 375;
        this.match(ScalaParser.T__12);
        this.state = 376;
        this.refineStat();
        this.state = 381;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Sep) {
            this.state = 377;
            this.match(ScalaParser.Sep);
            this.state = 378;
            this.refineStat();
            this.state = 383;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 384;
        this.match(ScalaParser.T__13);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function RefineStatContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_refineStat;
    return this;
}

RefineStatContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RefineStatContext.prototype.constructor = RefineStatContext;

RefineStatContext.prototype.dcl = function() {
    return this.getTypedRuleContext(DclContext,0);
};

RefineStatContext.prototype.typeDef = function() {
    return this.getTypedRuleContext(TypeDefContext,0);
};

RefineStatContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterRefineStat(this);
	}
};

RefineStatContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitRefineStat(this);
	}
};




ScalaParser.RefineStatContext = RefineStatContext;

ScalaParser.prototype.refineStat = function() {

    var localctx = new RefineStatContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, ScalaParser.RULE_refineStat);
    try {
        this.state = 390;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,29,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 386;
            this.dcl();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 387;
            this.match(ScalaParser.T__14);
            this.state = 388;
            this.typeDef();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypePatContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_typePat;
    return this;
}

TypePatContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypePatContext.prototype.constructor = TypePatContext;

TypePatContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

TypePatContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypePat(this);
	}
};

TypePatContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypePat(this);
	}
};




ScalaParser.TypePatContext = TypePatContext;

ScalaParser.prototype.typePat = function() {

    var localctx = new TypePatContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, ScalaParser.RULE_typePat);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 392;
        this.type();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function AscriptionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_ascription;
    return this;
}

AscriptionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AscriptionContext.prototype.constructor = AscriptionContext;

AscriptionContext.prototype.infixType = function() {
    return this.getTypedRuleContext(InfixTypeContext,0);
};

AscriptionContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

AscriptionContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterAscription(this);
	}
};

AscriptionContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitAscription(this);
	}
};




ScalaParser.AscriptionContext = AscriptionContext;

ScalaParser.prototype.ascription = function() {

    var localctx = new AscriptionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, ScalaParser.RULE_ascription);
    var _la = 0; // Token type
    try {
        this.state = 405;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,31,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 394;
            this.match(ScalaParser.T__18);
            this.state = 395;
            this.infixType();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 396;
            this.match(ScalaParser.T__18);
            this.state = 398; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 397;
                this.annotation();
                this.state = 400; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===ScalaParser.T__43);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 402;
            this.match(ScalaParser.T__18);
            this.state = 403;
            this.match(ScalaParser.T__19);
            this.state = 404;
            this.match(ScalaParser.T__20);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_expr;
    return this;
}

ExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExprContext.prototype.constructor = ExprContext;

ExprContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

ExprContext.prototype.bindings = function() {
    return this.getTypedRuleContext(BindingsContext,0);
};

ExprContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ExprContext.prototype.expr1 = function() {
    return this.getTypedRuleContext(Expr1Context,0);
};

ExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterExpr(this);
	}
};

ExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitExpr(this);
	}
};




ScalaParser.ExprContext = ExprContext;

ScalaParser.prototype.expr = function() {

    var localctx = new ExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, ScalaParser.RULE_expr);
    var _la = 0; // Token type
    try {
        this.state = 418;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,34,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 413;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case ScalaParser.T__9:
                this.state = 407;
                this.bindings();
                break;
            case ScalaParser.T__21:
            case ScalaParser.Id:
                this.state = 409;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.T__21) {
                    this.state = 408;
                    this.match(ScalaParser.T__21);
                }

                this.state = 411;
                this.match(ScalaParser.Id);
                break;
            case ScalaParser.T__19:
                this.state = 412;
                this.match(ScalaParser.T__19);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 415;
            this.match(ScalaParser.T__8);
            this.state = 416;
            this.expr();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 417;
            this.expr1();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Expr1Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_expr1;
    return this;
}

Expr1Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Expr1Context.prototype.constructor = Expr1Context;

Expr1Context.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

Expr1Context.prototype.Semi = function() {
    return this.getToken(ScalaParser.Semi, 0);
};

Expr1Context.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

Expr1Context.prototype.caseClauses = function() {
    return this.getTypedRuleContext(CaseClausesContext,0);
};

Expr1Context.prototype.enumerators = function() {
    return this.getTypedRuleContext(EnumeratorsContext,0);
};

Expr1Context.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

Expr1Context.prototype.blockExpr = function() {
    return this.getTypedRuleContext(BlockExprContext,0);
};

Expr1Context.prototype.simpleExpr1 = function() {
    return this.getTypedRuleContext(SimpleExpr1Context,0);
};

Expr1Context.prototype.classTemplate = function() {
    return this.getTypedRuleContext(ClassTemplateContext,0);
};

Expr1Context.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

Expr1Context.prototype.argumentExprs = function() {
    return this.getTypedRuleContext(ArgumentExprsContext,0);
};

Expr1Context.prototype.postfixExpr = function() {
    return this.getTypedRuleContext(PostfixExprContext,0);
};

Expr1Context.prototype.ascription = function() {
    return this.getTypedRuleContext(AscriptionContext,0);
};

Expr1Context.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterExpr1(this);
	}
};

Expr1Context.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitExpr1(this);
	}
};




ScalaParser.Expr1Context = Expr1Context;

ScalaParser.prototype.expr1 = function() {

    var localctx = new Expr1Context(this, this._ctx, this.state);
    this.enterRule(localctx, 40, ScalaParser.RULE_expr1);
    var _la = 0; // Token type
    try {
        this.state = 522;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,47,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 420;
            this.match(ScalaParser.T__22);
            this.state = 421;
            this.match(ScalaParser.T__9);
            this.state = 422;
            this.expr();
            this.state = 423;
            this.match(ScalaParser.T__10);
            this.state = 424;
            this.expr();
            this.state = 430;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,36,this._ctx);
            if(la_===1) {
                this.state = 426;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.Semi) {
                    this.state = 425;
                    this.match(ScalaParser.Semi);
                }

                this.state = 428;
                this.match(ScalaParser.T__23);
                this.state = 429;
                this.expr();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 432;
            this.match(ScalaParser.T__24);
            this.state = 433;
            this.match(ScalaParser.T__9);
            this.state = 434;
            this.expr();
            this.state = 435;
            this.match(ScalaParser.T__10);
            this.state = 436;
            this.expr();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 438;
            this.match(ScalaParser.T__25);
            this.state = 444;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,37,this._ctx);
            switch(la_) {
            case 1:
                this.state = 439;
                this.match(ScalaParser.T__12);
                this.state = 440;
                this.block();
                this.state = 441;
                this.match(ScalaParser.T__13);
                break;

            case 2:
                this.state = 443;
                this.expr();
                break;

            }
            this.state = 451;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,38,this._ctx);
            if(la_===1) {
                this.state = 446;
                this.match(ScalaParser.T__26);
                this.state = 447;
                this.match(ScalaParser.T__12);
                this.state = 448;
                this.caseClauses();
                this.state = 449;
                this.match(ScalaParser.T__13);

            }
            this.state = 455;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,39,this._ctx);
            if(la_===1) {
                this.state = 453;
                this.match(ScalaParser.T__27);
                this.state = 454;
                this.expr();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 457;
            this.match(ScalaParser.T__28);
            this.state = 458;
            this.expr();
            this.state = 460;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.Semi) {
                this.state = 459;
                this.match(ScalaParser.Semi);
            }

            this.state = 462;
            this.match(ScalaParser.T__24);
            this.state = 463;
            this.match(ScalaParser.T__9);
            this.state = 464;
            this.expr();
            this.state = 465;
            this.match(ScalaParser.T__10);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 467;
            this.match(ScalaParser.T__29);
            this.state = 476;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case ScalaParser.T__9:
                this.state = 468;
                this.match(ScalaParser.T__9);
                this.state = 469;
                this.enumerators();
                this.state = 470;
                this.match(ScalaParser.T__10);
                break;
            case ScalaParser.T__12:
                this.state = 472;
                this.match(ScalaParser.T__12);
                this.state = 473;
                this.enumerators();
                this.state = 474;
                this.match(ScalaParser.T__13);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 479;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__30) {
                this.state = 478;
                this.match(ScalaParser.T__30);
            }

            this.state = 481;
            this.expr();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 483;
            this.match(ScalaParser.T__31);
            this.state = 484;
            this.expr();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 485;
            this.match(ScalaParser.T__32);
            this.state = 487;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,43,this._ctx);
            if(la_===1) {
                this.state = 486;
                this.expr();

            }
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 499;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,46,this._ctx);
            switch(la_) {
            case 1:
                this.state = 489;
                this.match(ScalaParser.T__33);
                this.state = 492;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,44,this._ctx);
                switch(la_) {
                case 1:
                    this.state = 490;
                    this.classTemplate();
                    break;

                case 2:
                    this.state = 491;
                    this.templateBody();
                    break;

                }
                break;

            case 2:
                this.state = 494;
                this.blockExpr();
                break;

            case 3:
                this.state = 495;
                this.simpleExpr1(0);
                this.state = 497;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.T__19) {
                    this.state = 496;
                    this.match(ScalaParser.T__19);
                }

                break;

            }
            this.state = 501;
            this.match(ScalaParser.T__2);
            this.state = 503;
            this.match(ScalaParser.Id);
            this.state = 504;
            this.match(ScalaParser.T__34);
            this.state = 505;
            this.expr();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 507;
            this.simpleExpr1(0);
            this.state = 508;
            this.argumentExprs();
            this.state = 509;
            this.match(ScalaParser.T__34);
            this.state = 510;
            this.expr();
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 512;
            this.postfixExpr();
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 513;
            this.postfixExpr();
            this.state = 514;
            this.ascription();
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 516;
            this.postfixExpr();
            this.state = 517;
            this.match(ScalaParser.T__35);
            this.state = 518;
            this.match(ScalaParser.T__12);
            this.state = 519;
            this.caseClauses();
            this.state = 520;
            this.match(ScalaParser.T__13);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PostfixExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_postfixExpr;
    return this;
}

PostfixExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PostfixExprContext.prototype.constructor = PostfixExprContext;

PostfixExprContext.prototype.infixExpr = function() {
    return this.getTypedRuleContext(InfixExprContext,0);
};

PostfixExprContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

PostfixExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPostfixExpr(this);
	}
};

PostfixExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPostfixExpr(this);
	}
};




ScalaParser.PostfixExprContext = PostfixExprContext;

ScalaParser.prototype.postfixExpr = function() {

    var localctx = new PostfixExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, ScalaParser.RULE_postfixExpr);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 524;
        this.infixExpr(0);
        this.state = 526;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,48,this._ctx);
        if(la_===1) {
            this.state = 525;
            this.match(ScalaParser.Id);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function InfixExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_infixExpr;
    return this;
}

InfixExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InfixExprContext.prototype.constructor = InfixExprContext;

InfixExprContext.prototype.prefixExpr = function() {
    return this.getTypedRuleContext(PrefixExprContext,0);
};

InfixExprContext.prototype.infixExpr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(InfixExprContext);
    } else {
        return this.getTypedRuleContext(InfixExprContext,i);
    }
};

InfixExprContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

InfixExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterInfixExpr(this);
	}
};

InfixExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitInfixExpr(this);
	}
};



ScalaParser.prototype.infixExpr = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new InfixExprContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 44;
    this.enterRecursionRule(localctx, 44, ScalaParser.RULE_infixExpr, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 529;
        this.prefixExpr();
        this._ctx.stop = this._input.LT(-1);
        this.state = 536;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,49,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new InfixExprContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, ScalaParser.RULE_infixExpr);
                this.state = 531;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 532;
                this.match(ScalaParser.Id);
                this.state = 533;
                this.infixExpr(2); 
            }
            this.state = 538;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,49,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};


function PrefixExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_prefixExpr;
    return this;
}

PrefixExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PrefixExprContext.prototype.constructor = PrefixExprContext;

PrefixExprContext.prototype.blockExpr = function() {
    return this.getTypedRuleContext(BlockExprContext,0);
};

PrefixExprContext.prototype.simpleExpr1 = function() {
    return this.getTypedRuleContext(SimpleExpr1Context,0);
};

PrefixExprContext.prototype.classTemplate = function() {
    return this.getTypedRuleContext(ClassTemplateContext,0);
};

PrefixExprContext.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

PrefixExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPrefixExpr(this);
	}
};

PrefixExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPrefixExpr(this);
	}
};




ScalaParser.PrefixExprContext = PrefixExprContext;

ScalaParser.prototype.prefixExpr = function() {

    var localctx = new PrefixExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, ScalaParser.RULE_prefixExpr);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 540;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,50,this._ctx);
        if(la_===1) {
            this.state = 539;
            _la = this._input.LA(1);
            if(!(_la===ScalaParser.T__0 || ((((_la - 37)) & ~0x1f) == 0 && ((1 << (_la - 37)) & ((1 << (ScalaParser.T__36 - 37)) | (1 << (ScalaParser.T__37 - 37)) | (1 << (ScalaParser.T__38 - 37)))) !== 0))) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }

        }
        this.state = 552;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,53,this._ctx);
        switch(la_) {
        case 1:
            this.state = 542;
            this.match(ScalaParser.T__33);
            this.state = 545;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,51,this._ctx);
            switch(la_) {
            case 1:
                this.state = 543;
                this.classTemplate();
                break;

            case 2:
                this.state = 544;
                this.templateBody();
                break;

            }
            break;

        case 2:
            this.state = 547;
            this.blockExpr();
            break;

        case 3:
            this.state = 548;
            this.simpleExpr1(0);
            this.state = 550;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,52,this._ctx);
            if(la_===1) {
                this.state = 549;
                this.match(ScalaParser.T__19);

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function SimpleExpr1Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_simpleExpr1;
    return this;
}

SimpleExpr1Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimpleExpr1Context.prototype.constructor = SimpleExpr1Context;

SimpleExpr1Context.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

SimpleExpr1Context.prototype.stableId = function() {
    return this.getTypedRuleContext(StableIdContext,0);
};

SimpleExpr1Context.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

SimpleExpr1Context.prototype.exprs = function() {
    return this.getTypedRuleContext(ExprsContext,0);
};

SimpleExpr1Context.prototype.blockExpr = function() {
    return this.getTypedRuleContext(BlockExprContext,0);
};

SimpleExpr1Context.prototype.classTemplate = function() {
    return this.getTypedRuleContext(ClassTemplateContext,0);
};

SimpleExpr1Context.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

SimpleExpr1Context.prototype.typeArgs = function() {
    return this.getTypedRuleContext(TypeArgsContext,0);
};

SimpleExpr1Context.prototype.simpleExpr1 = function() {
    return this.getTypedRuleContext(SimpleExpr1Context,0);
};

SimpleExpr1Context.prototype.argumentExprs = function() {
    return this.getTypedRuleContext(ArgumentExprsContext,0);
};

SimpleExpr1Context.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterSimpleExpr1(this);
	}
};

SimpleExpr1Context.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitSimpleExpr1(this);
	}
};



ScalaParser.prototype.simpleExpr1 = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new SimpleExpr1Context(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 48;
    this.enterRecursionRule(localctx, 48, ScalaParser.RULE_simpleExpr1, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 589;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,60,this._ctx);
        switch(la_) {
        case 1:
            this.state = 555;
            this.literal();
            break;

        case 2:
            this.state = 556;
            this.stableId();
            break;

        case 3:
            this.state = 559;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.Id) {
                this.state = 557;
                this.match(ScalaParser.Id);
                this.state = 558;
                this.match(ScalaParser.T__2);
            }

            this.state = 561;
            this.match(ScalaParser.T__4);
            break;

        case 4:
            this.state = 562;
            this.match(ScalaParser.T__19);
            break;

        case 5:
            this.state = 563;
            this.match(ScalaParser.T__9);
            this.state = 565;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__0) | (1 << ScalaParser.T__1) | (1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__12) | (1 << ScalaParser.T__19) | (1 << ScalaParser.T__21) | (1 << ScalaParser.T__22) | (1 << ScalaParser.T__24) | (1 << ScalaParser.T__25) | (1 << ScalaParser.T__28) | (1 << ScalaParser.T__29))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ScalaParser.T__31 - 32)) | (1 << (ScalaParser.T__32 - 32)) | (1 << (ScalaParser.T__33 - 32)) | (1 << (ScalaParser.T__36 - 32)) | (1 << (ScalaParser.T__37 - 32)) | (1 << (ScalaParser.T__38 - 32)) | (1 << (ScalaParser.Id - 32)) | (1 << (ScalaParser.BooleanLiteral - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (ScalaParser.CharacterLiteral - 64)) | (1 << (ScalaParser.SymbolLiteral - 64)) | (1 << (ScalaParser.IntegerLiteral - 64)) | (1 << (ScalaParser.StringLiteral - 64)) | (1 << (ScalaParser.FloatingPointLiteral - 64)))) !== 0)) {
                this.state = 564;
                this.exprs();
            }

            this.state = 567;
            this.match(ScalaParser.T__10);
            break;

        case 6:
            this.state = 574;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case ScalaParser.T__33:
                this.state = 568;
                this.match(ScalaParser.T__33);
                this.state = 571;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,56,this._ctx);
                switch(la_) {
                case 1:
                    this.state = 569;
                    this.classTemplate();
                    break;

                case 2:
                    this.state = 570;
                    this.templateBody();
                    break;

                }
                break;
            case ScalaParser.T__12:
                this.state = 573;
                this.blockExpr();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 576;
            this.match(ScalaParser.T__2);
            this.state = 577;
            this.match(ScalaParser.Id);
            break;

        case 7:
            this.state = 585;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case ScalaParser.T__33:
                this.state = 579;
                this.match(ScalaParser.T__33);
                this.state = 582;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,58,this._ctx);
                switch(la_) {
                case 1:
                    this.state = 580;
                    this.classTemplate();
                    break;

                case 2:
                    this.state = 581;
                    this.templateBody();
                    break;

                }
                break;
            case ScalaParser.T__12:
                this.state = 584;
                this.blockExpr();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 587;
            this.typeArgs();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 595;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,61,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new SimpleExpr1Context(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, ScalaParser.RULE_simpleExpr1);
                this.state = 591;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 592;
                this.argumentExprs(); 
            }
            this.state = 597;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,61,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};


function ExprsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_exprs;
    return this;
}

ExprsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExprsContext.prototype.constructor = ExprsContext;

ExprsContext.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

ExprsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterExprs(this);
	}
};

ExprsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitExprs(this);
	}
};




ScalaParser.ExprsContext = ExprsContext;

ScalaParser.prototype.exprs = function() {

    var localctx = new ExprsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, ScalaParser.RULE_exprs);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 598;
        this.expr();
        this.state = 603;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,62,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 599;
                this.match(ScalaParser.T__3);
                this.state = 600;
                this.expr(); 
            }
            this.state = 605;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,62,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ArgumentExprsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_argumentExprs;
    return this;
}

ArgumentExprsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgumentExprsContext.prototype.constructor = ArgumentExprsContext;

ArgumentExprsContext.prototype.exprs = function() {
    return this.getTypedRuleContext(ExprsContext,0);
};

ArgumentExprsContext.prototype.postfixExpr = function() {
    return this.getTypedRuleContext(PostfixExprContext,0);
};

ArgumentExprsContext.prototype.blockExpr = function() {
    return this.getTypedRuleContext(BlockExprContext,0);
};

ArgumentExprsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterArgumentExprs(this);
	}
};

ArgumentExprsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitArgumentExprs(this);
	}
};




ScalaParser.ArgumentExprsContext = ArgumentExprsContext;

ScalaParser.prototype.argumentExprs = function() {

    var localctx = new ArgumentExprsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, ScalaParser.RULE_argumentExprs);
    var _la = 0; // Token type
    try {
        this.state = 624;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,65,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 606;
            this.match(ScalaParser.T__9);
            this.state = 608;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__0) | (1 << ScalaParser.T__1) | (1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__12) | (1 << ScalaParser.T__19) | (1 << ScalaParser.T__21) | (1 << ScalaParser.T__22) | (1 << ScalaParser.T__24) | (1 << ScalaParser.T__25) | (1 << ScalaParser.T__28) | (1 << ScalaParser.T__29))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ScalaParser.T__31 - 32)) | (1 << (ScalaParser.T__32 - 32)) | (1 << (ScalaParser.T__33 - 32)) | (1 << (ScalaParser.T__36 - 32)) | (1 << (ScalaParser.T__37 - 32)) | (1 << (ScalaParser.T__38 - 32)) | (1 << (ScalaParser.Id - 32)) | (1 << (ScalaParser.BooleanLiteral - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (ScalaParser.CharacterLiteral - 64)) | (1 << (ScalaParser.SymbolLiteral - 64)) | (1 << (ScalaParser.IntegerLiteral - 64)) | (1 << (ScalaParser.StringLiteral - 64)) | (1 << (ScalaParser.FloatingPointLiteral - 64)))) !== 0)) {
                this.state = 607;
                this.exprs();
            }

            this.state = 610;
            this.match(ScalaParser.T__10);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 611;
            this.match(ScalaParser.T__9);
            this.state = 615;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,64,this._ctx);
            if(la_===1) {
                this.state = 612;
                this.exprs();
                this.state = 613;
                this.match(ScalaParser.T__3);

            }
            this.state = 617;
            this.postfixExpr();
            this.state = 618;
            this.match(ScalaParser.T__18);
            this.state = 619;
            this.match(ScalaParser.T__19);
            this.state = 620;
            this.match(ScalaParser.T__20);
            this.state = 621;
            this.match(ScalaParser.T__10);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 623;
            this.blockExpr();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function BlockExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_blockExpr;
    return this;
}

BlockExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockExprContext.prototype.constructor = BlockExprContext;

BlockExprContext.prototype.caseClauses = function() {
    return this.getTypedRuleContext(CaseClausesContext,0);
};

BlockExprContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

BlockExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterBlockExpr(this);
	}
};

BlockExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitBlockExpr(this);
	}
};




ScalaParser.BlockExprContext = BlockExprContext;

ScalaParser.prototype.blockExpr = function() {

    var localctx = new BlockExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, ScalaParser.RULE_blockExpr);
    try {
        this.state = 634;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,66,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 626;
            this.match(ScalaParser.T__12);
            this.state = 627;
            this.caseClauses();
            this.state = 628;
            this.match(ScalaParser.T__13);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 630;
            this.match(ScalaParser.T__12);
            this.state = 631;
            this.block();
            this.state = 632;
            this.match(ScalaParser.T__13);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function BlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_block;
    return this;
}

BlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockContext.prototype.constructor = BlockContext;

BlockContext.prototype.blockStat = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockStatContext);
    } else {
        return this.getTypedRuleContext(BlockStatContext,i);
    }
};

BlockContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


BlockContext.prototype.resultExpr = function() {
    return this.getTypedRuleContext(ResultExprContext,0);
};

BlockContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterBlock(this);
	}
};

BlockContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitBlock(this);
	}
};




ScalaParser.BlockContext = BlockContext;

ScalaParser.prototype.block = function() {

    var localctx = new BlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, ScalaParser.RULE_block);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 636;
        this.blockStat();
        this.state = 641;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Sep) {
            this.state = 637;
            this.match(ScalaParser.Sep);
            this.state = 638;
            this.blockStat();
            this.state = 643;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 645;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__0) | (1 << ScalaParser.T__1) | (1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__12) | (1 << ScalaParser.T__19) | (1 << ScalaParser.T__21) | (1 << ScalaParser.T__22) | (1 << ScalaParser.T__24) | (1 << ScalaParser.T__25) | (1 << ScalaParser.T__28) | (1 << ScalaParser.T__29))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ScalaParser.T__31 - 32)) | (1 << (ScalaParser.T__32 - 32)) | (1 << (ScalaParser.T__33 - 32)) | (1 << (ScalaParser.T__36 - 32)) | (1 << (ScalaParser.T__37 - 32)) | (1 << (ScalaParser.T__38 - 32)) | (1 << (ScalaParser.Id - 32)) | (1 << (ScalaParser.BooleanLiteral - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (ScalaParser.CharacterLiteral - 64)) | (1 << (ScalaParser.SymbolLiteral - 64)) | (1 << (ScalaParser.IntegerLiteral - 64)) | (1 << (ScalaParser.StringLiteral - 64)) | (1 << (ScalaParser.FloatingPointLiteral - 64)))) !== 0)) {
            this.state = 644;
            this.resultExpr();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function BlockStatContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_blockStat;
    return this;
}

BlockStatContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockStatContext.prototype.constructor = BlockStatContext;

BlockStatContext.prototype.import_ = function() {
    return this.getTypedRuleContext(Import_Context,0);
};

BlockStatContext.prototype.def = function() {
    return this.getTypedRuleContext(DefContext,0);
};

BlockStatContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

BlockStatContext.prototype.tmplDef = function() {
    return this.getTypedRuleContext(TmplDefContext,0);
};

BlockStatContext.prototype.localModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(LocalModifierContext);
    } else {
        return this.getTypedRuleContext(LocalModifierContext,i);
    }
};

BlockStatContext.prototype.expr1 = function() {
    return this.getTypedRuleContext(Expr1Context,0);
};

BlockStatContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterBlockStat(this);
	}
};

BlockStatContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitBlockStat(this);
	}
};




ScalaParser.BlockStatContext = BlockStatContext;

ScalaParser.prototype.blockStat = function() {

    var localctx = new BlockStatContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, ScalaParser.RULE_blockStat);
    var _la = 0; // Token type
    try {
        this.state = 673;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,73,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 647;
            this.import_();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 651;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__43) {
                this.state = 648;
                this.annotation();
                this.state = 653;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 655;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__21 || _la===ScalaParser.T__39) {
                this.state = 654;
                _la = this._input.LA(1);
                if(!(_la===ScalaParser.T__21 || _la===ScalaParser.T__39)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                }
            }

            this.state = 657;
            this.def();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 661;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__43) {
                this.state = 658;
                this.annotation();
                this.state = 663;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 667;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(((((_la - 22)) & ~0x1f) == 0 && ((1 << (_la - 22)) & ((1 << (ScalaParser.T__21 - 22)) | (1 << (ScalaParser.T__39 - 22)) | (1 << (ScalaParser.T__49 - 22)) | (1 << (ScalaParser.T__50 - 22)) | (1 << (ScalaParser.T__51 - 22)))) !== 0)) {
                this.state = 664;
                this.localModifier();
                this.state = 669;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 670;
            this.tmplDef();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 671;
            this.expr1();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ResultExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_resultExpr;
    return this;
}

ResultExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ResultExprContext.prototype.constructor = ResultExprContext;

ResultExprContext.prototype.expr1 = function() {
    return this.getTypedRuleContext(Expr1Context,0);
};

ResultExprContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

ResultExprContext.prototype.bindings = function() {
    return this.getTypedRuleContext(BindingsContext,0);
};

ResultExprContext.prototype.compoundType = function() {
    return this.getTypedRuleContext(CompoundTypeContext,0);
};

ResultExprContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ResultExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterResultExpr(this);
	}
};

ResultExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitResultExpr(this);
	}
};




ScalaParser.ResultExprContext = ResultExprContext;

ScalaParser.prototype.resultExpr = function() {

    var localctx = new ResultExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, ScalaParser.RULE_resultExpr);
    var _la = 0; // Token type
    try {
        this.state = 691;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,77,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 675;
            this.expr1();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 686;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case ScalaParser.T__9:
                this.state = 676;
                this.bindings();
                break;
            case ScalaParser.T__19:
            case ScalaParser.T__21:
            case ScalaParser.Id:
                this.state = 682;
                this._errHandler.sync(this);
                switch(this._input.LA(1)) {
                case ScalaParser.T__21:
                case ScalaParser.Id:
                    this.state = 678;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===ScalaParser.T__21) {
                        this.state = 677;
                        this.match(ScalaParser.T__21);
                    }

                    this.state = 680;
                    this.match(ScalaParser.Id);
                    break;
                case ScalaParser.T__19:
                    this.state = 681;
                    this.match(ScalaParser.T__19);
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 684;
                this.match(ScalaParser.T__18);
                this.state = 685;
                this.compoundType();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 688;
            this.match(ScalaParser.T__8);
            this.state = 689;
            this.block();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function EnumeratorsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_enumerators;
    return this;
}

EnumeratorsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumeratorsContext.prototype.constructor = EnumeratorsContext;

EnumeratorsContext.prototype.generator = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(GeneratorContext);
    } else {
        return this.getTypedRuleContext(GeneratorContext,i);
    }
};

EnumeratorsContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


EnumeratorsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterEnumerators(this);
	}
};

EnumeratorsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitEnumerators(this);
	}
};




ScalaParser.EnumeratorsContext = EnumeratorsContext;

ScalaParser.prototype.enumerators = function() {

    var localctx = new EnumeratorsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, ScalaParser.RULE_enumerators);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 693;
        this.generator();
        this.state = 698;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Sep) {
            this.state = 694;
            this.match(ScalaParser.Sep);
            this.state = 695;
            this.generator();
            this.state = 700;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function GeneratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_generator;
    return this;
}

GeneratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GeneratorContext.prototype.constructor = GeneratorContext;

GeneratorContext.prototype.pattern1 = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern1Context);
    } else {
        return this.getTypedRuleContext(Pattern1Context,i);
    }
};

GeneratorContext.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

GeneratorContext.prototype.guard = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(GuardContext);
    } else {
        return this.getTypedRuleContext(GuardContext,i);
    }
};

GeneratorContext.prototype.Semi = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Semi);
    } else {
        return this.getToken(ScalaParser.Semi, i);
    }
};


GeneratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterGenerator(this);
	}
};

GeneratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitGenerator(this);
	}
};




ScalaParser.GeneratorContext = GeneratorContext;

ScalaParser.prototype.generator = function() {

    var localctx = new GeneratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, ScalaParser.RULE_generator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 701;
        this.pattern1();
        this.state = 702;
        this.match(ScalaParser.T__40);
        this.state = 703;
        this.expr();
        this.state = 715;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__22 || _la===ScalaParser.Semi) {
            this.state = 713;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,80,this._ctx);
            switch(la_) {
            case 1:
                this.state = 705;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.Semi) {
                    this.state = 704;
                    this.match(ScalaParser.Semi);
                }

                this.state = 707;
                this.guard();
                break;

            case 2:
                this.state = 708;
                this.match(ScalaParser.Semi);
                this.state = 709;
                this.pattern1();
                this.state = 710;
                this.match(ScalaParser.T__34);
                this.state = 711;
                this.expr();
                break;

            }
            this.state = 717;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CaseClausesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_caseClauses;
    return this;
}

CaseClausesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CaseClausesContext.prototype.constructor = CaseClausesContext;

CaseClausesContext.prototype.caseClause = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(CaseClauseContext);
    } else {
        return this.getTypedRuleContext(CaseClauseContext,i);
    }
};

CaseClausesContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterCaseClauses(this);
	}
};

CaseClausesContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitCaseClauses(this);
	}
};




ScalaParser.CaseClausesContext = CaseClausesContext;

ScalaParser.prototype.caseClauses = function() {

    var localctx = new CaseClausesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, ScalaParser.RULE_caseClauses);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 719; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 718;
            this.caseClause();
            this.state = 721; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===ScalaParser.T__41);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CaseClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_caseClause;
    return this;
}

CaseClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CaseClauseContext.prototype.constructor = CaseClauseContext;

CaseClauseContext.prototype.pattern = function() {
    return this.getTypedRuleContext(PatternContext,0);
};

CaseClauseContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

CaseClauseContext.prototype.guard = function() {
    return this.getTypedRuleContext(GuardContext,0);
};

CaseClauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterCaseClause(this);
	}
};

CaseClauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitCaseClause(this);
	}
};




ScalaParser.CaseClauseContext = CaseClauseContext;

ScalaParser.prototype.caseClause = function() {

    var localctx = new CaseClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, ScalaParser.RULE_caseClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 723;
        this.match(ScalaParser.T__41);
        this.state = 724;
        this.pattern();
        this.state = 726;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__22) {
            this.state = 725;
            this.guard();
        }

        this.state = 728;
        this.match(ScalaParser.T__8);
        this.state = 729;
        this.block();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function GuardContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_guard;
    return this;
}

GuardContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GuardContext.prototype.constructor = GuardContext;

GuardContext.prototype.postfixExpr = function() {
    return this.getTypedRuleContext(PostfixExprContext,0);
};

GuardContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterGuard(this);
	}
};

GuardContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitGuard(this);
	}
};




ScalaParser.GuardContext = GuardContext;

ScalaParser.prototype.guard = function() {

    var localctx = new GuardContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, ScalaParser.RULE_guard);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 731;
        this.match(ScalaParser.T__22);
        this.state = 732;
        this.postfixExpr();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PatternContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_pattern;
    return this;
}

PatternContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PatternContext.prototype.constructor = PatternContext;

PatternContext.prototype.pattern1 = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern1Context);
    } else {
        return this.getTypedRuleContext(Pattern1Context,i);
    }
};

PatternContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPattern(this);
	}
};

PatternContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPattern(this);
	}
};




ScalaParser.PatternContext = PatternContext;

ScalaParser.prototype.pattern = function() {

    var localctx = new PatternContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, ScalaParser.RULE_pattern);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 734;
        this.pattern1();
        this.state = 739;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__42) {
            this.state = 735;
            this.match(ScalaParser.T__42);
            this.state = 736;
            this.pattern1();
            this.state = 741;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Pattern1Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_pattern1;
    return this;
}

Pattern1Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern1Context.prototype.constructor = Pattern1Context;

Pattern1Context.prototype.Varid = function() {
    return this.getToken(ScalaParser.Varid, 0);
};

Pattern1Context.prototype.typePat = function() {
    return this.getTypedRuleContext(TypePatContext,0);
};

Pattern1Context.prototype.pattern2 = function() {
    return this.getTypedRuleContext(Pattern2Context,0);
};

Pattern1Context.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPattern1(this);
	}
};

Pattern1Context.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPattern1(this);
	}
};




ScalaParser.Pattern1Context = Pattern1Context;

ScalaParser.prototype.pattern1 = function() {

    var localctx = new Pattern1Context(this, this._ctx, this.state);
    this.enterRule(localctx, 74, ScalaParser.RULE_pattern1);
    try {
        this.state = 749;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,85,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 742;
            this.match(ScalaParser.Varid);
            this.state = 743;
            this.match(ScalaParser.T__18);
            this.state = 744;
            this.typePat();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 745;
            this.match(ScalaParser.T__19);
            this.state = 746;
            this.match(ScalaParser.T__18);
            this.state = 747;
            this.typePat();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 748;
            this.pattern2();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Pattern2Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_pattern2;
    return this;
}

Pattern2Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern2Context.prototype.constructor = Pattern2Context;

Pattern2Context.prototype.Varid = function() {
    return this.getToken(ScalaParser.Varid, 0);
};

Pattern2Context.prototype.pattern3 = function() {
    return this.getTypedRuleContext(Pattern3Context,0);
};

Pattern2Context.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPattern2(this);
	}
};

Pattern2Context.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPattern2(this);
	}
};




ScalaParser.Pattern2Context = Pattern2Context;

ScalaParser.prototype.pattern2 = function() {

    var localctx = new Pattern2Context(this, this._ctx, this.state);
    this.enterRule(localctx, 76, ScalaParser.RULE_pattern2);
    var _la = 0; // Token type
    try {
        this.state = 757;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,87,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 751;
            this.match(ScalaParser.Varid);
            this.state = 754;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__43) {
                this.state = 752;
                this.match(ScalaParser.T__43);
                this.state = 753;
                this.pattern3();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 756;
            this.pattern3();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Pattern3Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_pattern3;
    return this;
}

Pattern3Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern3Context.prototype.constructor = Pattern3Context;

Pattern3Context.prototype.simplePattern = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SimplePatternContext);
    } else {
        return this.getTypedRuleContext(SimplePatternContext,i);
    }
};

Pattern3Context.prototype.Id = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Id);
    } else {
        return this.getToken(ScalaParser.Id, i);
    }
};


Pattern3Context.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPattern3(this);
	}
};

Pattern3Context.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPattern3(this);
	}
};




ScalaParser.Pattern3Context = Pattern3Context;

ScalaParser.prototype.pattern3 = function() {

    var localctx = new Pattern3Context(this, this._ctx, this.state);
    this.enterRule(localctx, 78, ScalaParser.RULE_pattern3);
    var _la = 0; // Token type
    try {
        this.state = 768;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,89,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 759;
            this.simplePattern();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 760;
            this.simplePattern();
            this.state = 765;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.Id) {
                this.state = 761;
                this.match(ScalaParser.Id);
                this.state = 762;
                this.simplePattern();
                this.state = 767;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function SimplePatternContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_simplePattern;
    return this;
}

SimplePatternContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimplePatternContext.prototype.constructor = SimplePatternContext;

SimplePatternContext.prototype.Varid = function() {
    return this.getToken(ScalaParser.Varid, 0);
};

SimplePatternContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

SimplePatternContext.prototype.stableId = function() {
    return this.getTypedRuleContext(StableIdContext,0);
};

SimplePatternContext.prototype.patterns = function() {
    return this.getTypedRuleContext(PatternsContext,0);
};

SimplePatternContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterSimplePattern(this);
	}
};

SimplePatternContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitSimplePattern(this);
	}
};




ScalaParser.SimplePatternContext = SimplePatternContext;

ScalaParser.prototype.simplePattern = function() {

    var localctx = new SimplePatternContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, ScalaParser.RULE_simplePattern);
    var _la = 0; // Token type
    try {
        this.state = 802;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,96,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 770;
            this.match(ScalaParser.T__19);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 771;
            this.match(ScalaParser.Varid);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 772;
            this.literal();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 773;
            this.stableId();
            this.state = 779;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__9) {
                this.state = 774;
                this.match(ScalaParser.T__9);
                this.state = 776;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__0) | (1 << ScalaParser.T__1) | (1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__19))) !== 0) || ((((_la - 62)) & ~0x1f) == 0 && ((1 << (_la - 62)) & ((1 << (ScalaParser.Id - 62)) | (1 << (ScalaParser.BooleanLiteral - 62)) | (1 << (ScalaParser.CharacterLiteral - 62)) | (1 << (ScalaParser.SymbolLiteral - 62)) | (1 << (ScalaParser.IntegerLiteral - 62)) | (1 << (ScalaParser.StringLiteral - 62)) | (1 << (ScalaParser.FloatingPointLiteral - 62)) | (1 << (ScalaParser.Varid - 62)))) !== 0)) {
                    this.state = 775;
                    this.patterns();
                }

                this.state = 778;
                this.match(ScalaParser.T__10);
            }

            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 781;
            this.stableId();
            this.state = 782;
            this.match(ScalaParser.T__9);
            this.state = 787;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,93,this._ctx);
            if(la_===1) {
                this.state = 784;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__0) | (1 << ScalaParser.T__1) | (1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__19))) !== 0) || ((((_la - 62)) & ~0x1f) == 0 && ((1 << (_la - 62)) & ((1 << (ScalaParser.Id - 62)) | (1 << (ScalaParser.BooleanLiteral - 62)) | (1 << (ScalaParser.CharacterLiteral - 62)) | (1 << (ScalaParser.SymbolLiteral - 62)) | (1 << (ScalaParser.IntegerLiteral - 62)) | (1 << (ScalaParser.StringLiteral - 62)) | (1 << (ScalaParser.FloatingPointLiteral - 62)) | (1 << (ScalaParser.Varid - 62)))) !== 0)) {
                    this.state = 783;
                    this.patterns();
                }

                this.state = 786;
                this.match(ScalaParser.T__3);

            }
            this.state = 791;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.Varid) {
                this.state = 789;
                this.match(ScalaParser.Varid);
                this.state = 790;
                this.match(ScalaParser.T__43);
            }

            this.state = 793;
            this.match(ScalaParser.T__19);
            this.state = 794;
            this.match(ScalaParser.T__20);
            this.state = 795;
            this.match(ScalaParser.T__10);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 797;
            this.match(ScalaParser.T__9);
            this.state = 799;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ScalaParser.T__0) | (1 << ScalaParser.T__1) | (1 << ScalaParser.T__4) | (1 << ScalaParser.T__5) | (1 << ScalaParser.T__9) | (1 << ScalaParser.T__19))) !== 0) || ((((_la - 62)) & ~0x1f) == 0 && ((1 << (_la - 62)) & ((1 << (ScalaParser.Id - 62)) | (1 << (ScalaParser.BooleanLiteral - 62)) | (1 << (ScalaParser.CharacterLiteral - 62)) | (1 << (ScalaParser.SymbolLiteral - 62)) | (1 << (ScalaParser.IntegerLiteral - 62)) | (1 << (ScalaParser.StringLiteral - 62)) | (1 << (ScalaParser.FloatingPointLiteral - 62)) | (1 << (ScalaParser.Varid - 62)))) !== 0)) {
                this.state = 798;
                this.patterns();
            }

            this.state = 801;
            this.match(ScalaParser.T__10);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PatternsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_patterns;
    return this;
}

PatternsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PatternsContext.prototype.constructor = PatternsContext;

PatternsContext.prototype.pattern = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(PatternContext);
    } else {
        return this.getTypedRuleContext(PatternContext,i);
    }
};

PatternsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPatterns(this);
	}
};

PatternsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPatterns(this);
	}
};




ScalaParser.PatternsContext = PatternsContext;

ScalaParser.prototype.patterns = function() {

    var localctx = new PatternsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, ScalaParser.RULE_patterns);
    var _la = 0; // Token type
    try {
        this.state = 817;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,99,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 804;
            this.pattern();
            this.state = 809;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,97,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 805;
                    this.match(ScalaParser.T__3);
                    this.state = 806;
                    this.pattern(); 
                }
                this.state = 811;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,97,this._ctx);
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 813; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 812;
                this.match(ScalaParser.T__19);
                this.state = 815; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===ScalaParser.T__19);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypeParamClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_typeParamClause;
    return this;
}

TypeParamClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeParamClauseContext.prototype.constructor = TypeParamClauseContext;

TypeParamClauseContext.prototype.variantTypeParam = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariantTypeParamContext);
    } else {
        return this.getTypedRuleContext(VariantTypeParamContext,i);
    }
};

TypeParamClauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypeParamClause(this);
	}
};

TypeParamClauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypeParamClause(this);
	}
};




ScalaParser.TypeParamClauseContext = TypeParamClauseContext;

ScalaParser.prototype.typeParamClause = function() {

    var localctx = new TypeParamClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, ScalaParser.RULE_typeParamClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 819;
        this.match(ScalaParser.T__6);
        this.state = 820;
        this.variantTypeParam();
        this.state = 825;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 821;
            this.match(ScalaParser.T__3);
            this.state = 822;
            this.variantTypeParam();
            this.state = 827;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 828;
        this.match(ScalaParser.T__7);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function FunTypeParamClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_funTypeParamClause;
    return this;
}

FunTypeParamClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunTypeParamClauseContext.prototype.constructor = FunTypeParamClauseContext;

FunTypeParamClauseContext.prototype.typeParam = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeParamContext);
    } else {
        return this.getTypedRuleContext(TypeParamContext,i);
    }
};

FunTypeParamClauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterFunTypeParamClause(this);
	}
};

FunTypeParamClauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitFunTypeParamClause(this);
	}
};




ScalaParser.FunTypeParamClauseContext = FunTypeParamClauseContext;

ScalaParser.prototype.funTypeParamClause = function() {

    var localctx = new FunTypeParamClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 86, ScalaParser.RULE_funTypeParamClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 830;
        this.match(ScalaParser.T__6);
        this.state = 831;
        this.typeParam();
        this.state = 836;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 832;
            this.match(ScalaParser.T__3);
            this.state = 833;
            this.typeParam();
            this.state = 838;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 839;
        this.match(ScalaParser.T__7);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function VariantTypeParamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_variantTypeParam;
    return this;
}

VariantTypeParamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariantTypeParamContext.prototype.constructor = VariantTypeParamContext;

VariantTypeParamContext.prototype.typeParam = function() {
    return this.getTypedRuleContext(TypeParamContext,0);
};

VariantTypeParamContext.prototype.annotation = function() {
    return this.getTypedRuleContext(AnnotationContext,0);
};

VariantTypeParamContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterVariantTypeParam(this);
	}
};

VariantTypeParamContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitVariantTypeParam(this);
	}
};




ScalaParser.VariantTypeParamContext = VariantTypeParamContext;

ScalaParser.prototype.variantTypeParam = function() {

    var localctx = new VariantTypeParamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, ScalaParser.RULE_variantTypeParam);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 842;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__43) {
            this.state = 841;
            this.annotation();
        }

        this.state = 845;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__0 || _la===ScalaParser.T__36) {
            this.state = 844;
            _la = this._input.LA(1);
            if(!(_la===ScalaParser.T__0 || _la===ScalaParser.T__36)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
        }

        this.state = 847;
        this.typeParam();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypeParamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_typeParam;
    return this;
}

TypeParamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeParamContext.prototype.constructor = TypeParamContext;

TypeParamContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

TypeParamContext.prototype.typeParamClause = function() {
    return this.getTypedRuleContext(TypeParamClauseContext,0);
};

TypeParamContext.prototype.type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeContext);
    } else {
        return this.getTypedRuleContext(TypeContext,i);
    }
};

TypeParamContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypeParam(this);
	}
};

TypeParamContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypeParam(this);
	}
};




ScalaParser.TypeParamContext = TypeParamContext;

ScalaParser.prototype.typeParam = function() {

    var localctx = new TypeParamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, ScalaParser.RULE_typeParam);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 849;
        _la = this._input.LA(1);
        if(!(_la===ScalaParser.T__19 || _la===ScalaParser.Id)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
        this.state = 851;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 850;
            this.typeParamClause();
        }

        this.state = 855;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__44) {
            this.state = 853;
            this.match(ScalaParser.T__44);
            this.state = 854;
            this.type();
        }

        this.state = 859;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__45) {
            this.state = 857;
            this.match(ScalaParser.T__45);
            this.state = 858;
            this.type();
        }

        this.state = 865;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__46) {
            this.state = 861;
            this.match(ScalaParser.T__46);
            this.state = 862;
            this.type();
            this.state = 867;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 872;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__18) {
            this.state = 868;
            this.match(ScalaParser.T__18);
            this.state = 869;
            this.type();
            this.state = 874;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ParamClausesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_paramClauses;
    return this;
}

ParamClausesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParamClausesContext.prototype.constructor = ParamClausesContext;

ParamClausesContext.prototype.paramClause = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ParamClauseContext);
    } else {
        return this.getTypedRuleContext(ParamClauseContext,i);
    }
};

ParamClausesContext.prototype.params = function() {
    return this.getTypedRuleContext(ParamsContext,0);
};

ParamClausesContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterParamClauses(this);
	}
};

ParamClausesContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitParamClauses(this);
	}
};




ScalaParser.ParamClausesContext = ParamClausesContext;

ScalaParser.prototype.paramClauses = function() {

    var localctx = new ParamClausesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, ScalaParser.RULE_paramClauses);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 878;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,109,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 875;
                this.paramClause(); 
            }
            this.state = 880;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,109,this._ctx);
        }

        this.state = 886;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__9) {
            this.state = 881;
            this.match(ScalaParser.T__9);
            this.state = 882;
            this.match(ScalaParser.T__21);
            this.state = 883;
            this.params();
            this.state = 884;
            this.match(ScalaParser.T__10);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ParamClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_paramClause;
    return this;
}

ParamClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParamClauseContext.prototype.constructor = ParamClauseContext;

ParamClauseContext.prototype.params = function() {
    return this.getTypedRuleContext(ParamsContext,0);
};

ParamClauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterParamClause(this);
	}
};

ParamClauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitParamClause(this);
	}
};




ScalaParser.ParamClauseContext = ParamClauseContext;

ScalaParser.prototype.paramClause = function() {

    var localctx = new ParamClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, ScalaParser.RULE_paramClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 888;
        this.match(ScalaParser.T__9);
        this.state = 890;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__43 || _la===ScalaParser.Id) {
            this.state = 889;
            this.params();
        }

        this.state = 892;
        this.match(ScalaParser.T__10);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ParamsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_params;
    return this;
}

ParamsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParamsContext.prototype.constructor = ParamsContext;

ParamsContext.prototype.param = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ParamContext);
    } else {
        return this.getTypedRuleContext(ParamContext,i);
    }
};

ParamsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterParams(this);
	}
};

ParamsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitParams(this);
	}
};




ScalaParser.ParamsContext = ParamsContext;

ScalaParser.prototype.params = function() {

    var localctx = new ParamsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, ScalaParser.RULE_params);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 894;
        this.param();
        this.state = 899;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 895;
            this.match(ScalaParser.T__3);
            this.state = 896;
            this.param();
            this.state = 901;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ParamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_param;
    return this;
}

ParamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParamContext.prototype.constructor = ParamContext;

ParamContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ParamContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

ParamContext.prototype.paramType = function() {
    return this.getTypedRuleContext(ParamTypeContext,0);
};

ParamContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

ParamContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterParam(this);
	}
};

ParamContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitParam(this);
	}
};




ScalaParser.ParamContext = ParamContext;

ScalaParser.prototype.param = function() {

    var localctx = new ParamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, ScalaParser.RULE_param);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 905;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__43) {
            this.state = 902;
            this.annotation();
            this.state = 907;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 908;
        this.match(ScalaParser.Id);
        this.state = 911;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__18) {
            this.state = 909;
            this.match(ScalaParser.T__18);
            this.state = 910;
            this.paramType();
        }

        this.state = 915;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__34) {
            this.state = 913;
            this.match(ScalaParser.T__34);
            this.state = 914;
            this.expr();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ParamTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_paramType;
    return this;
}

ParamTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParamTypeContext.prototype.constructor = ParamTypeContext;

ParamTypeContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

ParamTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterParamType(this);
	}
};

ParamTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitParamType(this);
	}
};




ScalaParser.ParamTypeContext = ParamTypeContext;

ScalaParser.prototype.paramType = function() {

    var localctx = new ParamTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, ScalaParser.RULE_paramType);
    try {
        this.state = 923;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,116,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 917;
            this.type();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 918;
            this.match(ScalaParser.T__8);
            this.state = 919;
            this.type();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 920;
            this.type();
            this.state = 921;
            this.match(ScalaParser.T__20);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassParamClausesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classParamClauses;
    return this;
}

ClassParamClausesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassParamClausesContext.prototype.constructor = ClassParamClausesContext;

ClassParamClausesContext.prototype.classParamClause = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ClassParamClauseContext);
    } else {
        return this.getTypedRuleContext(ClassParamClauseContext,i);
    }
};

ClassParamClausesContext.prototype.classParams = function() {
    return this.getTypedRuleContext(ClassParamsContext,0);
};

ClassParamClausesContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassParamClauses(this);
	}
};

ClassParamClausesContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassParamClauses(this);
	}
};




ScalaParser.ClassParamClausesContext = ClassParamClausesContext;

ScalaParser.prototype.classParamClauses = function() {

    var localctx = new ClassParamClausesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, ScalaParser.RULE_classParamClauses);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 928;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,117,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 925;
                this.classParamClause(); 
            }
            this.state = 930;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,117,this._ctx);
        }

        this.state = 936;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,118,this._ctx);
        if(la_===1) {
            this.state = 931;
            this.match(ScalaParser.T__9);
            this.state = 932;
            this.match(ScalaParser.T__21);
            this.state = 933;
            this.classParams();
            this.state = 934;
            this.match(ScalaParser.T__10);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassParamClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classParamClause;
    return this;
}

ClassParamClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassParamClauseContext.prototype.constructor = ClassParamClauseContext;

ClassParamClauseContext.prototype.classParams = function() {
    return this.getTypedRuleContext(ClassParamsContext,0);
};

ClassParamClauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassParamClause(this);
	}
};

ClassParamClauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassParamClause(this);
	}
};




ScalaParser.ClassParamClauseContext = ClassParamClauseContext;

ScalaParser.prototype.classParamClause = function() {

    var localctx = new ClassParamClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, ScalaParser.RULE_classParamClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 938;
        this.match(ScalaParser.T__9);
        this.state = 940;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__15 || _la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__43 - 40)) | (1 << (ScalaParser.T__47 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)) | (1 << (ScalaParser.Id - 40)))) !== 0)) {
            this.state = 939;
            this.classParams();
        }

        this.state = 942;
        this.match(ScalaParser.T__10);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassParamsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classParams;
    return this;
}

ClassParamsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassParamsContext.prototype.constructor = ClassParamsContext;

ClassParamsContext.prototype.classParam = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ClassParamContext);
    } else {
        return this.getTypedRuleContext(ClassParamContext,i);
    }
};

ClassParamsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassParams(this);
	}
};

ClassParamsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassParams(this);
	}
};




ScalaParser.ClassParamsContext = ClassParamsContext;

ScalaParser.prototype.classParams = function() {

    var localctx = new ClassParamsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, ScalaParser.RULE_classParams);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 944;
        this.classParam();
        this.state = 949;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 945;
            this.match(ScalaParser.T__3);
            this.state = 946;
            this.classParam();
            this.state = 951;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassParamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classParam;
    return this;
}

ClassParamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassParamContext.prototype.constructor = ClassParamContext;

ClassParamContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ClassParamContext.prototype.paramType = function() {
    return this.getTypedRuleContext(ParamTypeContext,0);
};

ClassParamContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

ClassParamContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

ClassParamContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

ClassParamContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassParam(this);
	}
};

ClassParamContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassParam(this);
	}
};




ScalaParser.ClassParamContext = ClassParamContext;

ScalaParser.prototype.classParam = function() {

    var localctx = new ClassParamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, ScalaParser.RULE_classParam);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 955;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__43) {
            this.state = 952;
            this.annotation();
            this.state = 957;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 961;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)))) !== 0)) {
            this.state = 958;
            this.modifier();
            this.state = 963;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 965;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__15 || _la===ScalaParser.T__47) {
            this.state = 964;
            _la = this._input.LA(1);
            if(!(_la===ScalaParser.T__15 || _la===ScalaParser.T__47)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
        }

        this.state = 967;
        this.match(ScalaParser.Id);
        this.state = 968;
        this.match(ScalaParser.T__18);
        this.state = 969;
        this.paramType();
        this.state = 972;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__34) {
            this.state = 970;
            this.match(ScalaParser.T__34);
            this.state = 971;
            this.expr();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function BindingsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_bindings;
    return this;
}

BindingsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BindingsContext.prototype.constructor = BindingsContext;

BindingsContext.prototype.binding = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BindingContext);
    } else {
        return this.getTypedRuleContext(BindingContext,i);
    }
};

BindingsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterBindings(this);
	}
};

BindingsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitBindings(this);
	}
};




ScalaParser.BindingsContext = BindingsContext;

ScalaParser.prototype.bindings = function() {

    var localctx = new BindingsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, ScalaParser.RULE_bindings);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 974;
        this.match(ScalaParser.T__9);
        this.state = 975;
        this.binding();
        this.state = 980;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 976;
            this.match(ScalaParser.T__3);
            this.state = 977;
            this.binding();
            this.state = 982;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 983;
        this.match(ScalaParser.T__10);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function BindingContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_binding;
    return this;
}

BindingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BindingContext.prototype.constructor = BindingContext;

BindingContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

BindingContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

BindingContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterBinding(this);
	}
};

BindingContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitBinding(this);
	}
};




ScalaParser.BindingContext = BindingContext;

ScalaParser.prototype.binding = function() {

    var localctx = new BindingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, ScalaParser.RULE_binding);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 985;
        _la = this._input.LA(1);
        if(!(_la===ScalaParser.T__19 || _la===ScalaParser.Id)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
        this.state = 988;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__18) {
            this.state = 986;
            this.match(ScalaParser.T__18);
            this.state = 987;
            this.type();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_modifier;
    return this;
}

ModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModifierContext.prototype.constructor = ModifierContext;

ModifierContext.prototype.localModifier = function() {
    return this.getTypedRuleContext(LocalModifierContext,0);
};

ModifierContext.prototype.accessModifier = function() {
    return this.getTypedRuleContext(AccessModifierContext,0);
};

ModifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterModifier(this);
	}
};

ModifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitModifier(this);
	}
};




ScalaParser.ModifierContext = ModifierContext;

ScalaParser.prototype.modifier = function() {

    var localctx = new ModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, ScalaParser.RULE_modifier);
    try {
        this.state = 993;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__21:
        case ScalaParser.T__39:
        case ScalaParser.T__49:
        case ScalaParser.T__50:
        case ScalaParser.T__51:
            this.enterOuterAlt(localctx, 1);
            this.state = 990;
            this.localModifier();
            break;
        case ScalaParser.T__52:
        case ScalaParser.T__53:
            this.enterOuterAlt(localctx, 2);
            this.state = 991;
            this.accessModifier();
            break;
        case ScalaParser.T__48:
            this.enterOuterAlt(localctx, 3);
            this.state = 992;
            this.match(ScalaParser.T__48);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function LocalModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_localModifier;
    return this;
}

LocalModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LocalModifierContext.prototype.constructor = LocalModifierContext;


LocalModifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterLocalModifier(this);
	}
};

LocalModifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitLocalModifier(this);
	}
};




ScalaParser.LocalModifierContext = LocalModifierContext;

ScalaParser.prototype.localModifier = function() {

    var localctx = new LocalModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, ScalaParser.RULE_localModifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 995;
        _la = this._input.LA(1);
        if(!(((((_la - 22)) & ~0x1f) == 0 && ((1 << (_la - 22)) & ((1 << (ScalaParser.T__21 - 22)) | (1 << (ScalaParser.T__39 - 22)) | (1 << (ScalaParser.T__49 - 22)) | (1 << (ScalaParser.T__50 - 22)) | (1 << (ScalaParser.T__51 - 22)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function AccessModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_accessModifier;
    return this;
}

AccessModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AccessModifierContext.prototype.constructor = AccessModifierContext;

AccessModifierContext.prototype.accessQualifier = function() {
    return this.getTypedRuleContext(AccessQualifierContext,0);
};

AccessModifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterAccessModifier(this);
	}
};

AccessModifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitAccessModifier(this);
	}
};




ScalaParser.AccessModifierContext = AccessModifierContext;

ScalaParser.prototype.accessModifier = function() {

    var localctx = new AccessModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, ScalaParser.RULE_accessModifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 997;
        _la = this._input.LA(1);
        if(!(_la===ScalaParser.T__52 || _la===ScalaParser.T__53)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
        this.state = 999;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 998;
            this.accessQualifier();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function AccessQualifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_accessQualifier;
    return this;
}

AccessQualifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AccessQualifierContext.prototype.constructor = AccessQualifierContext;

AccessQualifierContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

AccessQualifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterAccessQualifier(this);
	}
};

AccessQualifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitAccessQualifier(this);
	}
};




ScalaParser.AccessQualifierContext = AccessQualifierContext;

ScalaParser.prototype.accessQualifier = function() {

    var localctx = new AccessQualifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, ScalaParser.RULE_accessQualifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1001;
        this.match(ScalaParser.T__6);
        this.state = 1002;
        _la = this._input.LA(1);
        if(!(_la===ScalaParser.T__4 || _la===ScalaParser.Id)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
        this.state = 1003;
        this.match(ScalaParser.T__7);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function AnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.simpleType = function() {
    return this.getTypedRuleContext(SimpleTypeContext,0);
};

AnnotationContext.prototype.argumentExprs = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ArgumentExprsContext);
    } else {
        return this.getTypedRuleContext(ArgumentExprsContext,i);
    }
};

AnnotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterAnnotation(this);
	}
};

AnnotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitAnnotation(this);
	}
};




ScalaParser.AnnotationContext = AnnotationContext;

ScalaParser.prototype.annotation = function() {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, ScalaParser.RULE_annotation);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1005;
        this.match(ScalaParser.T__43);
        this.state = 1006;
        this.simpleType(0);
        this.state = 1010;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,129,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1007;
                this.argumentExprs(); 
            }
            this.state = 1012;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,129,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ConstrAnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_constrAnnotation;
    return this;
}

ConstrAnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstrAnnotationContext.prototype.constructor = ConstrAnnotationContext;

ConstrAnnotationContext.prototype.simpleType = function() {
    return this.getTypedRuleContext(SimpleTypeContext,0);
};

ConstrAnnotationContext.prototype.argumentExprs = function() {
    return this.getTypedRuleContext(ArgumentExprsContext,0);
};

ConstrAnnotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterConstrAnnotation(this);
	}
};

ConstrAnnotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitConstrAnnotation(this);
	}
};




ScalaParser.ConstrAnnotationContext = ConstrAnnotationContext;

ScalaParser.prototype.constrAnnotation = function() {

    var localctx = new ConstrAnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, ScalaParser.RULE_constrAnnotation);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1013;
        this.match(ScalaParser.T__43);
        this.state = 1014;
        this.simpleType(0);
        this.state = 1015;
        this.argumentExprs();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TemplateBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_templateBody;
    return this;
}

TemplateBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateBodyContext.prototype.constructor = TemplateBodyContext;

TemplateBodyContext.prototype.templateStat = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TemplateStatContext);
    } else {
        return this.getTypedRuleContext(TemplateStatContext,i);
    }
};

TemplateBodyContext.prototype.NL = function() {
    return this.getToken(ScalaParser.NL, 0);
};

TemplateBodyContext.prototype.selfType = function() {
    return this.getTypedRuleContext(SelfTypeContext,0);
};

TemplateBodyContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


TemplateBodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTemplateBody(this);
	}
};

TemplateBodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTemplateBody(this);
	}
};




ScalaParser.TemplateBodyContext = TemplateBodyContext;

ScalaParser.prototype.templateBody = function() {

    var localctx = new TemplateBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, ScalaParser.RULE_templateBody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1018;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.NL) {
            this.state = 1017;
            this.match(ScalaParser.NL);
        }

        this.state = 1020;
        this.match(ScalaParser.T__12);
        this.state = 1022;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,131,this._ctx);
        if(la_===1) {
            this.state = 1021;
            this.selfType();

        }
        this.state = 1024;
        this.templateStat();
        this.state = 1029;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Sep) {
            this.state = 1025;
            this.match(ScalaParser.Sep);
            this.state = 1026;
            this.templateStat();
            this.state = 1031;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1032;
        this.match(ScalaParser.T__13);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TemplateStatContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_templateStat;
    return this;
}

TemplateStatContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateStatContext.prototype.constructor = TemplateStatContext;

TemplateStatContext.prototype.import_ = function() {
    return this.getTypedRuleContext(Import_Context,0);
};

TemplateStatContext.prototype.def = function() {
    return this.getTypedRuleContext(DefContext,0);
};

TemplateStatContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

TemplateStatContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

TemplateStatContext.prototype.dcl = function() {
    return this.getTypedRuleContext(DclContext,0);
};

TemplateStatContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

TemplateStatContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTemplateStat(this);
	}
};

TemplateStatContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTemplateStat(this);
	}
};




ScalaParser.TemplateStatContext = TemplateStatContext;

ScalaParser.prototype.templateStat = function() {

    var localctx = new TemplateStatContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, ScalaParser.RULE_templateStat);
    var _la = 0; // Token type
    try {
        this.state = 1063;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,137,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1034;
            this.import_();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1038;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__43) {
                this.state = 1035;
                this.annotation();
                this.state = 1040;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1044;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)))) !== 0)) {
                this.state = 1041;
                this.modifier();
                this.state = 1046;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1047;
            this.def();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1051;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__43) {
                this.state = 1048;
                this.annotation();
                this.state = 1053;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1057;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)))) !== 0)) {
                this.state = 1054;
                this.modifier();
                this.state = 1059;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1060;
            this.dcl();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1061;
            this.expr();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function SelfTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_selfType;
    return this;
}

SelfTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelfTypeContext.prototype.constructor = SelfTypeContext;

SelfTypeContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

SelfTypeContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

SelfTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterSelfType(this);
	}
};

SelfTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitSelfType(this);
	}
};




ScalaParser.SelfTypeContext = SelfTypeContext;

ScalaParser.prototype.selfType = function() {

    var localctx = new SelfTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, ScalaParser.RULE_selfType);
    var _la = 0; // Token type
    try {
        this.state = 1076;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.Id:
            this.enterOuterAlt(localctx, 1);
            this.state = 1065;
            this.match(ScalaParser.Id);
            this.state = 1068;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__18) {
                this.state = 1066;
                this.match(ScalaParser.T__18);
                this.state = 1067;
                this.type();
            }

            this.state = 1070;
            this.match(ScalaParser.T__8);
            break;
        case ScalaParser.T__4:
            this.enterOuterAlt(localctx, 2);
            this.state = 1071;
            this.match(ScalaParser.T__4);
            this.state = 1072;
            this.match(ScalaParser.T__18);
            this.state = 1073;
            this.type();
            this.state = 1074;
            this.match(ScalaParser.T__8);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Import_Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_import_;
    return this;
}

Import_Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Import_Context.prototype.constructor = Import_Context;

Import_Context.prototype.importExpr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ImportExprContext);
    } else {
        return this.getTypedRuleContext(ImportExprContext,i);
    }
};

Import_Context.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterImport_(this);
	}
};

Import_Context.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitImport_(this);
	}
};




ScalaParser.Import_Context = Import_Context;

ScalaParser.prototype.import_ = function() {

    var localctx = new Import_Context(this, this._ctx, this.state);
    this.enterRule(localctx, 132, ScalaParser.RULE_import_);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1078;
        this.match(ScalaParser.T__54);
        this.state = 1079;
        this.importExpr();
        this.state = 1084;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 1080;
            this.match(ScalaParser.T__3);
            this.state = 1081;
            this.importExpr();
            this.state = 1086;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ImportExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_importExpr;
    return this;
}

ImportExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImportExprContext.prototype.constructor = ImportExprContext;

ImportExprContext.prototype.stableId = function() {
    return this.getTypedRuleContext(StableIdContext,0);
};

ImportExprContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ImportExprContext.prototype.importSelectors = function() {
    return this.getTypedRuleContext(ImportSelectorsContext,0);
};

ImportExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterImportExpr(this);
	}
};

ImportExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitImportExpr(this);
	}
};




ScalaParser.ImportExprContext = ImportExprContext;

ScalaParser.prototype.importExpr = function() {

    var localctx = new ImportExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, ScalaParser.RULE_importExpr);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1087;
        this.stableId();
        this.state = 1088;
        this.match(ScalaParser.T__2);
        this.state = 1092;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.Id:
            this.state = 1089;
            this.match(ScalaParser.Id);
            break;
        case ScalaParser.T__19:
            this.state = 1090;
            this.match(ScalaParser.T__19);
            break;
        case ScalaParser.T__12:
            this.state = 1091;
            this.importSelectors();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ImportSelectorsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_importSelectors;
    return this;
}

ImportSelectorsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImportSelectorsContext.prototype.constructor = ImportSelectorsContext;

ImportSelectorsContext.prototype.importSelector = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ImportSelectorContext);
    } else {
        return this.getTypedRuleContext(ImportSelectorContext,i);
    }
};

ImportSelectorsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterImportSelectors(this);
	}
};

ImportSelectorsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitImportSelectors(this);
	}
};




ScalaParser.ImportSelectorsContext = ImportSelectorsContext;

ScalaParser.prototype.importSelectors = function() {

    var localctx = new ImportSelectorsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, ScalaParser.RULE_importSelectors);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1094;
        this.match(ScalaParser.T__12);
        this.state = 1100;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,142,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1095;
                this.importSelector();
                this.state = 1096;
                this.match(ScalaParser.T__3); 
            }
            this.state = 1102;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,142,this._ctx);
        }

        this.state = 1105;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.Id:
            this.state = 1103;
            this.importSelector();
            break;
        case ScalaParser.T__19:
            this.state = 1104;
            this.match(ScalaParser.T__19);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1107;
        this.match(ScalaParser.T__13);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ImportSelectorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_importSelector;
    return this;
}

ImportSelectorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImportSelectorContext.prototype.constructor = ImportSelectorContext;

ImportSelectorContext.prototype.Id = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Id);
    } else {
        return this.getToken(ScalaParser.Id, i);
    }
};


ImportSelectorContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterImportSelector(this);
	}
};

ImportSelectorContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitImportSelector(this);
	}
};




ScalaParser.ImportSelectorContext = ImportSelectorContext;

ScalaParser.prototype.importSelector = function() {

    var localctx = new ImportSelectorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, ScalaParser.RULE_importSelector);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1109;
        this.match(ScalaParser.Id);
        this.state = 1114;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,144,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1110;
            this.match(ScalaParser.T__8);
            this.state = 1111;
            this.match(ScalaParser.Id);
            break;

        case 2:
            this.state = 1112;
            this.match(ScalaParser.T__8);
            this.state = 1113;
            this.match(ScalaParser.T__19);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function DclContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_dcl;
    return this;
}

DclContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DclContext.prototype.constructor = DclContext;

DclContext.prototype.valDcl = function() {
    return this.getTypedRuleContext(ValDclContext,0);
};

DclContext.prototype.varDcl = function() {
    return this.getTypedRuleContext(VarDclContext,0);
};

DclContext.prototype.funDcl = function() {
    return this.getTypedRuleContext(FunDclContext,0);
};

DclContext.prototype.typeDcl = function() {
    return this.getTypedRuleContext(TypeDclContext,0);
};

DclContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterDcl(this);
	}
};

DclContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitDcl(this);
	}
};




ScalaParser.DclContext = DclContext;

ScalaParser.prototype.dcl = function() {

    var localctx = new DclContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, ScalaParser.RULE_dcl);
    try {
        this.state = 1124;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__15:
            this.enterOuterAlt(localctx, 1);
            this.state = 1116;
            this.match(ScalaParser.T__15);
            this.state = 1117;
            this.valDcl();
            break;
        case ScalaParser.T__47:
            this.enterOuterAlt(localctx, 2);
            this.state = 1118;
            this.match(ScalaParser.T__47);
            this.state = 1119;
            this.varDcl();
            break;
        case ScalaParser.T__55:
            this.enterOuterAlt(localctx, 3);
            this.state = 1120;
            this.match(ScalaParser.T__55);
            this.state = 1121;
            this.funDcl();
            break;
        case ScalaParser.T__14:
            this.enterOuterAlt(localctx, 4);
            this.state = 1122;
            this.match(ScalaParser.T__14);
            this.state = 1123;
            this.typeDcl();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ValDclContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_valDcl;
    return this;
}

ValDclContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ValDclContext.prototype.constructor = ValDclContext;

ValDclContext.prototype.ids = function() {
    return this.getTypedRuleContext(IdsContext,0);
};

ValDclContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

ValDclContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterValDcl(this);
	}
};

ValDclContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitValDcl(this);
	}
};




ScalaParser.ValDclContext = ValDclContext;

ScalaParser.prototype.valDcl = function() {

    var localctx = new ValDclContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, ScalaParser.RULE_valDcl);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1126;
        this.ids();
        this.state = 1127;
        this.match(ScalaParser.T__18);
        this.state = 1128;
        this.type();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function VarDclContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_varDcl;
    return this;
}

VarDclContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VarDclContext.prototype.constructor = VarDclContext;

VarDclContext.prototype.ids = function() {
    return this.getTypedRuleContext(IdsContext,0);
};

VarDclContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

VarDclContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterVarDcl(this);
	}
};

VarDclContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitVarDcl(this);
	}
};




ScalaParser.VarDclContext = VarDclContext;

ScalaParser.prototype.varDcl = function() {

    var localctx = new VarDclContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, ScalaParser.RULE_varDcl);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1130;
        this.ids();
        this.state = 1131;
        this.match(ScalaParser.T__18);
        this.state = 1132;
        this.type();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function FunDclContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_funDcl;
    return this;
}

FunDclContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunDclContext.prototype.constructor = FunDclContext;

FunDclContext.prototype.funSig = function() {
    return this.getTypedRuleContext(FunSigContext,0);
};

FunDclContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

FunDclContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterFunDcl(this);
	}
};

FunDclContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitFunDcl(this);
	}
};




ScalaParser.FunDclContext = FunDclContext;

ScalaParser.prototype.funDcl = function() {

    var localctx = new FunDclContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, ScalaParser.RULE_funDcl);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1134;
        this.funSig();
        this.state = 1137;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__18) {
            this.state = 1135;
            this.match(ScalaParser.T__18);
            this.state = 1136;
            this.type();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function FunSigContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_funSig;
    return this;
}

FunSigContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunSigContext.prototype.constructor = FunSigContext;

FunSigContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

FunSigContext.prototype.paramClauses = function() {
    return this.getTypedRuleContext(ParamClausesContext,0);
};

FunSigContext.prototype.funTypeParamClause = function() {
    return this.getTypedRuleContext(FunTypeParamClauseContext,0);
};

FunSigContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterFunSig(this);
	}
};

FunSigContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitFunSig(this);
	}
};




ScalaParser.FunSigContext = FunSigContext;

ScalaParser.prototype.funSig = function() {

    var localctx = new FunSigContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, ScalaParser.RULE_funSig);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1139;
        this.match(ScalaParser.Id);
        this.state = 1141;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 1140;
            this.funTypeParamClause();
        }

        this.state = 1143;
        this.paramClauses();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypeDclContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_typeDcl;
    return this;
}

TypeDclContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeDclContext.prototype.constructor = TypeDclContext;

TypeDclContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

TypeDclContext.prototype.typeParamClause = function() {
    return this.getTypedRuleContext(TypeParamClauseContext,0);
};

TypeDclContext.prototype.type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeContext);
    } else {
        return this.getTypedRuleContext(TypeContext,i);
    }
};

TypeDclContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypeDcl(this);
	}
};

TypeDclContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypeDcl(this);
	}
};




ScalaParser.TypeDclContext = TypeDclContext;

ScalaParser.prototype.typeDcl = function() {

    var localctx = new TypeDclContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, ScalaParser.RULE_typeDcl);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1145;
        this.match(ScalaParser.Id);
        this.state = 1147;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 1146;
            this.typeParamClause();
        }

        this.state = 1151;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__44) {
            this.state = 1149;
            this.match(ScalaParser.T__44);
            this.state = 1150;
            this.type();
        }

        this.state = 1155;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__45) {
            this.state = 1153;
            this.match(ScalaParser.T__45);
            this.state = 1154;
            this.type();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PatVarDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_patVarDef;
    return this;
}

PatVarDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PatVarDefContext.prototype.constructor = PatVarDefContext;

PatVarDefContext.prototype.patDef = function() {
    return this.getTypedRuleContext(PatDefContext,0);
};

PatVarDefContext.prototype.varDef = function() {
    return this.getTypedRuleContext(VarDefContext,0);
};

PatVarDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPatVarDef(this);
	}
};

PatVarDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPatVarDef(this);
	}
};




ScalaParser.PatVarDefContext = PatVarDefContext;

ScalaParser.prototype.patVarDef = function() {

    var localctx = new PatVarDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, ScalaParser.RULE_patVarDef);
    try {
        this.state = 1161;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__15:
            this.enterOuterAlt(localctx, 1);
            this.state = 1157;
            this.match(ScalaParser.T__15);
            this.state = 1158;
            this.patDef();
            break;
        case ScalaParser.T__47:
            this.enterOuterAlt(localctx, 2);
            this.state = 1159;
            this.match(ScalaParser.T__47);
            this.state = 1160;
            this.varDef();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function DefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_def;
    return this;
}

DefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DefContext.prototype.constructor = DefContext;

DefContext.prototype.patVarDef = function() {
    return this.getTypedRuleContext(PatVarDefContext,0);
};

DefContext.prototype.funDef = function() {
    return this.getTypedRuleContext(FunDefContext,0);
};

DefContext.prototype.typeDef = function() {
    return this.getTypedRuleContext(TypeDefContext,0);
};

DefContext.prototype.tmplDef = function() {
    return this.getTypedRuleContext(TmplDefContext,0);
};

DefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterDef(this);
	}
};

DefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitDef(this);
	}
};




ScalaParser.DefContext = DefContext;

ScalaParser.prototype.def = function() {

    var localctx = new DefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, ScalaParser.RULE_def);
    try {
        this.state = 1169;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__15:
        case ScalaParser.T__47:
            this.enterOuterAlt(localctx, 1);
            this.state = 1163;
            this.patVarDef();
            break;
        case ScalaParser.T__55:
            this.enterOuterAlt(localctx, 2);
            this.state = 1164;
            this.match(ScalaParser.T__55);
            this.state = 1165;
            this.funDef();
            break;
        case ScalaParser.T__14:
            this.enterOuterAlt(localctx, 3);
            this.state = 1166;
            this.match(ScalaParser.T__14);
            this.state = 1167;
            this.typeDef();
            break;
        case ScalaParser.T__41:
        case ScalaParser.T__56:
        case ScalaParser.T__57:
        case ScalaParser.T__58:
            this.enterOuterAlt(localctx, 4);
            this.state = 1168;
            this.tmplDef();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PatDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_patDef;
    return this;
}

PatDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PatDefContext.prototype.constructor = PatDefContext;

PatDefContext.prototype.pattern2 = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern2Context);
    } else {
        return this.getTypedRuleContext(Pattern2Context,i);
    }
};

PatDefContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

PatDefContext.prototype.type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeContext);
    } else {
        return this.getTypedRuleContext(TypeContext,i);
    }
};

PatDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPatDef(this);
	}
};

PatDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPatDef(this);
	}
};




ScalaParser.PatDefContext = PatDefContext;

ScalaParser.prototype.patDef = function() {

    var localctx = new PatDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, ScalaParser.RULE_patDef);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1171;
        this.pattern2();
        this.state = 1176;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__3) {
            this.state = 1172;
            this.match(ScalaParser.T__3);
            this.state = 1173;
            this.pattern2();
            this.state = 1178;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1183;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__18) {
            this.state = 1179;
            this.match(ScalaParser.T__18);
            this.state = 1180;
            this.type();
            this.state = 1185;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1186;
        this.match(ScalaParser.T__34);
        this.state = 1187;
        this.expr();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function VarDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_varDef;
    return this;
}

VarDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VarDefContext.prototype.constructor = VarDefContext;

VarDefContext.prototype.patDef = function() {
    return this.getTypedRuleContext(PatDefContext,0);
};

VarDefContext.prototype.ids = function() {
    return this.getTypedRuleContext(IdsContext,0);
};

VarDefContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

VarDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterVarDef(this);
	}
};

VarDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitVarDef(this);
	}
};




ScalaParser.VarDefContext = VarDefContext;

ScalaParser.prototype.varDef = function() {

    var localctx = new VarDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, ScalaParser.RULE_varDef);
    try {
        this.state = 1196;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,155,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1189;
            this.patDef();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1190;
            this.ids();
            this.state = 1191;
            this.match(ScalaParser.T__18);
            this.state = 1192;
            this.type();
            this.state = 1193;
            this.match(ScalaParser.T__34);
            this.state = 1194;
            this.match(ScalaParser.T__19);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function FunDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_funDef;
    return this;
}

FunDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunDefContext.prototype.constructor = FunDefContext;

FunDefContext.prototype.funSig = function() {
    return this.getTypedRuleContext(FunSigContext,0);
};

FunDefContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

FunDefContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

FunDefContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

FunDefContext.prototype.paramClause = function() {
    return this.getTypedRuleContext(ParamClauseContext,0);
};

FunDefContext.prototype.paramClauses = function() {
    return this.getTypedRuleContext(ParamClausesContext,0);
};

FunDefContext.prototype.constrExpr = function() {
    return this.getTypedRuleContext(ConstrExprContext,0);
};

FunDefContext.prototype.constrBlock = function() {
    return this.getTypedRuleContext(ConstrBlockContext,0);
};

FunDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterFunDef(this);
	}
};

FunDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitFunDef(this);
	}
};




ScalaParser.FunDefContext = FunDefContext;

ScalaParser.prototype.funDef = function() {

    var localctx = new FunDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, ScalaParser.RULE_funDef);
    var _la = 0; // Token type
    try {
        this.state = 1219;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,158,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1198;
            this.funSig();
            this.state = 1201;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__18) {
                this.state = 1199;
                this.match(ScalaParser.T__18);
                this.state = 1200;
                this.type();
            }

            this.state = 1203;
            this.match(ScalaParser.T__34);
            this.state = 1204;
            this.expr();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1206;
            this.funSig();
            this.state = 1207;
            this.match(ScalaParser.T__12);
            this.state = 1208;
            this.block();
            this.state = 1209;
            this.match(ScalaParser.T__13);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1211;
            this.match(ScalaParser.T__4);
            this.state = 1212;
            this.paramClause();
            this.state = 1213;
            this.paramClauses();
            this.state = 1217;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case ScalaParser.T__34:
                this.state = 1214;
                this.match(ScalaParser.T__34);
                this.state = 1215;
                this.constrExpr();
                break;
            case ScalaParser.T__12:
                this.state = 1216;
                this.constrBlock();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TypeDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_typeDef;
    return this;
}

TypeDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeDefContext.prototype.constructor = TypeDefContext;

TypeDefContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

TypeDefContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

TypeDefContext.prototype.typeParamClause = function() {
    return this.getTypedRuleContext(TypeParamClauseContext,0);
};

TypeDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTypeDef(this);
	}
};

TypeDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTypeDef(this);
	}
};




ScalaParser.TypeDefContext = TypeDefContext;

ScalaParser.prototype.typeDef = function() {

    var localctx = new TypeDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, ScalaParser.RULE_typeDef);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1221;
        this.match(ScalaParser.Id);
        this.state = 1223;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 1222;
            this.typeParamClause();
        }

        this.state = 1225;
        this.match(ScalaParser.T__34);
        this.state = 1226;
        this.type();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TmplDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_tmplDef;
    return this;
}

TmplDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TmplDefContext.prototype.constructor = TmplDefContext;

TmplDefContext.prototype.classDef = function() {
    return this.getTypedRuleContext(ClassDefContext,0);
};

TmplDefContext.prototype.objectDef = function() {
    return this.getTypedRuleContext(ObjectDefContext,0);
};

TmplDefContext.prototype.traitDef = function() {
    return this.getTypedRuleContext(TraitDefContext,0);
};

TmplDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTmplDef(this);
	}
};

TmplDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTmplDef(this);
	}
};




ScalaParser.TmplDefContext = TmplDefContext;

ScalaParser.prototype.tmplDef = function() {

    var localctx = new TmplDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, ScalaParser.RULE_tmplDef);
    var _la = 0; // Token type
    try {
        this.state = 1240;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,162,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1229;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__41) {
                this.state = 1228;
                this.match(ScalaParser.T__41);
            }

            this.state = 1231;
            this.match(ScalaParser.T__56);
            this.state = 1232;
            this.classDef();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1234;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===ScalaParser.T__41) {
                this.state = 1233;
                this.match(ScalaParser.T__41);
            }

            this.state = 1236;
            this.match(ScalaParser.T__57);
            this.state = 1237;
            this.objectDef();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1238;
            this.match(ScalaParser.T__58);
            this.state = 1239;
            this.traitDef();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classDef;
    return this;
}

ClassDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassDefContext.prototype.constructor = ClassDefContext;

ClassDefContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ClassDefContext.prototype.classParamClauses = function() {
    return this.getTypedRuleContext(ClassParamClausesContext,0);
};

ClassDefContext.prototype.classTemplateOpt = function() {
    return this.getTypedRuleContext(ClassTemplateOptContext,0);
};

ClassDefContext.prototype.typeParamClause = function() {
    return this.getTypedRuleContext(TypeParamClauseContext,0);
};

ClassDefContext.prototype.constrAnnotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ConstrAnnotationContext);
    } else {
        return this.getTypedRuleContext(ConstrAnnotationContext,i);
    }
};

ClassDefContext.prototype.accessModifier = function() {
    return this.getTypedRuleContext(AccessModifierContext,0);
};

ClassDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassDef(this);
	}
};

ClassDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassDef(this);
	}
};




ScalaParser.ClassDefContext = ClassDefContext;

ScalaParser.prototype.classDef = function() {

    var localctx = new ClassDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, ScalaParser.RULE_classDef);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1242;
        this.match(ScalaParser.Id);
        this.state = 1244;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 1243;
            this.typeParamClause();
        }

        this.state = 1249;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__43) {
            this.state = 1246;
            this.constrAnnotation();
            this.state = 1251;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1253;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__52 || _la===ScalaParser.T__53) {
            this.state = 1252;
            this.accessModifier();
        }

        this.state = 1255;
        this.classParamClauses();
        this.state = 1256;
        this.classTemplateOpt();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TraitDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_traitDef;
    return this;
}

TraitDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TraitDefContext.prototype.constructor = TraitDefContext;

TraitDefContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

TraitDefContext.prototype.traitTemplateOpt = function() {
    return this.getTypedRuleContext(TraitTemplateOptContext,0);
};

TraitDefContext.prototype.typeParamClause = function() {
    return this.getTypedRuleContext(TypeParamClauseContext,0);
};

TraitDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTraitDef(this);
	}
};

TraitDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTraitDef(this);
	}
};




ScalaParser.TraitDefContext = TraitDefContext;

ScalaParser.prototype.traitDef = function() {

    var localctx = new TraitDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, ScalaParser.RULE_traitDef);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1258;
        this.match(ScalaParser.Id);
        this.state = 1260;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__6) {
            this.state = 1259;
            this.typeParamClause();
        }

        this.state = 1262;
        this.traitTemplateOpt();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ObjectDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_objectDef;
    return this;
}

ObjectDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ObjectDefContext.prototype.constructor = ObjectDefContext;

ObjectDefContext.prototype.Id = function() {
    return this.getToken(ScalaParser.Id, 0);
};

ObjectDefContext.prototype.classTemplateOpt = function() {
    return this.getTypedRuleContext(ClassTemplateOptContext,0);
};

ObjectDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterObjectDef(this);
	}
};

ObjectDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitObjectDef(this);
	}
};




ScalaParser.ObjectDefContext = ObjectDefContext;

ScalaParser.prototype.objectDef = function() {

    var localctx = new ObjectDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, ScalaParser.RULE_objectDef);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1264;
        this.match(ScalaParser.Id);
        this.state = 1265;
        this.classTemplateOpt();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassTemplateOptContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classTemplateOpt;
    return this;
}

ClassTemplateOptContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassTemplateOptContext.prototype.constructor = ClassTemplateOptContext;

ClassTemplateOptContext.prototype.classTemplate = function() {
    return this.getTypedRuleContext(ClassTemplateContext,0);
};

ClassTemplateOptContext.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

ClassTemplateOptContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassTemplateOpt(this);
	}
};

ClassTemplateOptContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassTemplateOpt(this);
	}
};




ScalaParser.ClassTemplateOptContext = ClassTemplateOptContext;

ScalaParser.prototype.classTemplateOpt = function() {

    var localctx = new ClassTemplateOptContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, ScalaParser.RULE_classTemplateOpt);
    var _la = 0; // Token type
    try {
        this.state = 1275;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,169,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1267;
            this.match(ScalaParser.T__59);
            this.state = 1268;
            this.classTemplate();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1273;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,168,this._ctx);
            if(la_===1) {
                this.state = 1270;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.T__59) {
                    this.state = 1269;
                    this.match(ScalaParser.T__59);
                }

                this.state = 1272;
                this.templateBody();

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TraitTemplateOptContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_traitTemplateOpt;
    return this;
}

TraitTemplateOptContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TraitTemplateOptContext.prototype.constructor = TraitTemplateOptContext;

TraitTemplateOptContext.prototype.traitTemplate = function() {
    return this.getTypedRuleContext(TraitTemplateContext,0);
};

TraitTemplateOptContext.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

TraitTemplateOptContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTraitTemplateOpt(this);
	}
};

TraitTemplateOptContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTraitTemplateOpt(this);
	}
};




ScalaParser.TraitTemplateOptContext = TraitTemplateOptContext;

ScalaParser.prototype.traitTemplateOpt = function() {

    var localctx = new TraitTemplateOptContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, ScalaParser.RULE_traitTemplateOpt);
    var _la = 0; // Token type
    try {
        this.state = 1285;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,172,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1277;
            this.match(ScalaParser.T__59);
            this.state = 1278;
            this.traitTemplate();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1283;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,171,this._ctx);
            if(la_===1) {
                this.state = 1280;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===ScalaParser.T__59) {
                    this.state = 1279;
                    this.match(ScalaParser.T__59);
                }

                this.state = 1282;
                this.templateBody();

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassTemplateContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classTemplate;
    return this;
}

ClassTemplateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassTemplateContext.prototype.constructor = ClassTemplateContext;

ClassTemplateContext.prototype.classParents = function() {
    return this.getTypedRuleContext(ClassParentsContext,0);
};

ClassTemplateContext.prototype.earlyDefs = function() {
    return this.getTypedRuleContext(EarlyDefsContext,0);
};

ClassTemplateContext.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

ClassTemplateContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassTemplate(this);
	}
};

ClassTemplateContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassTemplate(this);
	}
};




ScalaParser.ClassTemplateContext = ClassTemplateContext;

ScalaParser.prototype.classTemplate = function() {

    var localctx = new ClassTemplateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, ScalaParser.RULE_classTemplate);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1288;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__12) {
            this.state = 1287;
            this.earlyDefs();
        }

        this.state = 1290;
        this.classParents();
        this.state = 1292;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,174,this._ctx);
        if(la_===1) {
            this.state = 1291;
            this.templateBody();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TraitTemplateContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_traitTemplate;
    return this;
}

TraitTemplateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TraitTemplateContext.prototype.constructor = TraitTemplateContext;

TraitTemplateContext.prototype.traitParents = function() {
    return this.getTypedRuleContext(TraitParentsContext,0);
};

TraitTemplateContext.prototype.earlyDefs = function() {
    return this.getTypedRuleContext(EarlyDefsContext,0);
};

TraitTemplateContext.prototype.templateBody = function() {
    return this.getTypedRuleContext(TemplateBodyContext,0);
};

TraitTemplateContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTraitTemplate(this);
	}
};

TraitTemplateContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTraitTemplate(this);
	}
};




ScalaParser.TraitTemplateContext = TraitTemplateContext;

ScalaParser.prototype.traitTemplate = function() {

    var localctx = new TraitTemplateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, ScalaParser.RULE_traitTemplate);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1295;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__12) {
            this.state = 1294;
            this.earlyDefs();
        }

        this.state = 1297;
        this.traitParents();
        this.state = 1299;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,176,this._ctx);
        if(la_===1) {
            this.state = 1298;
            this.templateBody();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ClassParentsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_classParents;
    return this;
}

ClassParentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassParentsContext.prototype.constructor = ClassParentsContext;

ClassParentsContext.prototype.constr = function() {
    return this.getTypedRuleContext(ConstrContext,0);
};

ClassParentsContext.prototype.annotType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotTypeContext);
    } else {
        return this.getTypedRuleContext(AnnotTypeContext,i);
    }
};

ClassParentsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterClassParents(this);
	}
};

ClassParentsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitClassParents(this);
	}
};




ScalaParser.ClassParentsContext = ClassParentsContext;

ScalaParser.prototype.classParents = function() {

    var localctx = new ClassParentsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, ScalaParser.RULE_classParents);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1301;
        this.constr();
        this.state = 1306;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,177,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1302;
                this.match(ScalaParser.T__16);
                this.state = 1303;
                this.annotType(); 
            }
            this.state = 1308;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,177,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TraitParentsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_traitParents;
    return this;
}

TraitParentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TraitParentsContext.prototype.constructor = TraitParentsContext;

TraitParentsContext.prototype.annotType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotTypeContext);
    } else {
        return this.getTypedRuleContext(AnnotTypeContext,i);
    }
};

TraitParentsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTraitParents(this);
	}
};

TraitParentsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTraitParents(this);
	}
};




ScalaParser.TraitParentsContext = TraitParentsContext;

ScalaParser.prototype.traitParents = function() {

    var localctx = new TraitParentsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, ScalaParser.RULE_traitParents);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1309;
        this.annotType();
        this.state = 1314;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__16) {
            this.state = 1310;
            this.match(ScalaParser.T__16);
            this.state = 1311;
            this.annotType();
            this.state = 1316;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ConstrContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_constr;
    return this;
}

ConstrContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstrContext.prototype.constructor = ConstrContext;

ConstrContext.prototype.annotType = function() {
    return this.getTypedRuleContext(AnnotTypeContext,0);
};

ConstrContext.prototype.argumentExprs = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ArgumentExprsContext);
    } else {
        return this.getTypedRuleContext(ArgumentExprsContext,i);
    }
};

ConstrContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterConstr(this);
	}
};

ConstrContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitConstr(this);
	}
};




ScalaParser.ConstrContext = ConstrContext;

ScalaParser.prototype.constr = function() {

    var localctx = new ConstrContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, ScalaParser.RULE_constr);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1317;
        this.annotType();
        this.state = 1321;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,179,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1318;
                this.argumentExprs(); 
            }
            this.state = 1323;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,179,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function EarlyDefsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_earlyDefs;
    return this;
}

EarlyDefsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EarlyDefsContext.prototype.constructor = EarlyDefsContext;

EarlyDefsContext.prototype.earlyDef = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(EarlyDefContext);
    } else {
        return this.getTypedRuleContext(EarlyDefContext,i);
    }
};

EarlyDefsContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


EarlyDefsContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterEarlyDefs(this);
	}
};

EarlyDefsContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitEarlyDefs(this);
	}
};




ScalaParser.EarlyDefsContext = EarlyDefsContext;

ScalaParser.prototype.earlyDefs = function() {

    var localctx = new EarlyDefsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, ScalaParser.RULE_earlyDefs);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1324;
        this.match(ScalaParser.T__12);
        this.state = 1333;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===ScalaParser.T__15 || _la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__43 - 40)) | (1 << (ScalaParser.T__47 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)))) !== 0)) {
            this.state = 1325;
            this.earlyDef();
            this.state = 1330;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.Sep) {
                this.state = 1326;
                this.match(ScalaParser.Sep);
                this.state = 1327;
                this.earlyDef();
                this.state = 1332;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
        }

        this.state = 1335;
        this.match(ScalaParser.T__13);
        this.state = 1336;
        this.match(ScalaParser.T__16);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function EarlyDefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_earlyDef;
    return this;
}

EarlyDefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EarlyDefContext.prototype.constructor = EarlyDefContext;

EarlyDefContext.prototype.patVarDef = function() {
    return this.getTypedRuleContext(PatVarDefContext,0);
};

EarlyDefContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

EarlyDefContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

EarlyDefContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterEarlyDef(this);
	}
};

EarlyDefContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitEarlyDef(this);
	}
};




ScalaParser.EarlyDefContext = EarlyDefContext;

ScalaParser.prototype.earlyDef = function() {

    var localctx = new EarlyDefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, ScalaParser.RULE_earlyDef);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1341;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__43) {
            this.state = 1338;
            this.annotation();
            this.state = 1343;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1347;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)))) !== 0)) {
            this.state = 1344;
            this.modifier();
            this.state = 1349;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1350;
        this.patVarDef();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ConstrExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_constrExpr;
    return this;
}

ConstrExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstrExprContext.prototype.constructor = ConstrExprContext;

ConstrExprContext.prototype.selfInvocation = function() {
    return this.getTypedRuleContext(SelfInvocationContext,0);
};

ConstrExprContext.prototype.constrBlock = function() {
    return this.getTypedRuleContext(ConstrBlockContext,0);
};

ConstrExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterConstrExpr(this);
	}
};

ConstrExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitConstrExpr(this);
	}
};




ScalaParser.ConstrExprContext = ConstrExprContext;

ScalaParser.prototype.constrExpr = function() {

    var localctx = new ConstrExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, ScalaParser.RULE_constrExpr);
    try {
        this.state = 1354;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case ScalaParser.T__4:
            this.enterOuterAlt(localctx, 1);
            this.state = 1352;
            this.selfInvocation();
            break;
        case ScalaParser.T__12:
            this.enterOuterAlt(localctx, 2);
            this.state = 1353;
            this.constrBlock();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ConstrBlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_constrBlock;
    return this;
}

ConstrBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstrBlockContext.prototype.constructor = ConstrBlockContext;

ConstrBlockContext.prototype.selfInvocation = function() {
    return this.getTypedRuleContext(SelfInvocationContext,0);
};

ConstrBlockContext.prototype.Semi = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Semi);
    } else {
        return this.getToken(ScalaParser.Semi, i);
    }
};


ConstrBlockContext.prototype.blockStat = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockStatContext);
    } else {
        return this.getTypedRuleContext(BlockStatContext,i);
    }
};

ConstrBlockContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterConstrBlock(this);
	}
};

ConstrBlockContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitConstrBlock(this);
	}
};




ScalaParser.ConstrBlockContext = ConstrBlockContext;

ScalaParser.prototype.constrBlock = function() {

    var localctx = new ConstrBlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, ScalaParser.RULE_constrBlock);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1356;
        this.match(ScalaParser.T__12);
        this.state = 1357;
        this.selfInvocation();
        this.state = 1362;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Semi) {
            this.state = 1358;
            this.match(ScalaParser.Semi);
            this.state = 1359;
            this.blockStat();
            this.state = 1364;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1365;
        this.match(ScalaParser.T__13);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function SelfInvocationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_selfInvocation;
    return this;
}

SelfInvocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelfInvocationContext.prototype.constructor = SelfInvocationContext;

SelfInvocationContext.prototype.argumentExprs = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ArgumentExprsContext);
    } else {
        return this.getTypedRuleContext(ArgumentExprsContext,i);
    }
};

SelfInvocationContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterSelfInvocation(this);
	}
};

SelfInvocationContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitSelfInvocation(this);
	}
};




ScalaParser.SelfInvocationContext = SelfInvocationContext;

ScalaParser.prototype.selfInvocation = function() {

    var localctx = new SelfInvocationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, ScalaParser.RULE_selfInvocation);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1367;
        this.match(ScalaParser.T__4);
        this.state = 1369; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 1368;
        		this.argumentExprs();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 1371; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,186, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TopStatSeqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_topStatSeq;
    return this;
}

TopStatSeqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TopStatSeqContext.prototype.constructor = TopStatSeqContext;

TopStatSeqContext.prototype.topStat = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TopStatContext);
    } else {
        return this.getTypedRuleContext(TopStatContext,i);
    }
};

TopStatSeqContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


TopStatSeqContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTopStatSeq(this);
	}
};

TopStatSeqContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTopStatSeq(this);
	}
};




ScalaParser.TopStatSeqContext = TopStatSeqContext;

ScalaParser.prototype.topStatSeq = function() {

    var localctx = new TopStatSeqContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, ScalaParser.RULE_topStatSeq);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1373;
        this.topStat();
        this.state = 1378;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ScalaParser.Sep) {
            this.state = 1374;
            this.match(ScalaParser.Sep);
            this.state = 1375;
            this.topStat();
            this.state = 1380;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TopStatContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_topStat;
    return this;
}

TopStatContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TopStatContext.prototype.constructor = TopStatContext;

TopStatContext.prototype.tmplDef = function() {
    return this.getTypedRuleContext(TmplDefContext,0);
};

TopStatContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

TopStatContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

TopStatContext.prototype.import_ = function() {
    return this.getTypedRuleContext(Import_Context,0);
};

TopStatContext.prototype.packaging = function() {
    return this.getTypedRuleContext(PackagingContext,0);
};

TopStatContext.prototype.packageObject = function() {
    return this.getTypedRuleContext(PackageObjectContext,0);
};

TopStatContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterTopStat(this);
	}
};

TopStatContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitTopStat(this);
	}
};




ScalaParser.TopStatContext = TopStatContext;

ScalaParser.prototype.topStat = function() {

    var localctx = new TopStatContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, ScalaParser.RULE_topStat);
    var _la = 0; // Token type
    try {
        this.state = 1398;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,190,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1384;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__43) {
                this.state = 1381;
                this.annotation();
                this.state = 1386;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1390;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ScalaParser.T__21 || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ScalaParser.T__39 - 40)) | (1 << (ScalaParser.T__48 - 40)) | (1 << (ScalaParser.T__49 - 40)) | (1 << (ScalaParser.T__50 - 40)) | (1 << (ScalaParser.T__51 - 40)) | (1 << (ScalaParser.T__52 - 40)) | (1 << (ScalaParser.T__53 - 40)))) !== 0)) {
                this.state = 1387;
                this.modifier();
                this.state = 1392;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1393;
            this.tmplDef();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1394;
            this.import_();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1395;
            this.packaging();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1396;
            this.packageObject();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PackagingContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_packaging;
    return this;
}

PackagingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PackagingContext.prototype.constructor = PackagingContext;

PackagingContext.prototype.qualId = function() {
    return this.getTypedRuleContext(QualIdContext,0);
};

PackagingContext.prototype.topStatSeq = function() {
    return this.getTypedRuleContext(TopStatSeqContext,0);
};

PackagingContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPackaging(this);
	}
};

PackagingContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPackaging(this);
	}
};




ScalaParser.PackagingContext = PackagingContext;

ScalaParser.prototype.packaging = function() {

    var localctx = new PackagingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, ScalaParser.RULE_packaging);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1400;
        this.match(ScalaParser.T__60);
        this.state = 1401;
        this.qualId();
        this.state = 1402;
        this.match(ScalaParser.T__12);
        this.state = 1403;
        this.topStatSeq();
        this.state = 1404;
        this.match(ScalaParser.T__13);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PackageObjectContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_packageObject;
    return this;
}

PackageObjectContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PackageObjectContext.prototype.constructor = PackageObjectContext;

PackageObjectContext.prototype.objectDef = function() {
    return this.getTypedRuleContext(ObjectDefContext,0);
};

PackageObjectContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterPackageObject(this);
	}
};

PackageObjectContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitPackageObject(this);
	}
};




ScalaParser.PackageObjectContext = PackageObjectContext;

ScalaParser.prototype.packageObject = function() {

    var localctx = new PackageObjectContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, ScalaParser.RULE_packageObject);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1406;
        this.match(ScalaParser.T__60);
        this.state = 1407;
        this.match(ScalaParser.T__57);
        this.state = 1408;
        this.objectDef();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CompilationUnitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ScalaParser.RULE_compilationUnit;
    return this;
}

CompilationUnitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CompilationUnitContext.prototype.constructor = CompilationUnitContext;

CompilationUnitContext.prototype.topStatSeq = function() {
    return this.getTypedRuleContext(TopStatSeqContext,0);
};

CompilationUnitContext.prototype.qualId = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QualIdContext);
    } else {
        return this.getTypedRuleContext(QualIdContext,i);
    }
};

CompilationUnitContext.prototype.Sep = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ScalaParser.Sep);
    } else {
        return this.getToken(ScalaParser.Sep, i);
    }
};


CompilationUnitContext.prototype.enterRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.enterCompilationUnit(this);
	}
};

CompilationUnitContext.prototype.exitRule = function(listener) {
    if(listener instanceof ScalaListener ) {
        listener.exitCompilationUnit(this);
	}
};




ScalaParser.CompilationUnitContext = CompilationUnitContext;

ScalaParser.prototype.compilationUnit = function() {

    var localctx = new CompilationUnitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, ScalaParser.RULE_compilationUnit);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1417;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,192,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1410;
                this.match(ScalaParser.T__60);
                this.state = 1411;
                this.qualId();
                this.state = 1413;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,191,this._ctx);
                if(la_===1) {
                    this.state = 1412;
                    this.match(ScalaParser.Sep);

                } 
            }
            this.state = 1419;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,192,this._ctx);
        }

        this.state = 1420;
        this.topStatSeq();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


ScalaParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 12:
			return this.simpleType_sempred(localctx, predIndex);
	case 22:
			return this.infixExpr_sempred(localctx, predIndex);
	case 24:
			return this.simpleExpr1_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

ScalaParser.prototype.simpleType_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 5);
		case 1:
			return this.precpred(this._ctx, 4);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

ScalaParser.prototype.infixExpr_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 2:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

ScalaParser.prototype.simpleExpr1_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 3:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.ScalaParser = ScalaParser;
